{"id":"bb1d0d5db45143da5915b3e889f1e018","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.28;\n\nimport {IAccessControlEnumerable} from \"./IAccessControlEnumerable.sol\";\nimport {AccessControl} from \"../AccessControl.sol\";\nimport {EnumerableSet} from \"../../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 role => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Return all accounts that have `role`\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function getRoleMembers(bytes32 role) public view virtual returns (address[] memory) {\n        return _roleMembers[role].values();\n    }\n\n    /**\n     * @dev Overload {AccessControl-_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool granted = super._grantRole(role, account);\n        if (granted) {\n            _roleMembers[role].add(account);\n        }\n        return granted;\n    }\n\n    /**\n     * @dev Overload {AccessControl-_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override returns (bool) {\n        bool revoked = super._revokeRole(role, account);\n        if (revoked) {\n            _roleMembers[role].remove(account);\n        }\n        return revoked;\n    }\n}\n"},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/extensions/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"../IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC-165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\nimport {Arrays} from \"../Arrays.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n * - Set can be cleared (all elements removed) in O(n).\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function _clear(Set storage set) private {\n        uint256 len = _length(set);\n        for (uint256 i = 0; i < len; ++i) {\n            delete set._positions[set._values[i]];\n        }\n        Arrays.unsafeSetLength(set._values, 0);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(Bytes32Set storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(AddressSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes all the values from a set. O(n).\n     *\n     * WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n     * function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block.\n     */\n    function clear(UintSet storage set) internal {\n        _clear(set._inner);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly (\"memory-safe\") {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/CXPTToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * Governance / rebate token – minted 1 : 1 when users withdraw\n * “asCxpt = true”.  Vault is the sole minter.\n */\ncontract CXPTToken is ERC20, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address vault) ERC20(\"CXMpute Token\", \"CXPT\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, vault);\n    }\n\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n}"},"contracts/SynthERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\"; // Provides burn and burnFrom\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\n\ncontract SynthERC20 is ERC20, ERC20Burnable, AccessControlEnumerable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\"); // BURNER_ROLE can call burnFrom\n\n    uint8 private _decimals;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals_,\n        address initialAdmin, // Address to grant DEFAULT_ADMIN_ROLE, MINTER_ROLE, BURNER_ROLE\n        address minterAndBurner // Typically the Vault address\n    ) ERC20(name, symbol) {\n        require(initialAdmin != address(0), \"SynthERC20: Initial admin cannot be zero address\");\n        require(minterAndBurner != address(0), \"SynthERC20: Minter/Burner cannot be zero address\");\n        \n        _decimals = decimals_;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, initialAdmin);\n        _grantRole(MINTER_ROLE, minterAndBurner);\n        _grantRole(BURNER_ROLE, minterAndBurner); // Vault will also be the burner\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     * See {ERC20-_mint}.\n     * Requirements:\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) external virtual onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     * See {ERC20-_burn}.\n     * Requirements:\n     * - the caller must have the `BURNER_ROLE`.\n     * - `account` must have approved `amount` to the caller.\n     */\n    function burnFrom(address account, uint256 amount) public virtual override onlyRole(BURNER_ROLE) {\n        // This overrides the standard ERC20Burnable.burnFrom to enforce BURNER_ROLE\n        // The original ERC20Burnable.burnFrom checks allowance internally via _spendAllowance\n        super.burnFrom(account, amount);\n    }\n\n    // ERC20Burnable already provides a public burn(uint256 amount) which burns msg.sender's tokens.\n    // If you need a burn function callable only by BURNER_ROLE to burn tokens held by THIS contract,\n    // you would add a custom one:\n    /*\n    function burnHeldTokens(uint256 amount) external virtual onlyRole(BURNER_ROLE) {\n        _burn(address(this), amount);\n    }\n    */\n\n    // Allow admin to grant/revoke roles if needed after deployment, e.g., change minter/burner.\n    // AccessControlEnumerable already provides role management functions like grantRole, revokeRole, renounceRole.\n}"},"contracts/SynthFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; // Or AccessControl if more complex permissions needed\nimport \"./SynthERC20.sol\";\nimport \"./Vault.sol\"; // To call Vault.registerSynth\n\ncontract SynthFactory is Ownable {\n    Vault public immutable vault; // Address of the main Vault contract\n\n    // Mapping from synth symbol (e.g., \"sBTC\") to its contract address\n    mapping(string => address) public synthBySymbol;\n    // Array to store all created synth addresses (optional, for iteration if needed)\n    address[] public allSynths;\n\n    event SynthCreated(\n        address indexed synthContract,\n        string name,\n        string symbol,\n        uint8 decimals,\n        address indexed vaultAddress,\n        address adminForSynth // The admin set for the SynthERC20 contract\n    );\n\n    constructor(address initialOwner, address vaultAddress) Ownable(initialOwner) {\n        require(vaultAddress != address(0), \"SynthFactory: Vault address cannot be zero\");\n        vault = Vault(vaultAddress);\n    }\n\n    /**\n     * @dev Creates a new SynthERC20 token, grants minting/burning roles to the Vault,\n     *      and registers it with the Vault.\n     * @param name The name of the synthetic token (e.g., \"Synthetic Bitcoin\")\n     * @param symbol The symbol of the synthetic token (e.g., \"sBTC\")\n     * @param decimals_ The number of decimals for the token\n     * Only callable by the owner of this factory (likely deployer initially, then can be DAO/multisig).\n     */\n    function createSynth(\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals_\n    ) external onlyOwner returns (address synthContractAddress) {\n        require(synthBySymbol[symbol] == address(0), \"SynthFactory: Symbol already exists\");\n        require(bytes(name).length > 0, \"SynthFactory: Name cannot be empty\");\n        require(bytes(symbol).length > 0, \"SynthFactory: Symbol cannot be empty\");\n        require(decimals_ > 0 && decimals_ <= 18, \"SynthFactory: Decimals must be between 1 and 18\"); // Common range\n\n        // Deploy the new SynthERC20 contract\n        // The admin for the SynthERC20 itself can be this factory or another designated admin.\n        // The minterAndBurner will be the Vault.\n        address synthAdmin = owner(); // Factory owner becomes admin of the new Synth by default\n        SynthERC20 newSynth = new SynthERC20(name, symbol, decimals_, synthAdmin, address(vault));\n        synthContractAddress = address(newSynth);\n\n        // Store and register\n        synthBySymbol[symbol] = synthContractAddress;\n        allSynths.push(synthContractAddress);\n\n        // Register the newly created synth with the main Vault\n        // The Vault needs GATEWAY_ROLE to be this factory, or this factory needs GATEWAY_ROLE on Vault.\n        // Let's assume this factory needs GATEWAY_ROLE on the Vault, or Vault.registerSynth is public/permissoned.\n        // If Vault.registerSynth is restricted to GATEWAY_ROLE, then this factory contract\n        // must be granted GATEWAY_ROLE on the Vault contract after deployment.\n        // For simplicity, assuming Vault.registerSynth has appropriate permissions for the factory to call.\n        // If not, the admin of the Vault would call vault.registerSynth(newSynthAddress) manually\n        // or grant this factory the GATEWAY_ROLE.\n        // My Vault.sol revision has `registerSynth` callable by `GATEWAY_ROLE`.\n        // So, this SynthFactory needs to be granted GATEWAY_ROLE on the Vault.\n        vault.registerSynth(synthContractAddress);\n\n        emit SynthCreated(synthContractAddress, name, symbol, decimals_, address(vault), synthAdmin);\n        return synthContractAddress;\n    }\n\n    /**\n     * @dev Retrieves the address of a synth contract by its symbol.\n     * @param symbol The symbol of the synthetic token (e.g., \"sBTC\")\n     * @return The address of the synth contract, or address(0) if not found.\n     */\n    function getSynthBySymbol(string calldata symbol) external view returns (address) {\n        return synthBySymbol[symbol];\n    }\n\n    function getAllSynthsCount() external view returns (uint256) {\n        return allSynths.length;\n    }\n\n    function getSynthAtIndex(uint256 index) external view returns (address) {\n        require(index < allSynths.length, \"SynthFactory: Index out of bounds\");\n        return allSynths[index];\n    }\n\n    // Function to update the Vault address if ever needed (onlyOwner)\n    // This is generally not recommended after synths are created and roles granted unless carefully managed.\n    /*\n    function setVaultAddress(address newVaultAddress) external onlyOwner {\n        require(newVaultAddress != address(0), \"SynthFactory: New vault address cannot be zero\");\n        vault = Vault(newVaultAddress);\n        // IMPORTANT: This does NOT re-grant roles on existing synths to the new vault.\n        // That would require iterating all existing synths and calling role grant functions on them,\n        // assuming this factory retained admin rights over them.\n    }\n    */\n}"},"contracts/Vault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\";\nimport \"./CXPTToken.sol\"; // Your CXPTToken contract\n// Assuming SynthERC20.sol defines a contract that implements ISynthERC20\n// You might need to adjust path or define ISynthERC20 if SynthERC20.sol is complex\nimport \"./SynthERC20.sol\"; // Placeholder: ensure this path is correct or define ISynthERC20\n\ninterface ISynthERC20 is IERC20 {\n    function mint(address to, uint256 amount) external;\n    function burnFrom(address account, uint256 amount) external;\n    // Add burn(uint256 amount) external; if synths can be burned by the contract itself (e.g., if Vault holds them)\n}\n\ncontract Vault is AccessControlEnumerable {\n    bytes32 public constant CORE_ROLE = keccak256(\"CORE_ROLE\");\n    bytes32 public constant GATEWAY_ROLE = keccak256(\"GATEWAY_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    IERC20 public immutable usdcToken;\n    CXPTToken public immutable cxptToken;\n\n    mapping(address => bool) public isRegisteredSynth; // synthContractAddress => is official\n    uint256 public totalFeesCollectedUSDC; // Fees collected in USDC base units\n\n    // --- Events ---\n    event DepositedUSDC(address indexed coreAddress, address indexed userWallet, uint256 usdcAmount);\n    event WithdrawnUSDC(address indexed coreAddress, address indexed userWallet, uint256 usdcAmount);\n    event WithdrawnCXPT(address indexed coreAddress, address indexed userWallet, uint256 cxptAmount);\n    event SynthRegistered(address indexed registrar, address indexed synthContract);\n    event FeesRecorded(address indexed coreAddress, uint256 usdcFeeAmount);\n    event FeesWithdrawn(address indexed admin, address indexed to, uint256 usdcAmount);\n\n    event SynthDepositedToVault(address indexed userWallet, address indexed synthContract, uint256 sAssetAmount);\n    event SynthWithdrawnFromVault(address indexed coreAddress, address indexed userWallet, address indexed synthContract, uint256 sAssetAmount);\n    \n    event USDCToSAssetExchanged(\n        address indexed coreAddress,\n        address indexed userWallet,\n        address indexed sAssetContract,\n        uint256 usdcAmountSpent,\n        uint256 sAssetAmountMinted\n    );\n    event SAssetToUSDCExchanged(\n        address indexed coreAddress,\n        address indexed userWallet,\n        address indexed sAssetContract,\n        uint256 sAssetAmountBurned,\n        uint256 usdcAmountReceived\n    );\n\n    constructor(\n        address _usdcAddress,\n        address _cxptTokenAddress,\n        address _coreAddress,\n        address _gatewayAddress \n    ) {\n        require(_usdcAddress != address(0), \"Vault: Invalid USDC address\");\n        require(_cxptTokenAddress != address(0), \"Vault: Invalid CXPT address\");\n        require(_coreAddress != address(0), \"Vault: Invalid Core address\");\n        require(_gatewayAddress != address(0), \"Vault: Invalid Gateway address\");\n\n        usdcToken = IERC20(_usdcAddress);\n        cxptToken = CXPTToken(_cxptTokenAddress); // Assumes CXPTToken type is available\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        _grantRole(CORE_ROLE, _coreAddress);\n        _grantRole(GATEWAY_ROLE, _gatewayAddress);\n    }\n\n    // --- USDC Operations (Called by CORE_ROLE backend) ---\n    function depositUSDC(address userWallet, uint256 usdcAmount) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(usdcAmount > 0, \"Vault: Amount must be positive\");\n        // User must have approved this Vault contract to spend 'usdcAmount' of their USDC\n        require(usdcToken.transferFrom(userWallet, address(this), usdcAmount), \"Vault: USDC transferFrom failed\");\n        emit DepositedUSDC(msg.sender, userWallet, usdcAmount);\n    }\n\n    // --- Combined Withdraw (USDC or CXPT) (Called by CORE_ROLE backend) ---\n    function withdraw(address userWallet, uint256 amount, bool withdrawAsCxpt) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(amount > 0, \"Vault: Amount must be positive\");\n        // Backend ensures user has sufficient internal balance before calling this\n\n        if (withdrawAsCxpt) {\n            // Vault contract must have MINTER_ROLE on CXPTToken contract\n            cxptToken.mint(userWallet, amount); // Assumes CXPTToken has appropriate mint permissions\n            emit WithdrawnCXPT(msg.sender, userWallet, amount);\n        } else { // Withdraw as USDC\n            require(usdcToken.balanceOf(address(this)) >= amount, \"Vault: Insufficient USDC in Vault\");\n            usdcToken.transfer(userWallet, amount);\n            emit WithdrawnUSDC(msg.sender, userWallet, amount);\n        }\n    }\n\n    // --- sASSET Deposit & Withdrawal (Called by CORE_ROLE backend) ---\n    // User wants to deposit their sASSET ERC20 tokens (e.g. sBTC) into the Vault for internal DEX trading\n    function depositSynthToVault(address userWallet, address synthContract, uint256 sAssetAmount) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(isRegisteredSynth[synthContract], \"Vault: Synth not registered\");\n        require(sAssetAmount > 0, \"Vault: Amount must be positive\");\n        // User (userWallet) must have approved this Vault contract to spend 'sAssetAmount' of their synthContract tokens\n        require(ISynthERC20(synthContract).transferFrom(userWallet, address(this), sAssetAmount), \"Vault: sASSET transferFrom failed\");\n        emit SynthDepositedToVault(userWallet, synthContract, sAssetAmount);\n    }\n\n    // User wants to withdraw their internal sASSET balance as ERC20 tokens to their wallet\n    function withdrawSynthFromVault(address userWallet, address synthContract, uint256 sAssetAmount) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(isRegisteredSynth[synthContract], \"Vault: Synth not registered\");\n        require(sAssetAmount > 0, \"Vault: Amount must be positive\");\n        require(ISynthERC20(synthContract).balanceOf(address(this)) >= sAssetAmount, \"Vault: Insufficient sASSET in Vault\");\n        \n        ISynthERC20(synthContract).transfer(userWallet, sAssetAmount);\n        emit SynthWithdrawnFromVault(msg.sender, userWallet, synthContract, sAssetAmount);\n    }\n\n    // --- sASSET On-Chain Exchange with USDC (Called by CORE_ROLE backend) ---\n    // User spends USDC from their external wallet to receive newly minted sASSETs in their external wallet\n    function exchangeUSDCToSAsset(\n        address userWallet,         // User EOA spending USDC and receiving sASSET\n        address sAssetContract,     // The specific sASSET (e.g., sBTC) contract address\n        uint256 usdcAmountToSpend,  // Amount of USDC user will spend (in USDC base units)\n        uint256 sAssetAmountToMint  // Amount of sASSET to mint (in sASSET base units) - calculated by backend\n    ) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(isRegisteredSynth[sAssetContract], \"Vault: Synth not registered\");\n        require(usdcAmountToSpend > 0, \"Vault: USDC amount must be positive\");\n        require(sAssetAmountToMint > 0, \"Vault: sASSET amount must be positive\");\n\n        // 1. Vault pulls USDC from user (user must have approved Vault)\n        require(usdcToken.transferFrom(userWallet, address(this), usdcAmountToSpend), \"Vault: USDC transferFrom for exchange failed\");\n        \n        // 2. Vault mints sASSET directly to user's wallet\n        //    This Vault contract needs MINTER_ROLE on the sAssetContract (SynthERC20)\n        ISynthERC20(sAssetContract).mint(userWallet, sAssetAmountToMint);\n\n        emit USDCToSAssetExchanged(msg.sender, userWallet, sAssetContract, usdcAmountToSpend, sAssetAmountToMint);\n    }\n\n    // User spends sASSETs from their external wallet (burning them) to receive USDC in their external wallet\n    function exchangeSAssetToUSDC(\n        address userWallet,         // User EOA spending sASSET and receiving USDC\n        address sAssetContract,     // The specific sASSET (e.g., sBTC) contract address\n        uint256 sAssetAmountToSpend,// Amount of sASSET user will spend (in sASSET base units)\n        uint256 usdcAmountToCredit  // Amount of USDC to credit to user (in USDC base units) - calculated by backend\n    ) external onlyRole(CORE_ROLE) {\n        require(userWallet != address(0), \"Vault: Invalid user wallet\");\n        require(isRegisteredSynth[sAssetContract], \"Vault: Synth not registered\");\n        require(sAssetAmountToSpend > 0, \"Vault: sASSET amount must be positive\");\n        require(usdcAmountToCredit > 0, \"Vault: USDC amount must be positive\");\n\n        // 1. Vault burns sASSET from user's wallet (user must have approved Vault for sAssetContract)\n        //    The SynthERC20 contract needs a burnFrom method that Vault can call.\n        ISynthERC20(sAssetContract).burnFrom(userWallet, sAssetAmountToSpend);\n        \n        // 2. Vault transfers USDC to user's wallet\n        require(usdcToken.balanceOf(address(this)) >= usdcAmountToCredit, \"Vault: Insufficient USDC in Vault for exchange\");\n        usdcToken.transfer(userWallet, usdcAmountToCredit);\n\n        emit SAssetToUSDCExchanged(msg.sender, userWallet, sAssetContract, sAssetAmountToSpend, usdcAmountToCredit);\n    }\n\n    // --- Admin & Gateway Functions ---\n    function registerSynth(address synthContract) external onlyRole(GATEWAY_ROLE) {\n        require(synthContract != address(0), \"Vault: Zero address for synth\");\n        isRegisteredSynth[synthContract] = true;\n        emit SynthRegistered(msg.sender, synthContract);\n    }\n\n    function recordFees(uint256 usdcFeeAmount) external onlyRole(CORE_ROLE) {\n        // Called by match engine (backend)\n        totalFeesCollectedUSDC += usdcFeeAmount;\n        emit FeesRecorded(msg.sender, usdcFeeAmount);\n    }\n\n    function withdrawFees(address to, uint256 usdcAmount) external onlyRole(ADMIN_ROLE) {\n        require(to != address(0), \"Vault: Fee recipient cannot be zero address\");\n        require(totalFeesCollectedUSDC >= usdcAmount, \"Vault: Insufficient collected fees\");\n        require(usdcToken.balanceOf(address(this)) >= usdcAmount, \"Vault: Insufficient USDC balance in Vault for fee withdrawal\");\n        \n        totalFeesCollectedUSDC -= usdcAmount;\n        usdcToken.transfer(to, usdcAmount);\n        emit FeesWithdrawn(msg.sender, to, usdcAmount);\n    }\n\n    // --- View Functions ---\n    function getUSDCTokenAddress() external view returns (address) {\n        return address(usdcToken);\n    }\n\n    function getCXPTTokenAddress() external view returns (address) {\n        return address(cxptToken);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2452],"ERC165":[2782],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2453,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2783,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2782,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,2782,2794,378,2452],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2781],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2781,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2452],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":2453,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,2452],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"EnumerableSet":[6877],"IAccessControlEnumerable":[710]},"id":685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"129:24:3"},{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":711,"src":"155:72:3","symbolAliases":[{"foreign":{"id":529,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"163:24:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"../AccessControl.sol","id":532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":296,"src":"228:51:3","symbolAliases":[{"foreign":{"id":531,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"236:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../../utils/structs/EnumerableSet.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":685,"sourceUnit":6878,"src":"280:68:3","symbolAliases":[{"foreign":{"id":533,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"288:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":536,"name":"IAccessControlEnumerable","nameLocations":["490:24:3"],"nodeType":"IdentifierPath","referencedDeclaration":710,"src":"490:24:3"},"id":537,"nodeType":"InheritanceSpecifier","src":"490:24:3"},{"baseName":{"id":538,"name":"AccessControl","nameLocations":["516:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"516:13:3"},"id":539,"nodeType":"InheritanceSpecifier","src":"516:13:3"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"350:94:3","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":684,"linearizedBaseContracts":[684,295,2782,2794,710,378,2452],"name":"AccessControlEnumerable","nameLocation":"463:23:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":543,"libraryName":{"id":540,"name":"EnumerableSet","nameLocations":["542:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":6877,"src":"542:13:3"},"nodeType":"UsingForDirective","src":"536:49:3","typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"EnumerableSet.AddressSet","nameLocations":["560:13:3","574:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"560:24:3"},"referencedDeclaration":6564,"src":"560:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":548,"mutability":"mutable","name":"_roleMembers","nameLocation":"649:12:3","nodeType":"VariableDeclaration","scope":684,"src":"591:70:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":547,"keyName":"role","keyNameLocation":"607:4:3","keyType":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"591:49:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"EnumerableSet.AddressSet","nameLocations":["615:13:3","629:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"615:24:3"},"referencedDeclaration":6564,"src":"615:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[62],"body":{"id":569,"nodeType":"Block","src":"820:121:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"837:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":559,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"857:24:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$710_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$710_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"852:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$710","typeString":"type(contract IAccessControlEnumerable)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"883:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"852:42:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"837:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":565,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"922:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":563,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"898:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"898:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"837:97:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":556,"id":568,"nodeType":"Return","src":"830:104:3"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"668:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"738:17:3","nodeType":"FunctionDefinition","overrides":{"id":553,"nodeType":"OverrideSpecifier","overrides":[],"src":"796:8:3"},"parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"interfaceId","nameLocation":"763:11:3","nodeType":"VariableDeclaration","scope":570,"src":"756:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"756:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"755:20:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"814:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"814:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"813:6:3"},"scope":684,"src":"729:212:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[701],"body":{"id":587,"nodeType":"Block","src":"1616:52:3","statements":[{"expression":{"arguments":[{"id":584,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":580,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1633:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":582,"indexExpression":{"id":581,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1646:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1633:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1652:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":6700,"src":"1633:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6564_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$6564_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":579,"id":586,"nodeType":"Return","src":"1626:35:3"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"947:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1535:13:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"role","nameLocation":"1557:4:3","nodeType":"VariableDeclaration","scope":588,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"index","nameLocation":"1571:5:3","nodeType":"VariableDeclaration","scope":588,"src":"1563:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:29:3"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"1607:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1606:9:3"},"scope":684,"src":"1526:142:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[709],"body":{"id":602,"nodeType":"Block","src":"1916:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":596,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"1933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":598,"indexExpression":{"id":597,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"1946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":6673,"src":"1933:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6564_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$6564_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":595,"id":601,"nodeType":"Return","src":"1926:34:3"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1674:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1845:18:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"role","nameLocation":"1872:4:3","nodeType":"VariableDeclaration","scope":603,"src":"1864:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1863:14:3"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":603,"src":"1907:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1906:9:3"},"scope":684,"src":"1836:131:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"2595:51:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":612,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2612:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":614,"indexExpression":{"id":613,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2625:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2612:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:6:3","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":6730,"src":"2612:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$6564_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$6564_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":611,"id":617,"nodeType":"Return","src":"2605:34:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1973:532:3","text":" @dev Return all accounts that have `role`\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"functionSelector":"a3246ad3","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMembers","nameLocation":"2519:14:3","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"role","nameLocation":"2542:4:3","nodeType":"VariableDeclaration","scope":619,"src":"2534:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2534:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2533:14:3"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"2577:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":609,"nodeType":"ArrayTypeName","src":"2577:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2576:18:3"},"scope":684,"src":"2510:136:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[256],"body":{"id":650,"nodeType":"Block","src":"2840:165:3","statements":[{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"granted","nameLocation":"2855:7:3","nodeType":"VariableDeclaration","scope":650,"src":"2850:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":630,"name":"bool","nodeType":"ElementaryTypeName","src":"2850:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":637,"initialValue":{"arguments":[{"id":634,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2882:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":632,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2865:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2871:10:3","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":256,"src":"2865:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2850:46:3"},{"condition":{"id":638,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2910:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"2906:69:3","trueBody":{"id":646,"nodeType":"Block","src":"2919:56:3","statements":[{"expression":{"arguments":[{"id":643,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2956:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":639,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2933:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":641,"indexExpression":{"id":640,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2946:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2952:3:3","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6591,"src":"2933:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6564_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6564_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":645,"nodeType":"ExpressionStatement","src":"2933:31:3"}]}},{"expression":{"id":648,"name":"granted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2991:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":629,"id":649,"nodeType":"Return","src":"2984:14:3"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2652:91:3","text":" @dev Overload {AccessControl-_grantRole} to track enumerable memberships"},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2757:10:3","nodeType":"FunctionDefinition","overrides":{"id":626,"nodeType":"OverrideSpecifier","overrides":[],"src":"2816:8:3"},"parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"role","nameLocation":"2776:4:3","nodeType":"VariableDeclaration","scope":651,"src":"2768:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"account","nameLocation":"2790:7:3","nodeType":"VariableDeclaration","scope":651,"src":"2782:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2767:31:3"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"2834:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":627,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2833:6:3"},"scope":684,"src":"2748:257:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[294],"body":{"id":682,"nodeType":"Block","src":"3201:169:3","statements":[{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"revoked","nameLocation":"3216:7:3","nodeType":"VariableDeclaration","scope":682,"src":"3211:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":662,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":669,"initialValue":{"arguments":[{"id":666,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3244:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":667,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3250:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":664,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3226:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$684_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:11:3","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":294,"src":"3226:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3211:47:3"},{"condition":{"id":670,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3272:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":679,"nodeType":"IfStatement","src":"3268:72:3","trueBody":{"id":678,"nodeType":"Block","src":"3281:59:3","statements":[{"expression":{"arguments":[{"id":675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3321:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":671,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3295:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$6564_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":673,"indexExpression":{"id":672,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3308:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3295:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:3","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"3295:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$6564_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$6564_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"ExpressionStatement","src":"3295:34:3"}]}},{"expression":{"id":680,"name":"revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":661,"id":681,"nodeType":"Return","src":"3349:14:3"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"3011:92:3","text":" @dev Overload {AccessControl-_revokeRole} to track enumerable memberships"},"id":683,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"3117:11:3","nodeType":"FunctionDefinition","overrides":{"id":658,"nodeType":"OverrideSpecifier","overrides":[],"src":"3177:8:3"},"parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"role","nameLocation":"3137:4:3","nodeType":"VariableDeclaration","scope":683,"src":"3129:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3129:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"account","nameLocation":"3151:7:3","nodeType":"VariableDeclaration","scope":683,"src":"3143:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3128:31:3"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"3195:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":659,"name":"bool","nodeType":"ElementaryTypeName","src":"3195:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3194:6:3"},"scope":684,"src":"3108:262:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":685,"src":"445:2927:3","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"129:3244:3"},"id":3},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[378],"IAccessControlEnumerable":[710]},"id":711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:4"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"../IAccessControl.sol","id":688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":711,"sourceUnit":379,"src":"156:53:4","symbolAliases":[{"foreign":{"id":687,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"164:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":690,"name":"IAccessControl","nameLocations":["350:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"350:14:4"},"id":691,"nodeType":"InheritanceSpecifier","src":"350:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"211:100:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC-165 detection."},"fullyImplemented":false,"id":710,"linearizedBaseContracts":[710,378],"name":"IAccessControlEnumerable","nameLocation":"322:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"371:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"959:13:4","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"role","nameLocation":"981:4:4","nodeType":"VariableDeclaration","scope":701,"src":"973:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"index","nameLocation":"995:5:4","nodeType":"VariableDeclaration","scope":701,"src":"987:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"972:29:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"1025:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1024:9:4"},"scope":710,"src":"950:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"1040:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":709,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1211:18:4","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"role","nameLocation":"1238:4:4","nodeType":"VariableDeclaration","scope":709,"src":"1230:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1229:14:4"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":709,"src":"1267:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1266:9:4"},"scope":710,"src":"1202:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":711,"src":"312:966:4","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"130:1149:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[847],"IERC20Errors":[752],"IERC721Errors":[800]},"id":848,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":712,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":752,"linearizedBaseContracts":[752],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":722,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":722,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":722,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":722,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":727,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":727,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":732,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":732,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":741,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":741,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":741,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":741,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":746,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":746,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":751,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":751,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":848,"src":"280:1764:5","usedErrors":[722,727,732,741,746,751],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":800,"linearizedBaseContracts":[800],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":758,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":758,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":763,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":763,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":772,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":772,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":772,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":772,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":777,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":777,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":782,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":782,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":789,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":789,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":789,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":794,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":794,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":799,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":799,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":848,"src":"2190:2092:5","usedErrors":[758,763,772,777,782,789,794,799],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":847,"linearizedBaseContracts":[847],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":812,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":812,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":812,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":812,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":812,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":817,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":817,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":822,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":822,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":829,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":829,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":829,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":834,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":834,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":839,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":839,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":846,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":846,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":846,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":848,"src":"4430:2107:5","usedErrors":[812,817,822,829,834,839,846],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2452],"ERC20":[1362],"IERC20":[1440],"IERC20Errors":[752],"IERC20Metadata":[1512]},"id":1363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":849,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":1441,"src":"131:36:6","symbolAliases":[{"foreign":{"id":850,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":1513,"src":"168:63:6","symbolAliases":[{"foreign":{"id":852,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":855,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":2453,"src":"232:48:6","symbolAliases":[{"foreign":{"id":854,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1363,"sourceUnit":848,"src":"281:65:6","symbolAliases":[{"foreign":{"id":856,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":859,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"1133:7:6"},"id":860,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":861,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1142:6:6"},"id":862,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":863,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"1150:14:6"},"id":864,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":865,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":752,"src":"1166:12:6"},"id":866,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1362,"linearizedBaseContracts":[1362,752,1512,1440,2452],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":870,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":1362,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":869,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":876,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":1362,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":875,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":874,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":878,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":1362,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":880,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":1362,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":879,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":882,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":1362,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":898,"nodeType":"Block","src":"1638:57:6","statements":[{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":890,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":891,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1656:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":893,"nodeType":"ExpressionStatement","src":"1648:13:6"},{"expression":{"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":894,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1671:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":895,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"1681:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":897,"nodeType":"ExpressionStatement","src":"1671:17:6"}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"1425:152:6","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":899,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"name_","nameLocation":"1608:5:6","nodeType":"VariableDeclaration","scope":899,"src":"1594:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":884,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:6","nodeType":"VariableDeclaration","scope":899,"src":"1615:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":886,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"1638:0:6"},"scope":1362,"src":"1582:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1499],"body":{"id":907,"nodeType":"Block","src":"1820:29:6","statements":[{"expression":{"id":905,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1837:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":904,"id":906,"nodeType":"Return","src":"1830:12:6"}]},"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"1701:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":908,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:6","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"1773:2:6"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"1805:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":902,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:6"},"scope":1362,"src":"1760:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1505],"body":{"id":916,"nodeType":"Block","src":"2024:31:6","statements":[{"expression":{"id":914,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2041:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":913,"id":915,"nodeType":"Return","src":"2034:14:6"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"1855:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":917,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:6","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"1977:2:6"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"2009:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":911,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:6"},"scope":1362,"src":"1962:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1511],"body":{"id":925,"nodeType":"Block","src":"2744:26:6","statements":[{"expression":{"hexValue":"3138","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":922,"id":924,"nodeType":"Return","src":"2754:9:6"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"2061:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:6","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"2705:2:6"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2737:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":920,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:6"},"scope":1362,"src":"2688:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":934,"nodeType":"Block","src":"2891:36:6","statements":[{"expression":{"id":932,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"2908:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":931,"id":933,"nodeType":"Return","src":"2901:19:6"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2776:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":935,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:6","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2850:2:6"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":935,"src":"2882:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:6"},"scope":1362,"src":"2830:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1397],"body":{"id":947,"nodeType":"Block","src":"3059:42:6","statements":[{"expression":{"baseExpression":{"id":943,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3076:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":945,"indexExpression":{"id":944,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"3086:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":946,"nodeType":"Return","src":"3069:25:6"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2933:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":948,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:6","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"account","nameLocation":"3012:7:6","nodeType":"VariableDeclaration","scope":948,"src":"3004:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:6"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"3050:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:6"},"scope":1362,"src":"2985:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1407],"body":{"id":971,"nodeType":"Block","src":"3371:103:6","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"owner","nameLocation":"3389:5:6","nodeType":"VariableDeclaration","scope":971,"src":"3381:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3397:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:6"},{"expression":{"arguments":[{"id":964,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"3429:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3436:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3440:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":963,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3419:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"3419:27:6"},{"expression":{"hexValue":"74727565","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":957,"id":970,"nodeType":"Return","src":"3456:11:6"}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"3107:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":972,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:6","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"to","nameLocation":"3322:2:6","nodeType":"VariableDeclaration","scope":972,"src":"3314:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"3334:5:6","nodeType":"VariableDeclaration","scope":972,"src":"3326:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:6"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"3365:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:6"},"scope":1362,"src":"3296:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":988,"nodeType":"Block","src":"3621:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":982,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"3638:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":984,"indexExpression":{"id":983,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"3650:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":986,"indexExpression":{"id":985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"3657:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":981,"id":987,"nodeType":"Return","src":"3631:34:6"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"3480:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":989,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:6","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"owner","nameLocation":"3559:5:6","nodeType":"VariableDeclaration","scope":989,"src":"3551:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"spender","nameLocation":"3574:7:6","nodeType":"VariableDeclaration","scope":989,"src":"3566:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"3612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:6"},"scope":1362,"src":"3532:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1427],"body":{"id":1012,"nodeType":"Block","src":"4058:107:6","statements":[{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"owner","nameLocation":"4076:5:6","nodeType":"VariableDeclaration","scope":1012,"src":"4068:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1003,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4084:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:6"},{"expression":{"arguments":[{"id":1005,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"4115:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4122:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4131:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1004,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1253,1313],"referencedDeclaration":1253,"src":"4106:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"4106:31:6"},{"expression":{"hexValue":"74727565","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":998,"id":1011,"nodeType":"Return","src":"4147:11:6"}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"3678:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:6","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"spender","nameLocation":"4004:7:6","nodeType":"VariableDeclaration","scope":1013,"src":"3996:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"value","nameLocation":"4021:5:6","nodeType":"VariableDeclaration","scope":1013,"src":"4013:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"4052:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":996,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:6"},"scope":1362,"src":"3979:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1439],"body":{"id":1044,"nodeType":"Block","src":"4850:151:6","statements":[{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"spender","nameLocation":"4868:7:6","nodeType":"VariableDeclaration","scope":1044,"src":"4860:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1029,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1027,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4878:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:6"},{"expression":{"arguments":[{"id":1031,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4916:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"4922:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4931:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1030,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"4900:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"ExpressionStatement","src":"4900:37:6"},{"expression":{"arguments":[{"id":1037,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4957:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4963:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4967:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4947:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"4947:26:6"},{"expression":{"hexValue":"74727565","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1024,"id":1043,"nodeType":"Return","src":"4983:11:6"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"4171:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:6","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"from","nameLocation":"4787:4:6","nodeType":"VariableDeclaration","scope":1045,"src":"4779:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"to","nameLocation":"4801:2:6","nodeType":"VariableDeclaration","scope":1045,"src":"4793:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"value","nameLocation":"4813:5:6","nodeType":"VariableDeclaration","scope":1045,"src":"4805:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:6"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"4844:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1022,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:6"},"scope":1362,"src":"4757:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1091,"nodeType":"Block","src":"5443:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1055,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:6","typeDescriptions":{}}},"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1069,"nodeType":"IfStatement","src":"5453:86:6","trueBody":{"id":1068,"nodeType":"Block","src":"5477:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:6","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1061,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5498:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1067,"nodeType":"RevertStatement","src":"5491:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5552:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:6","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"IfStatement","src":"5548:86:6","trueBody":{"id":1083,"nodeType":"Block","src":"5570:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:6","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1076,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5591:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1082,"nodeType":"RevertStatement","src":"5584:39:6"}]}},{"expression":{"arguments":[{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"5651:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"5657:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5661:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1085,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5643:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"5643:24:6"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"5007:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:6","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"from","nameLocation":"5401:4:6","nodeType":"VariableDeclaration","scope":1092,"src":"5393:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"to","nameLocation":"5415:2:6","nodeType":"VariableDeclaration","scope":1092,"src":"5407:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"value","nameLocation":"5427:5:6","nodeType":"VariableDeclaration","scope":1092,"src":"5419:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:6"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"5443:0:6"},"scope":1362,"src":"5374:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"6064:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"6078:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:6","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1139,"nodeType":"Block","src":"6252:362:6","statements":[{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:6","nodeType":"VariableDeclaration","scope":1139,"src":"6266:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1118,"initialValue":{"baseExpression":{"id":1115,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"6288:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1117,"indexExpression":{"id":1116,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"6298:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6321:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6335:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"nodeType":"IfStatement","src":"6317:115:6","trueBody":{"id":1128,"nodeType":"Block","src":"6342:90:6","statements":[{"errorCall":{"arguments":[{"id":1123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"6392:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6398:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6411:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6367:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1127,"nodeType":"RevertStatement","src":"6360:57:6"}]}},{"id":1138,"nodeType":"UncheckedBlock","src":"6445:159:6","statements":[{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1130,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"6552:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1132,"indexExpression":{"id":1131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"6562:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6570:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6584:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"6552:37:6"}]}]},"id":1140,"nodeType":"IfStatement","src":"6074:540:6","trueBody":{"id":1112,"nodeType":"Block","src":"6098:148:6","statements":[{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1108,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6214:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6230:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"6214:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6628:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:6","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1160,"nodeType":"Block","src":"6843:206:6","statements":[{"id":1159,"nodeType":"UncheckedBlock","src":"6857:182:6","statements":[{"expression":{"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1153,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7002:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1155,"indexExpression":{"id":1154,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"7012:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"7019:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1158,"nodeType":"ExpressionStatement","src":"7002:22:6"}]}]},"id":1161,"nodeType":"IfStatement","src":"6624:425:6","trueBody":{"id":1152,"nodeType":"Block","src":"6646:191:6","statements":[{"id":1151,"nodeType":"UncheckedBlock","src":"6660:167:6","statements":[{"expression":{"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1147,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6791:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6807:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1150,"nodeType":"ExpressionStatement","src":"6791:21:6"}]}]}},{"eventCall":{"arguments":[{"id":1163,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"7073:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"7079:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"7083:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7064:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"EmitStatement","src":"7059:30:6"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"5680:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:6","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"from","nameLocation":"6014:4:6","nodeType":"VariableDeclaration","scope":1169,"src":"6006:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"to","nameLocation":"6028:2:6","nodeType":"VariableDeclaration","scope":1169,"src":"6020:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"value","nameLocation":"6040:5:6","nodeType":"VariableDeclaration","scope":1169,"src":"6032:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:6"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"6064:0:6"},"scope":1362,"src":"5989:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1201,"nodeType":"Block","src":"7495:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"7509:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:6","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"7505:91:6","trueBody":{"id":1190,"nodeType":"Block","src":"7532:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:6","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1183,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7553:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1189,"nodeType":"RevertStatement","src":"7546:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:6","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"7625:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7634:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1192,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"7605:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1200,"nodeType":"ExpressionStatement","src":"7605:35:6"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"7102:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1202,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:6","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"account","nameLocation":"7462:7:6","nodeType":"VariableDeclaration","scope":1202,"src":"7454:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"value","nameLocation":"7479:5:6","nodeType":"VariableDeclaration","scope":1202,"src":"7471:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"7495:0:6"},"scope":1362,"src":"7439:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1234,"nodeType":"Block","src":"8021:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"8035:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:6","typeDescriptions":{}}},"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"8031:89:6","trueBody":{"id":1223,"nodeType":"Block","src":"8058:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:6","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1216,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8079:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1222,"nodeType":"RevertStatement","src":"8072:37:6"}]}},{"expression":{"arguments":[{"id":1226,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"8137:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:6","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"8158:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"8129:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1233,"nodeType":"ExpressionStatement","src":"8129:35:6"}]},"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"7653:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:6","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"account","nameLocation":"7988:7:6","nodeType":"VariableDeclaration","scope":1235,"src":"7980:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"8005:5:6","nodeType":"VariableDeclaration","scope":1235,"src":"7997:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:6"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"8021:0:6"},"scope":1362,"src":"7965:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1252,"nodeType":"Block","src":"8781:54:6","statements":[{"expression":{"arguments":[{"id":1246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"8800:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"8807:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"8816:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1245,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1253,1313],"referencedDeclaration":1313,"src":"8791:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"ExpressionStatement","src":"8791:37:6"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"8177:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:6","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"owner","nameLocation":"8733:5:6","nodeType":"VariableDeclaration","scope":1253,"src":"8725:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"spender","nameLocation":"8748:7:6","nodeType":"VariableDeclaration","scope":1253,"src":"8740:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"8765:5:6","nodeType":"VariableDeclaration","scope":1253,"src":"8757:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:6"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[],"src":"8781:0:6"},"scope":1362,"src":"8707:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"9780:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9794:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:6","typeDescriptions":{}}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"IfStatement","src":"9790:89:6","trueBody":{"id":1278,"nodeType":"Block","src":"9815:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:6","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1271,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9836:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1277,"nodeType":"RevertStatement","src":"9829:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9892:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:6","typeDescriptions":{}}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1294,"nodeType":"IfStatement","src":"9888:90:6","trueBody":{"id":1293,"nodeType":"Block","src":"9915:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:6","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1286,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"9936:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1292,"nodeType":"RevertStatement","src":"9929:38:6"}]}},{"expression":{"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1295,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"9987:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1298,"indexExpression":{"id":1296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9999:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1299,"indexExpression":{"id":1297,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"10006:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10017:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1302,"nodeType":"ExpressionStatement","src":"9987:35:6"},{"condition":{"id":1303,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"10036:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1311,"nodeType":"IfStatement","src":"10032:76:6","trueBody":{"id":1310,"nodeType":"Block","src":"10047:61:6","statements":[{"eventCall":{"arguments":[{"id":1305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"10075:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"10082:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"10091:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"10066:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"EmitStatement","src":"10061:36:6"}]}}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"8841:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:6","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"owner","nameLocation":"9708:5:6","nodeType":"VariableDeclaration","scope":1313,"src":"9700:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"spender","nameLocation":"9723:7:6","nodeType":"VariableDeclaration","scope":1313,"src":"9715:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"value","nameLocation":"9740:5:6","nodeType":"VariableDeclaration","scope":1313,"src":"9732:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:6","nodeType":"VariableDeclaration","scope":1313,"src":"9747:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:6"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"9780:0:6"},"scope":1362,"src":"9682:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"10485:387:6","statements":[{"assignments":[1324],"declarations":[{"constant":false,"id":1324,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:6","nodeType":"VariableDeclaration","scope":1360,"src":"10495:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[{"id":1326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10532:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10539:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1325,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"10522:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10561:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:6","memberName":"max","nodeType":"MemberAccess","src":"10580:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1359,"nodeType":"IfStatement","src":"10557:309:6","trueBody":{"id":1358,"nodeType":"Block","src":"10599:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1337,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10617:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"10636:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1347,"nodeType":"IfStatement","src":"10613:130:6","trueBody":{"id":1346,"nodeType":"Block","src":"10643:100:6","statements":[{"errorCall":{"arguments":[{"id":1341,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10695:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10704:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"10722:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10668:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1345,"nodeType":"RevertStatement","src":"10661:67:6"}]}},{"id":1357,"nodeType":"UncheckedBlock","src":"10756:100:6","statements":[{"expression":{"arguments":[{"id":1349,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10793:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"10800:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10809:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"10828:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1348,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1253,1313],"referencedDeclaration":1313,"src":"10784:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"10784:57:6"}]}]}}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"10120:271:6","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:6","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"owner","nameLocation":"10429:5:6","nodeType":"VariableDeclaration","scope":1361,"src":"10421:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"spender","nameLocation":"10444:7:6","nodeType":"VariableDeclaration","scope":1361,"src":"10436:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"value","nameLocation":"10461:5:6","nodeType":"VariableDeclaration","scope":1361,"src":"10453:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:6"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"10485:0:6"},"scope":1362,"src":"10396:476:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1363,"src":"1106:9768:6","usedErrors":[722,727,732,741,746,751],"usedEvents":[1374,1383]}],"src":"105:10770:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1440]},"id":1441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"132:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1440,"linearizedBaseContracts":[1440],"name":"IERC20","nameLocation":"214:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"227:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1374,"name":"Transfer","nameLocation":"396:8:7","nodeType":"EventDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:7","nodeType":"VariableDeclaration","scope":1374,"src":"405:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:7","nodeType":"VariableDeclaration","scope":1374,"src":"427:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:7","nodeType":"VariableDeclaration","scope":1374,"src":"447:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:7"},"src":"390:72:7"},{"anonymous":false,"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"468:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1383,"name":"Approval","nameLocation":"627:8:7","nodeType":"EventDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:7","nodeType":"VariableDeclaration","scope":1383,"src":"636:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1379,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":1383,"src":"659:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:7","nodeType":"VariableDeclaration","scope":1383,"src":"684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:7"},"src":"621:78:7"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"705:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:7","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"795:2:7"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:7"},"scope":1440,"src":"775:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"836:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1397,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1397,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1397,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1440,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"986:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":1407,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"value","nameLocation":"1242:5:7","nodeType":"VariableDeclaration","scope":1407,"src":"1234:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:7"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"1267:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1404,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:7"},"scope":1440,"src":"1204:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"1279:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:7","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"owner","nameLocation":"1575:5:7","nodeType":"VariableDeclaration","scope":1417,"src":"1567:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"spender","nameLocation":"1590:7:7","nodeType":"VariableDeclaration","scope":1417,"src":"1582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:7"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"1622:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:7"},"scope":1440,"src":"1548:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"1637:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:7","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"spender","nameLocation":"2334:7:7","nodeType":"VariableDeclaration","scope":1427,"src":"2326:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"value","nameLocation":"2351:5:7","nodeType":"VariableDeclaration","scope":1427,"src":"2343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:7"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"2376:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:7"},"scope":1440,"src":"2309:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"2388:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1439,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:7","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"from","nameLocation":"2720:4:7","nodeType":"VariableDeclaration","scope":1439,"src":"2712:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"to","nameLocation":"2734:2:7","nodeType":"VariableDeclaration","scope":1439,"src":"2726:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"value","nameLocation":"2746:5:7","nodeType":"VariableDeclaration","scope":1439,"src":"2738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:7"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"2771:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1436,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:7"},"scope":1440,"src":"2690:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1441,"src":"204:2575:7","usedErrors":[],"usedEvents":[1374,1383]}],"src":"106:2674:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2452],"ERC20":[1362],"ERC20Burnable":[1486]},"id":1487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1487,"sourceUnit":1363,"src":"150:35:8","symbolAliases":[{"foreign":{"id":1443,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"158:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1487,"sourceUnit":2453,"src":"186:51:8","symbolAliases":[{"foreign":{"id":1445,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"194:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1448,"name":"Context","nameLocations":["483:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"483:7:8"},"id":1449,"nodeType":"InheritanceSpecifier","src":"483:7:8"},{"baseName":{"id":1450,"name":"ERC20","nameLocations":["492:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"492:5:8"},"id":1451,"nodeType":"InheritanceSpecifier","src":"492:5:8"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"239:208:8","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1486,"linearizedBaseContracts":[1486,1362,752,1512,1440,2452],"name":"ERC20Burnable","nameLocation":"466:13:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1463,"nodeType":"Block","src":"662:43:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1458,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"678:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"692:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1457,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"672:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"ExpressionStatement","src":"672:26:8"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"504:109:8","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:8","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"value","nameLocation":"640:5:8","nodeType":"VariableDeclaration","scope":1464,"src":"632:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:8"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"662:0:8"},"scope":1486,"src":"618:87:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1484,"nodeType":"Block","src":"1086:93:8","statements":[{"expression":{"arguments":[{"id":1473,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1112:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1474,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"1121:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1135:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1472,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"1096:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"ExpressionStatement","src":"1096:45:8"},{"expression":{"arguments":[{"id":1480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"1157:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1166:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1479,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1151:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"1151:21:8"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"711:305:8","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:8","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"account","nameLocation":"1047:7:8","nodeType":"VariableDeclaration","scope":1485,"src":"1039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"value","nameLocation":"1064:5:8","nodeType":"VariableDeclaration","scope":1485,"src":"1056:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:8"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[],"src":"1086:0:8"},"scope":1486,"src":"1021:158:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1487,"src":"448:733:8","usedErrors":[722,727,732,741,746,751],"usedEvents":[1374,1383]}],"src":"124:1058:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1440],"IERC20Metadata":[1512]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1488,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1513,"sourceUnit":1441,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1489,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1492,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"306:6:9"},"id":1493,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1512,"linearizedBaseContracts":[1512,1440],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1499,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1496,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1512,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1505,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1512,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1508,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1512,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1513,"src":"278:405:9","usedErrors":[],"usedEvents":[1374,1383]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2390],"Comparators":[2422],"Math":[4415],"SlotDerivation":[2634],"StorageSlot":[2758]},"id":2391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":2423,"src":"209:46:10","symbolAliases":[{"foreign":{"id":1515,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"217:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":2635,"src":"256:52:10","symbolAliases":[{"foreign":{"id":1517,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"264:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":2759,"src":"309:46:10","symbolAliases":[{"foreign":{"id":1519,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"317:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":4416,"src":"356:37:10","symbolAliases":[{"foreign":{"id":1521,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"364:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"395:63:10","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2390,"linearizedBaseContracts":[2390],"name":"Arrays","nameLocation":"467:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1526,"libraryName":{"id":1524,"name":"SlotDerivation","nameLocations":["486:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2634,"src":"486:14:10"},"nodeType":"UsingForDirective","src":"480:33:10","typeName":{"id":1525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1529,"libraryName":{"id":1527,"name":"StorageSlot","nameLocations":["524:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":2758,"src":"524:11:10"},"nodeType":"UsingForDirective","src":"518:30:10","typeName":{"id":1528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1561,"nodeType":"Block","src":"1628:83:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1551,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1550,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1649:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1554,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1669:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1553,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1664:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1556,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"1677:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1549,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1638:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"1638:44:10"},{"expression":{"id":1559,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1699:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1548,"id":1560,"nodeType":"Return","src":"1692:12:10"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"554:915:10","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:10","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"array","nameLocation":"1514:5:10","nodeType":"VariableDeclaration","scope":1562,"src":"1497:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ArrayTypeName","src":"1497:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"comp","nameLocation":"1576:4:10","nodeType":"VariableDeclaration","scope":1562,"src":"1529:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1542,"nodeType":"FunctionTypeName","parameterTypes":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"1538:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"1547:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:10"},"returnParameterTypes":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1542,"src":"1570:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1539,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:10"},"src":"1529:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:10"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"1610:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ArrayTypeName","src":"1610:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:10"},"scope":2390,"src":"1474:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"1894:66:10","statements":[{"expression":{"arguments":[{"id":1573,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1909:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1574,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"1916:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2422_$","typeString":"type(library Comparators)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"1916:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1572,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1562,1581,1613,1634,1666,1687],"referencedDeclaration":1562,"src":"1904:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1577,"nodeType":"ExpressionStatement","src":"1904:27:10"},{"expression":{"id":1578,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1948:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1571,"id":1579,"nodeType":"Return","src":"1941:12:10"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"1717:93:10","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:10","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"array","nameLocation":"1846:5:10","nodeType":"VariableDeclaration","scope":1581,"src":"1829:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ArrayTypeName","src":"1829:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:10"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"1876:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ArrayTypeName","src":"1876:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:10"},"scope":2390,"src":"1815:145:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"3040:97:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1603,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3075:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1602,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1838,1850],"referencedDeclaration":1838,"src":"3055:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1606,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3102:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":1605,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1876,1902],"referencedDeclaration":1876,"src":"3083:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1601,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1562,1581,1613,1634,1666,1687],"referencedDeclaration":1562,"src":"3050:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1609,"nodeType":"ExpressionStatement","src":"3050:58:10"},{"expression":{"id":1610,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3125:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1600,"id":1611,"nodeType":"Return","src":"3118:12:10"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"1966:915:10","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:10","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"array","nameLocation":"2926:5:10","nodeType":"VariableDeclaration","scope":1613,"src":"2909:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1584,"nodeType":"ArrayTypeName","src":"2909:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"comp","nameLocation":"2988:4:10","nodeType":"VariableDeclaration","scope":1613,"src":"2941:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1594,"nodeType":"FunctionTypeName","parameterTypes":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"2950:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"2959:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:10"},"returnParameterTypes":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"2982:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1591,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:10"},"src":"2941:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:10"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"3022:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1598,"nodeType":"ArrayTypeName","src":"3022:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:10"},"scope":2390,"src":"2886:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"3320:87:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1625,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3355:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":1624,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1838,1850],"referencedDeclaration":1838,"src":"3335:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1627,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"3363:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2422_$","typeString":"type(library Comparators)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"3363:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1623,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1562,1581,1613,1634,1666,1687],"referencedDeclaration":1562,"src":"3330:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1630,"nodeType":"ExpressionStatement","src":"3330:48:10"},{"expression":{"id":1631,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3395:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1622,"id":1632,"nodeType":"Return","src":"3388:12:10"}]},"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"3143:93:10","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:10","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"array","nameLocation":"3272:5:10","nodeType":"VariableDeclaration","scope":1634,"src":"3255:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1616,"nodeType":"ArrayTypeName","src":"3255:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:10"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"3302:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1620,"nodeType":"ArrayTypeName","src":"3302:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:10"},"scope":2390,"src":"3241:166:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"4487:97:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1656,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4522:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1655,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1838,1850],"referencedDeclaration":1850,"src":"4502:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1659,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4549:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":1658,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[1876,1902],"referencedDeclaration":1902,"src":"4530:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1654,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1562,1581,1613,1634,1666,1687],"referencedDeclaration":1562,"src":"4497:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1662,"nodeType":"ExpressionStatement","src":"4497:58:10"},{"expression":{"id":1663,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4572:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1653,"id":1664,"nodeType":"Return","src":"4565:12:10"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"3413:915:10","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:10","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"array","nameLocation":"4373:5:10","nodeType":"VariableDeclaration","scope":1666,"src":"4356:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1637,"nodeType":"ArrayTypeName","src":"4356:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"comp","nameLocation":"4435:4:10","nodeType":"VariableDeclaration","scope":1666,"src":"4388:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1647,"nodeType":"FunctionTypeName","parameterTypes":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"4397:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"4406:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:10"},"returnParameterTypes":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"4429:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:10"},"src":"4388:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:10"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"4469:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1651,"nodeType":"ArrayTypeName","src":"4469:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:10"},"scope":2390,"src":"4333:251:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"4767:87:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1678,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"4802:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1677,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[1838,1850],"referencedDeclaration":1850,"src":"4782:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1680,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4810:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2422_$","typeString":"type(library Comparators)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:10","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"4810:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1676,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1562,1581,1613,1634,1666,1687],"referencedDeclaration":1562,"src":"4777:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1683,"nodeType":"ExpressionStatement","src":"4777:48:10"},{"expression":{"id":1684,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"4842:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1675,"id":1685,"nodeType":"Return","src":"4835:12:10"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"4590:93:10","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:10","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"array","nameLocation":"4719:5:10","nodeType":"VariableDeclaration","scope":1687,"src":"4702:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1669,"nodeType":"ArrayTypeName","src":"4702:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:10"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"4749:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1673,"nodeType":"ArrayTypeName","src":"4749:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:10"},"scope":2390,"src":"4688:166:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"5470:889:10","statements":[{"id":1773,"nodeType":"UncheckedBlock","src":"5480:873:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"5508:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1706,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5514:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"5504:31:10","trueBody":{"functionReturnParameters":1704,"id":1710,"nodeType":"Return","src":"5528:7:10"}},{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:10","nodeType":"VariableDeclaration","scope":1773,"src":"5591:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1717,"initialValue":{"arguments":[{"id":1715,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5614:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1714,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"5607:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:10"},{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"pos","nameLocation":"5715:3:10","nodeType":"VariableDeclaration","scope":1773,"src":"5707:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1721,"initialValue":{"id":1720,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5721:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:10"},{"body":{"id":1752,"nodeType":"Block","src":"5795:331:10","statements":[{"condition":{"arguments":[{"arguments":[{"id":1737,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5829:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"5822:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1739,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"5834:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1735,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5817:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1751,"nodeType":"IfStatement","src":"5813:299:10","trueBody":{"id":1750,"nodeType":"Block","src":"5842:270:10","statements":[{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1741,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6046:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1744,"nodeType":"ExpressionStatement","src":"6046:11:10"},{"expression":{"arguments":[{"id":1746,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6085:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1747,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"6090:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1745,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"6079:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"6079:14:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1728,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5773:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1729,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"5778:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"initializationExpression":{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"it","nameLocation":"5754:2:10","nodeType":"VariableDeclaration","scope":1753,"src":"5746:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1727,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"5759:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5783:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"5783:10:10"},"nodeType":"ForStatement","src":"5741:385:10"},{"expression":{"arguments":[{"id":1755,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"6146:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6153:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"6140:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"6140:17:10"},{"expression":{"arguments":[{"id":1760,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"6207:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1761,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6214:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1762,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"6219:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1759,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6196:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"6196:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6284:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1769,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6296:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1770,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"6301:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1765,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6273:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"ExpressionStatement","src":"6273:33:10"}]}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"4860:491:10","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:10","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"begin","nameLocation":"5384:5:10","nodeType":"VariableDeclaration","scope":1775,"src":"5376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"end","nameLocation":"5399:3:10","nodeType":"VariableDeclaration","scope":1775,"src":"5391:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"comp","nameLocation":"5451:4:10","nodeType":"VariableDeclaration","scope":1775,"src":"5404:51:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1701,"nodeType":"FunctionTypeName","parameterTypes":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"5413:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"5422:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:10"},"returnParameterTypes":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"5445:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1698,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:10"},"src":"5404:51:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:10"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"5470:0:10"},"scope":2390,"src":"5356:1003:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1785,"nodeType":"Block","src":"6532:88:10","statements":[{"AST":{"nativeSrc":"6567:47:10","nodeType":"YulBlock","src":"6567:47:10","statements":[{"nativeSrc":"6581:23:10","nodeType":"YulAssignment","src":"6581:23:10","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:10","nodeType":"YulIdentifier","src":"6592:5:10"},{"kind":"number","nativeSrc":"6599:4:10","nodeType":"YulLiteral","src":"6599:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:10","nodeType":"YulIdentifier","src":"6588:3:10"},"nativeSrc":"6588:16:10","nodeType":"YulFunctionCall","src":"6588:16:10"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:10","nodeType":"YulIdentifier","src":"6581:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1779,"isOffset":false,"isSlot":false,"src":"6592:5:10","valueSize":1},{"declaration":1782,"isOffset":false,"isSlot":false,"src":"6581:3:10","valueSize":1}],"flags":["memory-safe"],"id":1784,"nodeType":"InlineAssembly","src":"6542:72:10"}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"6365:87:10","text":" @dev Pointer to the memory location of the first element of `array`."},"id":1786,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:10","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"array","nameLocation":"6490:5:10","nodeType":"VariableDeclaration","scope":1786,"src":"6473:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"nodeType":"ArrayTypeName","src":"6473:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:10"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:10","nodeType":"VariableDeclaration","scope":1786,"src":"6519:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:10"},"scope":2390,"src":"6457:163:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1805,"nodeType":"Block","src":"6892:93:10","statements":[{"id":1804,"nodeType":"UncheckedBlock","src":"6902:77:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1796,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6940:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1795,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6933:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1798,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6949:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:10","memberName":"length","nodeType":"MemberAccess","src":"6949:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1794,"id":1803,"nodeType":"Return","src":"6926:42:10"}]}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"6626:188:10","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:10","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"array","nameLocation":"6850:5:10","nodeType":"VariableDeclaration","scope":1806,"src":"6833:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ArrayTypeName","src":"6833:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:10"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:10","nodeType":"VariableDeclaration","scope":1806,"src":"6879:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:10"},"scope":2390,"src":"6819:166:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1815,"nodeType":"Block","src":"7136:68:10","statements":[{"AST":{"nativeSrc":"7155:43:10","nodeType":"YulBlock","src":"7155:43:10","statements":[{"nativeSrc":"7169:19:10","nodeType":"YulAssignment","src":"7169:19:10","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:10","nodeType":"YulIdentifier","src":"7184:3:10"}],"functionName":{"name":"mload","nativeSrc":"7178:5:10","nodeType":"YulIdentifier","src":"7178:5:10"},"nativeSrc":"7178:10:10","nodeType":"YulFunctionCall","src":"7178:10:10"},"variableNames":[{"name":"value","nativeSrc":"7169:5:10","nodeType":"YulIdentifier","src":"7169:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1809,"isOffset":false,"isSlot":false,"src":"7184:3:10","valueSize":1},{"declaration":1812,"isOffset":false,"isSlot":false,"src":"7169:5:10","valueSize":1}],"id":1814,"nodeType":"InlineAssembly","src":"7146:52:10"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"6991:74:10","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:10","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:10","nodeType":"VariableDeclaration","scope":1816,"src":"7086:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:10"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"value","nameLocation":"7129:5:10","nodeType":"VariableDeclaration","scope":1816,"src":"7121:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:10"},"scope":2390,"src":"7070:134:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1825,"nodeType":"Block","src":"7348:178:10","statements":[{"AST":{"nativeSrc":"7367:153:10","nodeType":"YulBlock","src":"7367:153:10","statements":[{"nativeSrc":"7381:25:10","nodeType":"YulVariableDeclaration","src":"7381:25:10","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:10","nodeType":"YulIdentifier","src":"7401:4:10"}],"functionName":{"name":"mload","nativeSrc":"7395:5:10","nodeType":"YulIdentifier","src":"7395:5:10"},"nativeSrc":"7395:11:10","nodeType":"YulFunctionCall","src":"7395:11:10"},"variables":[{"name":"value1","nativeSrc":"7385:6:10","nodeType":"YulTypedName","src":"7385:6:10","type":""}]},{"nativeSrc":"7419:25:10","nodeType":"YulVariableDeclaration","src":"7419:25:10","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:10","nodeType":"YulIdentifier","src":"7439:4:10"}],"functionName":{"name":"mload","nativeSrc":"7433:5:10","nodeType":"YulIdentifier","src":"7433:5:10"},"nativeSrc":"7433:11:10","nodeType":"YulFunctionCall","src":"7433:11:10"},"variables":[{"name":"value2","nativeSrc":"7423:6:10","nodeType":"YulTypedName","src":"7423:6:10","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:10","nodeType":"YulIdentifier","src":"7464:4:10"},{"name":"value2","nativeSrc":"7470:6:10","nodeType":"YulIdentifier","src":"7470:6:10"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:10","nodeType":"YulIdentifier","src":"7457:6:10"},"nativeSrc":"7457:20:10","nodeType":"YulFunctionCall","src":"7457:20:10"},"nativeSrc":"7457:20:10","nodeType":"YulExpressionStatement","src":"7457:20:10"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:10","nodeType":"YulIdentifier","src":"7497:4:10"},{"name":"value1","nativeSrc":"7503:6:10","nodeType":"YulIdentifier","src":"7503:6:10"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:10","nodeType":"YulIdentifier","src":"7490:6:10"},"nativeSrc":"7490:20:10","nodeType":"YulFunctionCall","src":"7490:20:10"},"nativeSrc":"7490:20:10","nodeType":"YulExpressionStatement","src":"7490:20:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1819,"isOffset":false,"isSlot":false,"src":"7401:4:10","valueSize":1},{"declaration":1819,"isOffset":false,"isSlot":false,"src":"7464:4:10","valueSize":1},{"declaration":1821,"isOffset":false,"isSlot":false,"src":"7439:4:10","valueSize":1},{"declaration":1821,"isOffset":false,"isSlot":false,"src":"7497:4:10","valueSize":1}],"id":1824,"nodeType":"InlineAssembly","src":"7358:162:10"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"7210:77:10","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:10","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:10","nodeType":"VariableDeclaration","scope":1826,"src":"7307:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:10","nodeType":"VariableDeclaration","scope":1826,"src":"7321:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:10"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[],"src":"7348:0:10"},"scope":2390,"src":"7292:234:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1837,"nodeType":"Block","src":"7713:64:10","statements":[{"AST":{"nativeSrc":"7732:39:10","nodeType":"YulBlock","src":"7732:39:10","statements":[{"nativeSrc":"7746:15:10","nodeType":"YulAssignment","src":"7746:15:10","value":{"name":"input","nativeSrc":"7756:5:10","nodeType":"YulIdentifier","src":"7756:5:10"},"variableNames":[{"name":"output","nativeSrc":"7746:6:10","nodeType":"YulIdentifier","src":"7746:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1830,"isOffset":false,"isSlot":false,"src":"7756:5:10","valueSize":1},{"declaration":1834,"isOffset":false,"isSlot":false,"src":"7746:6:10","valueSize":1}],"id":1836,"nodeType":"InlineAssembly","src":"7723:48:10"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"7532:76:10","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:10","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"input","nameLocation":"7659:5:10","nodeType":"VariableDeclaration","scope":1838,"src":"7642:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1829,"nodeType":"ArrayTypeName","src":"7642:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:10"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"output","nameLocation":"7705:6:10","nodeType":"VariableDeclaration","scope":1838,"src":"7688:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ArrayTypeName","src":"7688:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:10"},"scope":2390,"src":"7613:164:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1849,"nodeType":"Block","src":"7964:64:10","statements":[{"AST":{"nativeSrc":"7983:39:10","nodeType":"YulBlock","src":"7983:39:10","statements":[{"nativeSrc":"7997:15:10","nodeType":"YulAssignment","src":"7997:15:10","value":{"name":"input","nativeSrc":"8007:5:10","nodeType":"YulIdentifier","src":"8007:5:10"},"variableNames":[{"name":"output","nativeSrc":"7997:6:10","nodeType":"YulIdentifier","src":"7997:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1842,"isOffset":false,"isSlot":false,"src":"8007:5:10","valueSize":1},{"declaration":1846,"isOffset":false,"isSlot":false,"src":"7997:6:10","valueSize":1}],"id":1848,"nodeType":"InlineAssembly","src":"7974:48:10"}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"7783:76:10","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"input","nameLocation":"7910:5:10","nodeType":"VariableDeclaration","scope":1850,"src":"7893:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1841,"nodeType":"ArrayTypeName","src":"7893:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:10"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"output","nameLocation":"7956:6:10","nodeType":"VariableDeclaration","scope":1850,"src":"7939:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ArrayTypeName","src":"7939:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:10"},"scope":2390,"src":"7864:164:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1875,"nodeType":"Block","src":"8290:64:10","statements":[{"AST":{"nativeSrc":"8309:39:10","nodeType":"YulBlock","src":"8309:39:10","statements":[{"nativeSrc":"8323:15:10","nodeType":"YulAssignment","src":"8323:15:10","value":{"name":"input","nativeSrc":"8333:5:10","nodeType":"YulIdentifier","src":"8333:5:10"},"variableNames":[{"name":"output","nativeSrc":"8323:6:10","nodeType":"YulIdentifier","src":"8323:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1861,"isOffset":false,"isSlot":false,"src":"8333:5:10","valueSize":1},{"declaration":1872,"isOffset":false,"isSlot":false,"src":"8323:6:10","valueSize":1}],"id":1874,"nodeType":"InlineAssembly","src":"8300:48:10"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"8034:78:10","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:10","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"input","nameLocation":"8201:5:10","nodeType":"VariableDeclaration","scope":1876,"src":"8154:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1860,"nodeType":"FunctionTypeName","parameterTypes":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"8163:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"8172:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:10"},"returnParameterTypes":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"8195:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:10"},"src":"8154:52:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:10"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"output","nameLocation":"8282:6:10","nodeType":"VariableDeclaration","scope":1876,"src":"8235:53:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1871,"nodeType":"FunctionTypeName","parameterTypes":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"8244:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"8253:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:10"},"returnParameterTypes":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"8276:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1868,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:10"},"src":"8235:53:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:10"},"scope":2390,"src":"8117:237:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1901,"nodeType":"Block","src":"8616:64:10","statements":[{"AST":{"nativeSrc":"8635:39:10","nodeType":"YulBlock","src":"8635:39:10","statements":[{"nativeSrc":"8649:15:10","nodeType":"YulAssignment","src":"8649:15:10","value":{"name":"input","nativeSrc":"8659:5:10","nodeType":"YulIdentifier","src":"8659:5:10"},"variableNames":[{"name":"output","nativeSrc":"8649:6:10","nodeType":"YulIdentifier","src":"8649:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1887,"isOffset":false,"isSlot":false,"src":"8659:5:10","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"8649:6:10","valueSize":1}],"id":1900,"nodeType":"InlineAssembly","src":"8626:48:10"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"8360:78:10","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:10","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"input","nameLocation":"8527:5:10","nodeType":"VariableDeclaration","scope":1902,"src":"8480:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":1886,"nodeType":"FunctionTypeName","parameterTypes":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"8489:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"8498:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:10"},"returnParameterTypes":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"8521:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1883,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:10"},"src":"8480:52:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:10"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"output","nameLocation":"8608:6:10","nodeType":"VariableDeclaration","scope":1902,"src":"8561:53:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1897,"nodeType":"FunctionTypeName","parameterTypes":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"8570:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"8579:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:10"},"returnParameterTypes":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1897,"src":"8602:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1894,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:10"},"src":"8561:53:10","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:10"},"scope":2390,"src":"8443:237:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1984,"nodeType":"Block","src":"9405:834:10","statements":[{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"low","nameLocation":"9423:3:10","nodeType":"VariableDeclaration","scope":1984,"src":"9415:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1916,"initialValue":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:10"},{"assignments":[1918],"declarations":[{"constant":false,"id":1918,"mutability":"mutable","name":"high","nameLocation":"9448:4:10","nodeType":"VariableDeclaration","scope":1984,"src":"9440:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1921,"initialValue":{"expression":{"id":1919,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"9455:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:10","memberName":"length","nodeType":"MemberAccess","src":"9455:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9482:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1928,"nodeType":"IfStatement","src":"9478:48:10","trueBody":{"id":1927,"nodeType":"Block","src":"9493:33:10","statements":[{"expression":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1912,"id":1926,"nodeType":"Return","src":"9507:8:10"}]}},{"body":{"id":1960,"nodeType":"Block","src":"9555:423:10","statements":[{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"mid","nameLocation":"9577:3:10","nodeType":"VariableDeclaration","scope":1960,"src":"9569:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1939,"initialValue":{"arguments":[{"id":1936,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9596:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1937,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9601:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1934,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"9583:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"9583:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1941,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"9844:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1942,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"9851:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2265,2291,2317],"referencedDeclaration":2317,"src":"9831:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2649_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"9831:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1945,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1958,"nodeType":"Block","src":"9922:46:10","statements":[{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1952,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9940:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"9946:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1957,"nodeType":"ExpressionStatement","src":"9940:13:10"}]},"id":1959,"nodeType":"IfStatement","src":"9827:141:10","trueBody":{"id":1951,"nodeType":"Block","src":"9873:43:10","statements":[{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9891:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1948,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"9898:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"9891:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"9543:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1930,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"9549:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"WhileStatement","src":"9536:442:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"10095:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1966,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10119:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"10126:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1965,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2265,2291,2317],"referencedDeclaration":2317,"src":"10106:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2649_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"10106:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1972,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"10144:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1982,"nodeType":"Block","src":"10198:35:10","statements":[{"expression":{"id":1980,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"10219:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1912,"id":1981,"nodeType":"Return","src":"10212:10:10"}]},"id":1983,"nodeType":"IfStatement","src":"10091:142:10","trueBody":{"id":1979,"nodeType":"Block","src":"10153:39:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"10174:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1912,"id":1978,"nodeType":"Return","src":"10167:14:10"}]}}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"8686:616:10","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:10","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"array","nameLocation":"9349:5:10","nodeType":"VariableDeclaration","scope":1985,"src":"9331:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"nodeType":"ArrayTypeName","src":"9331:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"element","nameLocation":"9364:7:10","nodeType":"VariableDeclaration","scope":1985,"src":"9356:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:10"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"9396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:10"},"scope":2390,"src":"9307:932:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"10756:709:10","statements":[{"assignments":[1997],"declarations":[{"constant":false,"id":1997,"mutability":"mutable","name":"low","nameLocation":"10774:3:10","nodeType":"VariableDeclaration","scope":2048,"src":"10766:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1999,"initialValue":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:10"},{"assignments":[2001],"declarations":[{"constant":false,"id":2001,"mutability":"mutable","name":"high","nameLocation":"10799:4:10","nodeType":"VariableDeclaration","scope":2048,"src":"10791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2004,"initialValue":{"expression":{"id":2002,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"10806:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:10","memberName":"length","nodeType":"MemberAccess","src":"10806:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10833:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2011,"nodeType":"IfStatement","src":"10829:48:10","trueBody":{"id":2010,"nodeType":"Block","src":"10844:33:10","statements":[{"expression":{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1995,"id":2009,"nodeType":"Return","src":"10858:8:10"}]}},{"body":{"id":2044,"nodeType":"Block","src":"10906:532:10","statements":[{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"mid","nameLocation":"10928:3:10","nodeType":"VariableDeclaration","scope":2044,"src":"10920:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2022,"initialValue":{"arguments":[{"id":2019,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"10947:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10952:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2017,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10934:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"10934:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2024,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11195:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2025,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"11202:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2023,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2265,2291,2317],"referencedDeclaration":2317,"src":"11182:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2649_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"11182:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2028,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"11215:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2042,"nodeType":"Block","src":"11385:43:10","statements":[{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2038,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"11403:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2039,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"11410:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"11403:10:10"}]},"id":2043,"nodeType":"IfStatement","src":"11178:250:10","trueBody":{"id":2037,"nodeType":"Block","src":"11224:155:10","statements":[{"id":2036,"nodeType":"UncheckedBlock","src":"11301:64:10","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2030,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"11333:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"11339:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"11333:13:10"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2012,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"10894:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2013,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"10900:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"WhileStatement","src":"10887:551:10"},{"expression":{"id":2046,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"11455:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1995,"id":2047,"nodeType":"Return","src":"11448:10:10"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"10245:412:10","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:10","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"array","nameLocation":"10700:5:10","nodeType":"VariableDeclaration","scope":2049,"src":"10682:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ArrayTypeName","src":"10682:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"element","nameLocation":"10715:7:10","nodeType":"VariableDeclaration","scope":2049,"src":"10707:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:10"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"10747:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:10"},"scope":2390,"src":"10662:803:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"11982:709:10","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"low","nameLocation":"12000:3:10","nodeType":"VariableDeclaration","scope":2112,"src":"11992:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2063,"initialValue":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:10"},{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"high","nameLocation":"12025:4:10","nodeType":"VariableDeclaration","scope":2112,"src":"12017:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2068,"initialValue":{"expression":{"id":2066,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"12032:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:10","memberName":"length","nodeType":"MemberAccess","src":"12032:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12059:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"12055:48:10","trueBody":{"id":2074,"nodeType":"Block","src":"12070:33:10","statements":[{"expression":{"hexValue":"30","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2059,"id":2073,"nodeType":"Return","src":"12084:8:10"}]}},{"body":{"id":2108,"nodeType":"Block","src":"12132:532:10","statements":[{"assignments":[2080],"declarations":[{"constant":false,"id":2080,"mutability":"mutable","name":"mid","nameLocation":"12154:3:10","nodeType":"VariableDeclaration","scope":2108,"src":"12146:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2086,"initialValue":{"arguments":[{"id":2083,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"12173:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2084,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12178:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2081,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"12160:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"12160:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2088,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"12421:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2089,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"12428:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2087,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2265,2291,2317],"referencedDeclaration":2317,"src":"12408:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2649_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"12408:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2092,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"12441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2106,"nodeType":"Block","src":"12499:155:10","statements":[{"id":2105,"nodeType":"UncheckedBlock","src":"12576:64:10","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2099,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"12608:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"12614:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"12608:13:10"}]}]},"id":2107,"nodeType":"IfStatement","src":"12404:250:10","trueBody":{"id":2098,"nodeType":"Block","src":"12450:43:10","statements":[{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2094,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12468:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2095,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"12475:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"12468:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"12120:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2077,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"12126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"WhileStatement","src":"12113:551:10"},{"expression":{"id":2110,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"12681:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2059,"id":2111,"nodeType":"Return","src":"12674:10:10"}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"11471:412:10","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:10","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"array","nameLocation":"11926:5:10","nodeType":"VariableDeclaration","scope":2113,"src":"11908:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ArrayTypeName","src":"11908:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"element","nameLocation":"11941:7:10","nodeType":"VariableDeclaration","scope":2113,"src":"11933:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:10"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"11973:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:10"},"scope":2390,"src":"11888:803:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"12875:709:10","statements":[{"assignments":[2125],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"low","nameLocation":"12893:3:10","nodeType":"VariableDeclaration","scope":2175,"src":"12885:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2127,"initialValue":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:10"},{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"high","nameLocation":"12918:4:10","nodeType":"VariableDeclaration","scope":2175,"src":"12910:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2132,"initialValue":{"expression":{"id":2130,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"12925:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:10","memberName":"length","nodeType":"MemberAccess","src":"12925:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"12952:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2139,"nodeType":"IfStatement","src":"12948:48:10","trueBody":{"id":2138,"nodeType":"Block","src":"12963:33:10","statements":[{"expression":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2123,"id":2137,"nodeType":"Return","src":"12977:8:10"}]}},{"body":{"id":2171,"nodeType":"Block","src":"13025:532:10","statements":[{"assignments":[2144],"declarations":[{"constant":false,"id":2144,"mutability":"mutable","name":"mid","nameLocation":"13047:3:10","nodeType":"VariableDeclaration","scope":2171,"src":"13039:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"id":2147,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"13066:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2148,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"13071:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2145,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"13053:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"13053:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2152,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"13320:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2153,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"13327:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2330,2343,2356],"referencedDeclaration":2356,"src":"13301:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2155,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"13334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2169,"nodeType":"Block","src":"13504:43:10","statements":[{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2165,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"13522:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"13529:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2168,"nodeType":"ExpressionStatement","src":"13522:10:10"}]},"id":2170,"nodeType":"IfStatement","src":"13297:250:10","trueBody":{"id":2164,"nodeType":"Block","src":"13343:155:10","statements":[{"id":2163,"nodeType":"UncheckedBlock","src":"13420:64:10","statements":[{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2157,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"13452:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"13458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"13452:13:10"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"13013:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2141,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"13019:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"WhileStatement","src":"13006:551:10"},{"expression":{"id":2173,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"13574:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2123,"id":2174,"nodeType":"Return","src":"13567:10:10"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"12697:74:10","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:10","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"array","nameLocation":"12819:5:10","nodeType":"VariableDeclaration","scope":2176,"src":"12802:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ArrayTypeName","src":"12802:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"element","nameLocation":"12834:7:10","nodeType":"VariableDeclaration","scope":2176,"src":"12826:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:10"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"12866:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:10"},"scope":2390,"src":"12776:808:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"13768:709:10","statements":[{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"low","nameLocation":"13786:3:10","nodeType":"VariableDeclaration","scope":2238,"src":"13778:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"initialValue":{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:10"},{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"high","nameLocation":"13811:4:10","nodeType":"VariableDeclaration","scope":2238,"src":"13803:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"expression":{"id":2193,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"13818:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:10","memberName":"length","nodeType":"MemberAccess","src":"13818:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"13845:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"13841:48:10","trueBody":{"id":2201,"nodeType":"Block","src":"13856:33:10","statements":[{"expression":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2186,"id":2200,"nodeType":"Return","src":"13870:8:10"}]}},{"body":{"id":2234,"nodeType":"Block","src":"13918:532:10","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"mid","nameLocation":"13940:3:10","nodeType":"VariableDeclaration","scope":2234,"src":"13932:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"id":2210,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"13959:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2211,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"13964:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2208,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"13946:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"13946:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2215,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"14213:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"14220:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2214,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2330,2343,2356],"referencedDeclaration":2356,"src":"14194:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2218,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"14227:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2232,"nodeType":"Block","src":"14285:155:10","statements":[{"id":2231,"nodeType":"UncheckedBlock","src":"14362:64:10","statements":[{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2225,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"14394:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"14400:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ExpressionStatement","src":"14394:13:10"}]}]},"id":2233,"nodeType":"IfStatement","src":"14190:250:10","trueBody":{"id":2224,"nodeType":"Block","src":"14236:43:10","statements":[{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"14254:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2221,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"14261:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"14254:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"13906:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2204,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"13912:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"WhileStatement","src":"13899:551:10"},{"expression":{"id":2236,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"14467:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2186,"id":2237,"nodeType":"Return","src":"14460:10:10"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"13590:74:10","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:10","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"array","nameLocation":"13712:5:10","nodeType":"VariableDeclaration","scope":2239,"src":"13695:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ArrayTypeName","src":"13695:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"element","nameLocation":"13727:7:10","nodeType":"VariableDeclaration","scope":2239,"src":"13719:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:10"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"13759:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:10"},"scope":2390,"src":"13669:808:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2264,"nodeType":"Block","src":"14793:167:10","statements":[{"assignments":[2252],"declarations":[{"constant":false,"id":2252,"mutability":"mutable","name":"slot","nameLocation":"14811:4:10","nodeType":"VariableDeclaration","scope":2264,"src":"14803:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2253,"nodeType":"VariableDeclarationStatement","src":"14803:12:10"},{"AST":{"nativeSrc":"14850:40:10","nodeType":"YulBlock","src":"14850:40:10","statements":[{"nativeSrc":"14864:16:10","nodeType":"YulAssignment","src":"14864:16:10","value":{"name":"arr.slot","nativeSrc":"14872:8:10","nodeType":"YulIdentifier","src":"14872:8:10"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:10","nodeType":"YulIdentifier","src":"14864:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2243,"isOffset":false,"isSlot":true,"src":"14872:8:10","suffix":"slot","valueSize":1},{"declaration":2252,"isOffset":false,"isSlot":false,"src":"14864:4:10","valueSize":1}],"flags":["memory-safe"],"id":2254,"nodeType":"InlineAssembly","src":"14825:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2259,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"14932:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2255,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"14906:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"14906:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"14906:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2669,"src":"14906:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2640_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2640_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2250,"id":2263,"nodeType":"Return","src":"14899:54:10"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"14483:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2265,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:10","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"arr","nameLocation":"14719:3:10","nodeType":"VariableDeclaration","scope":2265,"src":"14701:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2242,"nodeType":"ArrayTypeName","src":"14701:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"pos","nameLocation":"14732:3:10","nodeType":"VariableDeclaration","scope":2265,"src":"14724:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:10"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2265,"src":"14760:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2640_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2248,"nodeType":"UserDefinedTypeName","pathNode":{"id":2247,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:10","14772:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"14760:23:10"},"referencedDeclaration":2640,"src":"14760:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2640_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:10"},"scope":2390,"src":"14679:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2290,"nodeType":"Block","src":"15276:167:10","statements":[{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"slot","nameLocation":"15294:4:10","nodeType":"VariableDeclaration","scope":2290,"src":"15286:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2279,"nodeType":"VariableDeclarationStatement","src":"15286:12:10"},{"AST":{"nativeSrc":"15333:40:10","nodeType":"YulBlock","src":"15333:40:10","statements":[{"nativeSrc":"15347:16:10","nodeType":"YulAssignment","src":"15347:16:10","value":{"name":"arr.slot","nativeSrc":"15355:8:10","nodeType":"YulIdentifier","src":"15355:8:10"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:10","nodeType":"YulIdentifier","src":"15347:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2269,"isOffset":false,"isSlot":true,"src":"15355:8:10","suffix":"slot","valueSize":1},{"declaration":2278,"isOffset":false,"isSlot":false,"src":"15347:4:10","valueSize":1}],"flags":["memory-safe"],"id":2280,"nodeType":"InlineAssembly","src":"15308:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2285,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"15415:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2281,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"15389:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"15389:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"15389:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:10","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":2691,"src":"15389:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2646_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2646_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2276,"id":2289,"nodeType":"Return","src":"15382:54:10"}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"14966:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:10","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"arr","nameLocation":"15202:3:10","nodeType":"VariableDeclaration","scope":2291,"src":"15184:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2268,"nodeType":"ArrayTypeName","src":"15184:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"pos","nameLocation":"15215:3:10","nodeType":"VariableDeclaration","scope":2291,"src":"15207:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:10"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"15243:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2646_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2274,"nodeType":"UserDefinedTypeName","pathNode":{"id":2273,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:10","15255:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":2646,"src":"15243:23:10"},"referencedDeclaration":2646,"src":"15243:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2646_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:10"},"scope":2390,"src":"15162:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"15759:167:10","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"slot","nameLocation":"15777:4:10","nodeType":"VariableDeclaration","scope":2316,"src":"15769:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2305,"nodeType":"VariableDeclarationStatement","src":"15769:12:10"},{"AST":{"nativeSrc":"15816:40:10","nodeType":"YulBlock","src":"15816:40:10","statements":[{"nativeSrc":"15830:16:10","nodeType":"YulAssignment","src":"15830:16:10","value":{"name":"arr.slot","nativeSrc":"15838:8:10","nodeType":"YulIdentifier","src":"15838:8:10"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:10","nodeType":"YulIdentifier","src":"15830:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2295,"isOffset":false,"isSlot":true,"src":"15838:8:10","suffix":"slot","valueSize":1},{"declaration":2304,"isOffset":false,"isSlot":false,"src":"15830:4:10","valueSize":1}],"flags":["memory-safe"],"id":2306,"nodeType":"InlineAssembly","src":"15791:65:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2311,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"15898:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2307,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"15872:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:10","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"15872:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:10","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"15872:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:10","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2702,"src":"15872:45:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2649_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2302,"id":2315,"nodeType":"Return","src":"15865:54:10"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"15449:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:10","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"arr","nameLocation":"15685:3:10","nodeType":"VariableDeclaration","scope":2317,"src":"15667:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ArrayTypeName","src":"15667:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"pos","nameLocation":"15698:3:10","nodeType":"VariableDeclaration","scope":2317,"src":"15690:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2317,"src":"15726:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2300,"nodeType":"UserDefinedTypeName","pathNode":{"id":2299,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:10","15738:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":2649,"src":"15726:23:10"},"referencedDeclaration":2649,"src":"15726:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:10"},"scope":2390,"src":"15645:281:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2329,"nodeType":"Block","src":"16227:98:10","statements":[{"AST":{"nativeSrc":"16246:73:10","nodeType":"YulBlock","src":"16246:73:10","statements":[{"nativeSrc":"16260:49:10","nodeType":"YulAssignment","src":"16260:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:10","nodeType":"YulIdentifier","src":"16281:3:10"},{"kind":"number","nativeSrc":"16286:4:10","nodeType":"YulLiteral","src":"16286:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:10","nodeType":"YulIdentifier","src":"16277:3:10"},"nativeSrc":"16277:14:10","nodeType":"YulFunctionCall","src":"16277:14:10"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:10","nodeType":"YulIdentifier","src":"16297:3:10"},{"kind":"number","nativeSrc":"16302:4:10","nodeType":"YulLiteral","src":"16302:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:10","nodeType":"YulIdentifier","src":"16293:3:10"},"nativeSrc":"16293:14:10","nodeType":"YulFunctionCall","src":"16293:14:10"}],"functionName":{"name":"add","nativeSrc":"16273:3:10","nodeType":"YulIdentifier","src":"16273:3:10"},"nativeSrc":"16273:35:10","nodeType":"YulFunctionCall","src":"16273:35:10"}],"functionName":{"name":"mload","nativeSrc":"16267:5:10","nodeType":"YulIdentifier","src":"16267:5:10"},"nativeSrc":"16267:42:10","nodeType":"YulFunctionCall","src":"16267:42:10"},"variableNames":[{"name":"res","nativeSrc":"16260:3:10","nodeType":"YulIdentifier","src":"16260:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2321,"isOffset":false,"isSlot":false,"src":"16281:3:10","valueSize":1},{"declaration":2323,"isOffset":false,"isSlot":false,"src":"16297:3:10","valueSize":1},{"declaration":2326,"isOffset":false,"isSlot":false,"src":"16260:3:10","valueSize":1}],"id":2328,"nodeType":"InlineAssembly","src":"16237:82:10"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"15932:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:10","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"arr","nameLocation":"16173:3:10","nodeType":"VariableDeclaration","scope":2330,"src":"16156:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"nodeType":"ArrayTypeName","src":"16156:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"pos","nameLocation":"16186:3:10","nodeType":"VariableDeclaration","scope":2330,"src":"16178:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:10"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"res","nameLocation":"16222:3:10","nodeType":"VariableDeclaration","scope":2330,"src":"16214:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:10"},"scope":2390,"src":"16128:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"16626:98:10","statements":[{"AST":{"nativeSrc":"16645:73:10","nodeType":"YulBlock","src":"16645:73:10","statements":[{"nativeSrc":"16659:49:10","nodeType":"YulAssignment","src":"16659:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:10","nodeType":"YulIdentifier","src":"16680:3:10"},{"kind":"number","nativeSrc":"16685:4:10","nodeType":"YulLiteral","src":"16685:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:10","nodeType":"YulIdentifier","src":"16676:3:10"},"nativeSrc":"16676:14:10","nodeType":"YulFunctionCall","src":"16676:14:10"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:10","nodeType":"YulIdentifier","src":"16696:3:10"},{"kind":"number","nativeSrc":"16701:4:10","nodeType":"YulLiteral","src":"16701:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:10","nodeType":"YulIdentifier","src":"16692:3:10"},"nativeSrc":"16692:14:10","nodeType":"YulFunctionCall","src":"16692:14:10"}],"functionName":{"name":"add","nativeSrc":"16672:3:10","nodeType":"YulIdentifier","src":"16672:3:10"},"nativeSrc":"16672:35:10","nodeType":"YulFunctionCall","src":"16672:35:10"}],"functionName":{"name":"mload","nativeSrc":"16666:5:10","nodeType":"YulIdentifier","src":"16666:5:10"},"nativeSrc":"16666:42:10","nodeType":"YulFunctionCall","src":"16666:42:10"},"variableNames":[{"name":"res","nativeSrc":"16659:3:10","nodeType":"YulIdentifier","src":"16659:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2334,"isOffset":false,"isSlot":false,"src":"16680:3:10","valueSize":1},{"declaration":2336,"isOffset":false,"isSlot":false,"src":"16696:3:10","valueSize":1},{"declaration":2339,"isOffset":false,"isSlot":false,"src":"16659:3:10","valueSize":1}],"id":2341,"nodeType":"InlineAssembly","src":"16636:82:10"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"16331:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:10","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"arr","nameLocation":"16572:3:10","nodeType":"VariableDeclaration","scope":2343,"src":"16555:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2333,"nodeType":"ArrayTypeName","src":"16555:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"pos","nameLocation":"16585:3:10","nodeType":"VariableDeclaration","scope":2343,"src":"16577:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:10"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"res","nameLocation":"16621:3:10","nodeType":"VariableDeclaration","scope":2343,"src":"16613:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:10"},"scope":2390,"src":"16527:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"17025:98:10","statements":[{"AST":{"nativeSrc":"17044:73:10","nodeType":"YulBlock","src":"17044:73:10","statements":[{"nativeSrc":"17058:49:10","nodeType":"YulAssignment","src":"17058:49:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:10","nodeType":"YulIdentifier","src":"17079:3:10"},{"kind":"number","nativeSrc":"17084:4:10","nodeType":"YulLiteral","src":"17084:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:10","nodeType":"YulIdentifier","src":"17075:3:10"},"nativeSrc":"17075:14:10","nodeType":"YulFunctionCall","src":"17075:14:10"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:10","nodeType":"YulIdentifier","src":"17095:3:10"},{"kind":"number","nativeSrc":"17100:4:10","nodeType":"YulLiteral","src":"17100:4:10","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:10","nodeType":"YulIdentifier","src":"17091:3:10"},"nativeSrc":"17091:14:10","nodeType":"YulFunctionCall","src":"17091:14:10"}],"functionName":{"name":"add","nativeSrc":"17071:3:10","nodeType":"YulIdentifier","src":"17071:3:10"},"nativeSrc":"17071:35:10","nodeType":"YulFunctionCall","src":"17071:35:10"}],"functionName":{"name":"mload","nativeSrc":"17065:5:10","nodeType":"YulIdentifier","src":"17065:5:10"},"nativeSrc":"17065:42:10","nodeType":"YulFunctionCall","src":"17065:42:10"},"variableNames":[{"name":"res","nativeSrc":"17058:3:10","nodeType":"YulIdentifier","src":"17058:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2347,"isOffset":false,"isSlot":false,"src":"17079:3:10","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"17095:3:10","valueSize":1},{"declaration":2352,"isOffset":false,"isSlot":false,"src":"17058:3:10","valueSize":1}],"id":2354,"nodeType":"InlineAssembly","src":"17035:82:10"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"16730:191:10","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:10","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"arr","nameLocation":"16971:3:10","nodeType":"VariableDeclaration","scope":2356,"src":"16954:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2346,"nodeType":"ArrayTypeName","src":"16954:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"pos","nameLocation":"16984:3:10","nodeType":"VariableDeclaration","scope":2356,"src":"16976:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:10"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"res","nameLocation":"17020:3:10","nodeType":"VariableDeclaration","scope":2356,"src":"17012:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:10"},"scope":2390,"src":"16926:197:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"17439:88:10","statements":[{"AST":{"nativeSrc":"17474:47:10","nodeType":"YulBlock","src":"17474:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:10","nodeType":"YulIdentifier","src":"17495:10:10"},{"name":"len","nativeSrc":"17507:3:10","nodeType":"YulIdentifier","src":"17507:3:10"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:10","nodeType":"YulIdentifier","src":"17488:6:10"},"nativeSrc":"17488:23:10","nodeType":"YulFunctionCall","src":"17488:23:10"},"nativeSrc":"17488:23:10","nodeType":"YulExpressionStatement","src":"17488:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2360,"isOffset":false,"isSlot":true,"src":"17495:10:10","suffix":"slot","valueSize":1},{"declaration":2362,"isOffset":false,"isSlot":false,"src":"17507:3:10","valueSize":1}],"flags":["memory-safe"],"id":2365,"nodeType":"InlineAssembly","src":"17449:72:10"}]},"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"17129:233:10","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:10","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"array","nameLocation":"17410:5:10","nodeType":"VariableDeclaration","scope":2367,"src":"17392:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2359,"nodeType":"ArrayTypeName","src":"17392:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"len","nameLocation":"17425:3:10","nodeType":"VariableDeclaration","scope":2367,"src":"17417:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:10"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"17439:0:10"},"scope":2390,"src":"17367:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2377,"nodeType":"Block","src":"17843:88:10","statements":[{"AST":{"nativeSrc":"17878:47:10","nodeType":"YulBlock","src":"17878:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:10","nodeType":"YulIdentifier","src":"17899:10:10"},{"name":"len","nativeSrc":"17911:3:10","nodeType":"YulIdentifier","src":"17911:3:10"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:10","nodeType":"YulIdentifier","src":"17892:6:10"},"nativeSrc":"17892:23:10","nodeType":"YulFunctionCall","src":"17892:23:10"},"nativeSrc":"17892:23:10","nodeType":"YulExpressionStatement","src":"17892:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2371,"isOffset":false,"isSlot":true,"src":"17899:10:10","suffix":"slot","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"17911:3:10","valueSize":1}],"flags":["memory-safe"],"id":2376,"nodeType":"InlineAssembly","src":"17853:72:10"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"17533:233:10","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2378,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:10","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"array","nameLocation":"17814:5:10","nodeType":"VariableDeclaration","scope":2378,"src":"17796:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2370,"nodeType":"ArrayTypeName","src":"17796:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"len","nameLocation":"17829:3:10","nodeType":"VariableDeclaration","scope":2378,"src":"17821:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:10"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[],"src":"17843:0:10"},"scope":2390,"src":"17771:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2388,"nodeType":"Block","src":"18247:88:10","statements":[{"AST":{"nativeSrc":"18282:47:10","nodeType":"YulBlock","src":"18282:47:10","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:10","nodeType":"YulIdentifier","src":"18303:10:10"},{"name":"len","nativeSrc":"18315:3:10","nodeType":"YulIdentifier","src":"18315:3:10"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:10","nodeType":"YulIdentifier","src":"18296:6:10"},"nativeSrc":"18296:23:10","nodeType":"YulFunctionCall","src":"18296:23:10"},"nativeSrc":"18296:23:10","nodeType":"YulExpressionStatement","src":"18296:23:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2382,"isOffset":false,"isSlot":true,"src":"18303:10:10","suffix":"slot","valueSize":1},{"declaration":2384,"isOffset":false,"isSlot":false,"src":"18315:3:10","valueSize":1}],"flags":["memory-safe"],"id":2387,"nodeType":"InlineAssembly","src":"18257:72:10"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"17937:233:10","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:10","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"array","nameLocation":"18218:5:10","nodeType":"VariableDeclaration","scope":2389,"src":"18200:23:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ArrayTypeName","src":"18200:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"len","nameLocation":"18233:3:10","nodeType":"VariableDeclaration","scope":2389,"src":"18225:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:10"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"18247:0:10"},"scope":2390,"src":"18175:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2391,"src":"459:17878:10","usedErrors":[],"usedEvents":[]}],"src":"183:18155:10"},"id":10},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2422]},"id":2423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2392,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"131:92:11","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2422,"linearizedBaseContracts":[2422],"name":"Comparators","nameLocation":"232:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2406,"nodeType":"Block","src":"313:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"334:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2401,"id":2405,"nodeType":"Return","src":"323:12:11"}]},"id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:11","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"a","nameLocation":"270:1:11","nodeType":"VariableDeclaration","scope":2407,"src":"262:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"b","nameLocation":"281:1:11","nodeType":"VariableDeclaration","scope":2407,"src":"273:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:11"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2407,"src":"307:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2399,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:11"},"scope":2422,"src":"250:92:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"411:29:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"428:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"432:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2415,"id":2419,"nodeType":"Return","src":"421:12:11"}]},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:11","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"a","nameLocation":"368:1:11","nodeType":"VariableDeclaration","scope":2421,"src":"360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"b","nameLocation":"379:1:11","nodeType":"VariableDeclaration","scope":2421,"src":"371:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:11"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"405:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2413,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:11"},"scope":2422,"src":"348:92:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2423,"src":"224:218:11","usedErrors":[],"usedEvents":[]}],"src":"105:338:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2452]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2452,"linearizedBaseContracts":[2452],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2433,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2429,"id":2432,"nodeType":"Return","src":"728:17:12"}]},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2452,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2439,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2438,"id":2441,"nodeType":"Return","src":"835:15:12"}]},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2452,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2447,"id":2449,"nodeType":"Return","src":"945:8:12"}]},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2452,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2453,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2504]},"id":2505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2504,"linearizedBaseContracts":[2504],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":2459,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":2504,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":2463,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":2504,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":2467,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":2504,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":2471,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":2504,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":2475,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":2504,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":2479,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":2504,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":2483,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":2504,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":2487,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":2504,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":2491,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":2504,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":2495,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":2504,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nativeSrc":"1854:110:13","nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:13","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:13","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:13","nodeType":"YulIdentifier","src":"1868:6:13"},"nativeSrc":"1868:24:13","nodeType":"YulFunctionCall","src":"1868:24:13"},"nativeSrc":"1868:24:13","nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:13","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:13","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:13","nodeType":"YulIdentifier","src":"1905:6:13"},"nativeSrc":"1905:18:13","nodeType":"YulFunctionCall","src":"1905:18:13"},"nativeSrc":"1905:18:13","nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:13","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:13","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:13","nodeType":"YulIdentifier","src":"1936:6:13"},"nativeSrc":"1936:18:13","nodeType":"YulFunctionCall","src":"1936:18:13"},"nativeSrc":"1936:18:13","nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2498,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":2501,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":2503,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":2504,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2505,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[2634]},"id":2635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2506,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"225:1373:14","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":2634,"linearizedBaseContracts":[2634],"name":"SlotDerivation","nameLocation":"1607:14:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2516,"nodeType":"Block","src":"1790:194:14","statements":[{"AST":{"nativeSrc":"1825:153:14","nodeType":"YulBlock","src":"1825:153:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:14","nodeType":"YulLiteral","src":"1846:4:14","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:14","nodeType":"YulIdentifier","src":"1870:9:14"},{"kind":"number","nativeSrc":"1881:4:14","nodeType":"YulLiteral","src":"1881:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:14","nodeType":"YulIdentifier","src":"1866:3:14"},"nativeSrc":"1866:20:14","nodeType":"YulFunctionCall","src":"1866:20:14"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:14","nodeType":"YulIdentifier","src":"1894:9:14"}],"functionName":{"name":"mload","nativeSrc":"1888:5:14","nodeType":"YulIdentifier","src":"1888:5:14"},"nativeSrc":"1888:16:14","nodeType":"YulFunctionCall","src":"1888:16:14"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:14","nodeType":"YulIdentifier","src":"1856:9:14"},"nativeSrc":"1856:49:14","nodeType":"YulFunctionCall","src":"1856:49:14"},{"kind":"number","nativeSrc":"1907:1:14","nodeType":"YulLiteral","src":"1907:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:14","nodeType":"YulIdentifier","src":"1852:3:14"},"nativeSrc":"1852:57:14","nodeType":"YulFunctionCall","src":"1852:57:14"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:14","nodeType":"YulIdentifier","src":"1839:6:14"},"nativeSrc":"1839:71:14","nodeType":"YulFunctionCall","src":"1839:71:14"},"nativeSrc":"1839:71:14","nodeType":"YulExpressionStatement","src":"1839:71:14"},{"nativeSrc":"1923:45:14","nodeType":"YulAssignment","src":"1923:45:14","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:14","nodeType":"YulLiteral","src":"1945:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:14","nodeType":"YulLiteral","src":"1951:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:14","nodeType":"YulIdentifier","src":"1935:9:14"},"nativeSrc":"1935:21:14","nodeType":"YulFunctionCall","src":"1935:21:14"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:14","nodeType":"YulLiteral","src":"1962:4:14","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:14","nodeType":"YulIdentifier","src":"1958:3:14"},"nativeSrc":"1958:9:14","nodeType":"YulFunctionCall","src":"1958:9:14"}],"functionName":{"name":"and","nativeSrc":"1931:3:14","nodeType":"YulIdentifier","src":"1931:3:14"},"nativeSrc":"1931:37:14","nodeType":"YulFunctionCall","src":"1931:37:14"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:14","nodeType":"YulIdentifier","src":"1923:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2510,"isOffset":false,"isSlot":false,"src":"1870:9:14","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"1894:9:14","valueSize":1},{"declaration":2513,"isOffset":false,"isSlot":false,"src":"1923:4:14","valueSize":1}],"flags":["memory-safe"],"id":2515,"nodeType":"InlineAssembly","src":"1800:178:14"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"1628:74:14","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:14","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:14","nodeType":"VariableDeclaration","scope":2517,"src":"1728:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2509,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:14"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"slot","nameLocation":"1784:4:14","nodeType":"VariableDeclaration","scope":2517,"src":"1776:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:14"},"scope":2634,"src":"1707:277:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2538,"nodeType":"Block","src":"2176:86:14","statements":[{"id":2537,"nodeType":"UncheckedBlock","src":"2186:70:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2531,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"2233:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:14","typeDescriptions":{}}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2533,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2241:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:14","typeDescriptions":{}}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2526,"id":2536,"nodeType":"Return","src":"2210:35:14"}]}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"1990:99:14","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":2539,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:14","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"slot","nameLocation":"2118:4:14","nodeType":"VariableDeclaration","scope":2539,"src":"2110:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"pos","nameLocation":"2132:3:14","nodeType":"VariableDeclaration","scope":2539,"src":"2124:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:14"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"result","nameLocation":"2168:6:14","nodeType":"VariableDeclaration","scope":2539,"src":"2160:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:14"},"scope":2634,"src":"2094:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2548,"nodeType":"Block","src":"2465:127:14","statements":[{"AST":{"nativeSrc":"2500:86:14","nodeType":"YulBlock","src":"2500:86:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:14","nodeType":"YulLiteral","src":"2521:4:14","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:14","nodeType":"YulIdentifier","src":"2527:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:14","nodeType":"YulIdentifier","src":"2514:6:14"},"nativeSrc":"2514:18:14","nodeType":"YulFunctionCall","src":"2514:18:14"},"nativeSrc":"2514:18:14","nodeType":"YulExpressionStatement","src":"2514:18:14"},{"nativeSrc":"2545:31:14","nodeType":"YulAssignment","src":"2545:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:14","nodeType":"YulLiteral","src":"2565:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:14","nodeType":"YulLiteral","src":"2571:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:14","nodeType":"YulIdentifier","src":"2555:9:14"},"nativeSrc":"2555:21:14","nodeType":"YulFunctionCall","src":"2555:21:14"},"variableNames":[{"name":"result","nativeSrc":"2545:6:14","nodeType":"YulIdentifier","src":"2545:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2545,"isOffset":false,"isSlot":false,"src":"2545:6:14","valueSize":1},{"declaration":2542,"isOffset":false,"isSlot":false,"src":"2527:4:14","valueSize":1}],"flags":["memory-safe"],"id":2547,"nodeType":"InlineAssembly","src":"2475:111:14"}]},"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"2268:118:14","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:14","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"slot","nameLocation":"2420:4:14","nodeType":"VariableDeclaration","scope":2549,"src":"2412:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:14"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"result","nameLocation":"2457:6:14","nodeType":"VariableDeclaration","scope":2549,"src":"2449:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:14"},"scope":2634,"src":"2391:201:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"2770:179:14","statements":[{"AST":{"nativeSrc":"2805:138:14","nodeType":"YulBlock","src":"2805:138:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:14","nodeType":"YulLiteral","src":"2826:4:14","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:14","nodeType":"YulIdentifier","src":"2836:3:14"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:14","nodeType":"YulLiteral","src":"2845:2:14","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:14","nodeType":"YulLiteral","src":"2853:1:14","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:14","nodeType":"YulIdentifier","src":"2849:3:14"},"nativeSrc":"2849:6:14","nodeType":"YulFunctionCall","src":"2849:6:14"}],"functionName":{"name":"shr","nativeSrc":"2841:3:14","nodeType":"YulIdentifier","src":"2841:3:14"},"nativeSrc":"2841:15:14","nodeType":"YulFunctionCall","src":"2841:15:14"}],"functionName":{"name":"and","nativeSrc":"2832:3:14","nodeType":"YulIdentifier","src":"2832:3:14"},"nativeSrc":"2832:25:14","nodeType":"YulFunctionCall","src":"2832:25:14"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:14","nodeType":"YulIdentifier","src":"2819:6:14"},"nativeSrc":"2819:39:14","nodeType":"YulFunctionCall","src":"2819:39:14"},"nativeSrc":"2819:39:14","nodeType":"YulExpressionStatement","src":"2819:39:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:14","nodeType":"YulLiteral","src":"2878:4:14","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:14","nodeType":"YulIdentifier","src":"2884:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:14","nodeType":"YulIdentifier","src":"2871:6:14"},"nativeSrc":"2871:18:14","nodeType":"YulFunctionCall","src":"2871:18:14"},"nativeSrc":"2871:18:14","nodeType":"YulExpressionStatement","src":"2871:18:14"},{"nativeSrc":"2902:31:14","nodeType":"YulAssignment","src":"2902:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:14","nodeType":"YulLiteral","src":"2922:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:14","nodeType":"YulLiteral","src":"2928:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:14","nodeType":"YulIdentifier","src":"2912:9:14"},"nativeSrc":"2912:21:14","nodeType":"YulFunctionCall","src":"2912:21:14"},"variableNames":[{"name":"result","nativeSrc":"2902:6:14","nodeType":"YulIdentifier","src":"2902:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2554,"isOffset":false,"isSlot":false,"src":"2836:3:14","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"2902:6:14","valueSize":1},{"declaration":2552,"isOffset":false,"isSlot":false,"src":"2884:4:14","valueSize":1}],"flags":["memory-safe"],"id":2559,"nodeType":"InlineAssembly","src":"2780:163:14"}]},"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"2598:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:14","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"slot","nameLocation":"2712:4:14","nodeType":"VariableDeclaration","scope":2561,"src":"2704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"key","nameLocation":"2726:3:14","nodeType":"VariableDeclaration","scope":2561,"src":"2718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:14"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"result","nameLocation":"2762:6:14","nodeType":"VariableDeclaration","scope":2561,"src":"2754:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:14"},"scope":2634,"src":"2681:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2572,"nodeType":"Block","src":"3124:173:14","statements":[{"AST":{"nativeSrc":"3159:132:14","nodeType":"YulBlock","src":"3159:132:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:14","nodeType":"YulLiteral","src":"3180:4:14","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:14","nodeType":"YulIdentifier","src":"3200:3:14"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:14","nodeType":"YulIdentifier","src":"3193:6:14"},"nativeSrc":"3193:11:14","nodeType":"YulFunctionCall","src":"3193:11:14"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:14","nodeType":"YulIdentifier","src":"3186:6:14"},"nativeSrc":"3186:19:14","nodeType":"YulFunctionCall","src":"3186:19:14"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:14","nodeType":"YulIdentifier","src":"3173:6:14"},"nativeSrc":"3173:33:14","nodeType":"YulFunctionCall","src":"3173:33:14"},"nativeSrc":"3173:33:14","nodeType":"YulExpressionStatement","src":"3173:33:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:14","nodeType":"YulLiteral","src":"3226:4:14","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:14","nodeType":"YulIdentifier","src":"3232:4:14"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:14","nodeType":"YulIdentifier","src":"3219:6:14"},"nativeSrc":"3219:18:14","nodeType":"YulFunctionCall","src":"3219:18:14"},"nativeSrc":"3219:18:14","nodeType":"YulExpressionStatement","src":"3219:18:14"},{"nativeSrc":"3250:31:14","nodeType":"YulAssignment","src":"3250:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:14","nodeType":"YulLiteral","src":"3270:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:14","nodeType":"YulLiteral","src":"3276:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:14","nodeType":"YulIdentifier","src":"3260:9:14"},"nativeSrc":"3260:21:14","nodeType":"YulFunctionCall","src":"3260:21:14"},"variableNames":[{"name":"result","nativeSrc":"3250:6:14","nodeType":"YulIdentifier","src":"3250:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2566,"isOffset":false,"isSlot":false,"src":"3200:3:14","valueSize":1},{"declaration":2569,"isOffset":false,"isSlot":false,"src":"3250:6:14","valueSize":1},{"declaration":2564,"isOffset":false,"isSlot":false,"src":"3232:4:14","valueSize":1}],"flags":["memory-safe"],"id":2571,"nodeType":"InlineAssembly","src":"3134:157:14"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"2955:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2573,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:14","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"slot","nameLocation":"3069:4:14","nodeType":"VariableDeclaration","scope":2573,"src":"3061:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"key","nameLocation":"3080:3:14","nodeType":"VariableDeclaration","scope":2573,"src":"3075:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2565,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:14"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"result","nameLocation":"3116:6:14","nodeType":"VariableDeclaration","scope":2573,"src":"3108:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:14"},"scope":2634,"src":"3038:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2584,"nodeType":"Block","src":"3475:157:14","statements":[{"AST":{"nativeSrc":"3510:116:14","nodeType":"YulBlock","src":"3510:116:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:14","nodeType":"YulLiteral","src":"3531:4:14","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:14","nodeType":"YulIdentifier","src":"3537:3:14"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:14","nodeType":"YulIdentifier","src":"3524:6:14"},"nativeSrc":"3524:17:14","nodeType":"YulFunctionCall","src":"3524:17:14"},"nativeSrc":"3524:17:14","nodeType":"YulExpressionStatement","src":"3524:17:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:14","nodeType":"YulLiteral","src":"3561:4:14","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:14","nodeType":"YulIdentifier","src":"3567:4:14"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:14","nodeType":"YulIdentifier","src":"3554:6:14"},"nativeSrc":"3554:18:14","nodeType":"YulFunctionCall","src":"3554:18:14"},"nativeSrc":"3554:18:14","nodeType":"YulExpressionStatement","src":"3554:18:14"},{"nativeSrc":"3585:31:14","nodeType":"YulAssignment","src":"3585:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:14","nodeType":"YulLiteral","src":"3605:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:14","nodeType":"YulLiteral","src":"3611:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:14","nodeType":"YulIdentifier","src":"3595:9:14"},"nativeSrc":"3595:21:14","nodeType":"YulFunctionCall","src":"3595:21:14"},"variableNames":[{"name":"result","nativeSrc":"3585:6:14","nodeType":"YulIdentifier","src":"3585:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2578,"isOffset":false,"isSlot":false,"src":"3537:3:14","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":false,"src":"3585:6:14","valueSize":1},{"declaration":2576,"isOffset":false,"isSlot":false,"src":"3567:4:14","valueSize":1}],"flags":["memory-safe"],"id":2583,"nodeType":"InlineAssembly","src":"3485:141:14"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"3303:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:14","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"slot","nameLocation":"3417:4:14","nodeType":"VariableDeclaration","scope":2585,"src":"3409:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"key","nameLocation":"3431:3:14","nodeType":"VariableDeclaration","scope":2585,"src":"3423:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:14"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"result","nameLocation":"3467:6:14","nodeType":"VariableDeclaration","scope":2585,"src":"3459:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:14"},"scope":2634,"src":"3386:246:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"3810:157:14","statements":[{"AST":{"nativeSrc":"3845:116:14","nodeType":"YulBlock","src":"3845:116:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:14","nodeType":"YulLiteral","src":"3866:4:14","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:14","nodeType":"YulIdentifier","src":"3872:3:14"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:14","nodeType":"YulIdentifier","src":"3859:6:14"},"nativeSrc":"3859:17:14","nodeType":"YulFunctionCall","src":"3859:17:14"},"nativeSrc":"3859:17:14","nodeType":"YulExpressionStatement","src":"3859:17:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:14","nodeType":"YulLiteral","src":"3896:4:14","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:14","nodeType":"YulIdentifier","src":"3902:4:14"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:14","nodeType":"YulIdentifier","src":"3889:6:14"},"nativeSrc":"3889:18:14","nodeType":"YulFunctionCall","src":"3889:18:14"},"nativeSrc":"3889:18:14","nodeType":"YulExpressionStatement","src":"3889:18:14"},{"nativeSrc":"3920:31:14","nodeType":"YulAssignment","src":"3920:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:14","nodeType":"YulLiteral","src":"3940:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:14","nodeType":"YulLiteral","src":"3946:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:14","nodeType":"YulIdentifier","src":"3930:9:14"},"nativeSrc":"3930:21:14","nodeType":"YulFunctionCall","src":"3930:21:14"},"variableNames":[{"name":"result","nativeSrc":"3920:6:14","nodeType":"YulIdentifier","src":"3920:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2590,"isOffset":false,"isSlot":false,"src":"3872:3:14","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"3920:6:14","valueSize":1},{"declaration":2588,"isOffset":false,"isSlot":false,"src":"3902:4:14","valueSize":1}],"flags":["memory-safe"],"id":2595,"nodeType":"InlineAssembly","src":"3820:141:14"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"3638:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:14","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"slot","nameLocation":"3752:4:14","nodeType":"VariableDeclaration","scope":2597,"src":"3744:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"key","nameLocation":"3766:3:14","nodeType":"VariableDeclaration","scope":2597,"src":"3758:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:14"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"result","nameLocation":"3802:6:14","nodeType":"VariableDeclaration","scope":2597,"src":"3794:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:14"},"scope":2634,"src":"3721:246:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"4144:157:14","statements":[{"AST":{"nativeSrc":"4179:116:14","nodeType":"YulBlock","src":"4179:116:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:14","nodeType":"YulLiteral","src":"4200:4:14","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:14","nodeType":"YulIdentifier","src":"4206:3:14"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:14","nodeType":"YulIdentifier","src":"4193:6:14"},"nativeSrc":"4193:17:14","nodeType":"YulFunctionCall","src":"4193:17:14"},"nativeSrc":"4193:17:14","nodeType":"YulExpressionStatement","src":"4193:17:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:14","nodeType":"YulLiteral","src":"4230:4:14","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:14","nodeType":"YulIdentifier","src":"4236:4:14"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:14","nodeType":"YulIdentifier","src":"4223:6:14"},"nativeSrc":"4223:18:14","nodeType":"YulFunctionCall","src":"4223:18:14"},"nativeSrc":"4223:18:14","nodeType":"YulExpressionStatement","src":"4223:18:14"},{"nativeSrc":"4254:31:14","nodeType":"YulAssignment","src":"4254:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:14","nodeType":"YulLiteral","src":"4274:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:14","nodeType":"YulLiteral","src":"4280:4:14","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:14","nodeType":"YulIdentifier","src":"4264:9:14"},"nativeSrc":"4264:21:14","nodeType":"YulFunctionCall","src":"4264:21:14"},"variableNames":[{"name":"result","nativeSrc":"4254:6:14","nodeType":"YulIdentifier","src":"4254:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2602,"isOffset":false,"isSlot":false,"src":"4206:3:14","valueSize":1},{"declaration":2605,"isOffset":false,"isSlot":false,"src":"4254:6:14","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"4236:4:14","valueSize":1}],"flags":["memory-safe"],"id":2607,"nodeType":"InlineAssembly","src":"4154:141:14"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"3973:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:14","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"slot","nameLocation":"4087:4:14","nodeType":"VariableDeclaration","scope":2609,"src":"4079:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"key","nameLocation":"4100:3:14","nodeType":"VariableDeclaration","scope":2609,"src":"4093:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2601,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:14"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"4136:6:14","nodeType":"VariableDeclaration","scope":2609,"src":"4128:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:14"},"scope":2634,"src":"4056:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"4485:326:14","statements":[{"AST":{"nativeSrc":"4520:285:14","nodeType":"YulBlock","src":"4520:285:14","statements":[{"nativeSrc":"4534:24:14","nodeType":"YulVariableDeclaration","src":"4534:24:14","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:14","nodeType":"YulIdentifier","src":"4554:3:14"}],"functionName":{"name":"mload","nativeSrc":"4548:5:14","nodeType":"YulIdentifier","src":"4548:5:14"},"nativeSrc":"4548:10:14","nodeType":"YulFunctionCall","src":"4548:10:14"},"variables":[{"name":"length","nativeSrc":"4538:6:14","nodeType":"YulTypedName","src":"4538:6:14","type":""}]},{"nativeSrc":"4571:27:14","nodeType":"YulVariableDeclaration","src":"4571:27:14","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:14","nodeType":"YulIdentifier","src":"4588:3:14"},{"kind":"number","nativeSrc":"4593:4:14","nodeType":"YulLiteral","src":"4593:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:14","nodeType":"YulIdentifier","src":"4584:3:14"},"nativeSrc":"4584:14:14","nodeType":"YulFunctionCall","src":"4584:14:14"},"variables":[{"name":"begin","nativeSrc":"4575:5:14","nodeType":"YulTypedName","src":"4575:5:14","type":""}]},{"nativeSrc":"4611:29:14","nodeType":"YulVariableDeclaration","src":"4611:29:14","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:14","nodeType":"YulIdentifier","src":"4626:5:14"},{"name":"length","nativeSrc":"4633:6:14","nodeType":"YulIdentifier","src":"4633:6:14"}],"functionName":{"name":"add","nativeSrc":"4622:3:14","nodeType":"YulIdentifier","src":"4622:3:14"},"nativeSrc":"4622:18:14","nodeType":"YulFunctionCall","src":"4622:18:14"},"variables":[{"name":"end","nativeSrc":"4615:3:14","nodeType":"YulTypedName","src":"4615:3:14","type":""}]},{"nativeSrc":"4653:23:14","nodeType":"YulVariableDeclaration","src":"4653:23:14","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:14","nodeType":"YulIdentifier","src":"4672:3:14"}],"functionName":{"name":"mload","nativeSrc":"4666:5:14","nodeType":"YulIdentifier","src":"4666:5:14"},"nativeSrc":"4666:10:14","nodeType":"YulFunctionCall","src":"4666:10:14"},"variables":[{"name":"cache","nativeSrc":"4657:5:14","nodeType":"YulTypedName","src":"4657:5:14","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:14","nodeType":"YulIdentifier","src":"4696:3:14"},{"name":"slot","nativeSrc":"4701:4:14","nodeType":"YulIdentifier","src":"4701:4:14"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:14","nodeType":"YulIdentifier","src":"4689:6:14"},"nativeSrc":"4689:17:14","nodeType":"YulFunctionCall","src":"4689:17:14"},"nativeSrc":"4689:17:14","nodeType":"YulExpressionStatement","src":"4689:17:14"},{"nativeSrc":"4719:45:14","nodeType":"YulAssignment","src":"4719:45:14","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:14","nodeType":"YulIdentifier","src":"4739:5:14"},{"arguments":[{"name":"length","nativeSrc":"4750:6:14","nodeType":"YulIdentifier","src":"4750:6:14"},{"kind":"number","nativeSrc":"4758:4:14","nodeType":"YulLiteral","src":"4758:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:14","nodeType":"YulIdentifier","src":"4746:3:14"},"nativeSrc":"4746:17:14","nodeType":"YulFunctionCall","src":"4746:17:14"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:14","nodeType":"YulIdentifier","src":"4729:9:14"},"nativeSrc":"4729:35:14","nodeType":"YulFunctionCall","src":"4729:35:14"},"variableNames":[{"name":"result","nativeSrc":"4719:6:14","nodeType":"YulIdentifier","src":"4719:6:14"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:14","nodeType":"YulIdentifier","src":"4784:3:14"},{"name":"cache","nativeSrc":"4789:5:14","nodeType":"YulIdentifier","src":"4789:5:14"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:14","nodeType":"YulIdentifier","src":"4777:6:14"},"nativeSrc":"4777:18:14","nodeType":"YulFunctionCall","src":"4777:18:14"},"nativeSrc":"4777:18:14","nodeType":"YulExpressionStatement","src":"4777:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2614,"isOffset":false,"isSlot":false,"src":"4554:3:14","valueSize":1},{"declaration":2614,"isOffset":false,"isSlot":false,"src":"4588:3:14","valueSize":1},{"declaration":2617,"isOffset":false,"isSlot":false,"src":"4719:6:14","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"4701:4:14","valueSize":1}],"flags":["memory-safe"],"id":2619,"nodeType":"InlineAssembly","src":"4495:310:14"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"4307:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:14","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"slot","nameLocation":"4421:4:14","nodeType":"VariableDeclaration","scope":2621,"src":"4413:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"key","nameLocation":"4441:3:14","nodeType":"VariableDeclaration","scope":2621,"src":"4427:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:14"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"result","nameLocation":"4477:6:14","nodeType":"VariableDeclaration","scope":2621,"src":"4469:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:14"},"scope":2634,"src":"4390:421:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"4994:326:14","statements":[{"AST":{"nativeSrc":"5029:285:14","nodeType":"YulBlock","src":"5029:285:14","statements":[{"nativeSrc":"5043:24:14","nodeType":"YulVariableDeclaration","src":"5043:24:14","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:14","nodeType":"YulIdentifier","src":"5063:3:14"}],"functionName":{"name":"mload","nativeSrc":"5057:5:14","nodeType":"YulIdentifier","src":"5057:5:14"},"nativeSrc":"5057:10:14","nodeType":"YulFunctionCall","src":"5057:10:14"},"variables":[{"name":"length","nativeSrc":"5047:6:14","nodeType":"YulTypedName","src":"5047:6:14","type":""}]},{"nativeSrc":"5080:27:14","nodeType":"YulVariableDeclaration","src":"5080:27:14","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:14","nodeType":"YulIdentifier","src":"5097:3:14"},{"kind":"number","nativeSrc":"5102:4:14","nodeType":"YulLiteral","src":"5102:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:14","nodeType":"YulIdentifier","src":"5093:3:14"},"nativeSrc":"5093:14:14","nodeType":"YulFunctionCall","src":"5093:14:14"},"variables":[{"name":"begin","nativeSrc":"5084:5:14","nodeType":"YulTypedName","src":"5084:5:14","type":""}]},{"nativeSrc":"5120:29:14","nodeType":"YulVariableDeclaration","src":"5120:29:14","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:14","nodeType":"YulIdentifier","src":"5135:5:14"},{"name":"length","nativeSrc":"5142:6:14","nodeType":"YulIdentifier","src":"5142:6:14"}],"functionName":{"name":"add","nativeSrc":"5131:3:14","nodeType":"YulIdentifier","src":"5131:3:14"},"nativeSrc":"5131:18:14","nodeType":"YulFunctionCall","src":"5131:18:14"},"variables":[{"name":"end","nativeSrc":"5124:3:14","nodeType":"YulTypedName","src":"5124:3:14","type":""}]},{"nativeSrc":"5162:23:14","nodeType":"YulVariableDeclaration","src":"5162:23:14","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:14","nodeType":"YulIdentifier","src":"5181:3:14"}],"functionName":{"name":"mload","nativeSrc":"5175:5:14","nodeType":"YulIdentifier","src":"5175:5:14"},"nativeSrc":"5175:10:14","nodeType":"YulFunctionCall","src":"5175:10:14"},"variables":[{"name":"cache","nativeSrc":"5166:5:14","nodeType":"YulTypedName","src":"5166:5:14","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:14","nodeType":"YulIdentifier","src":"5205:3:14"},{"name":"slot","nativeSrc":"5210:4:14","nodeType":"YulIdentifier","src":"5210:4:14"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:14","nodeType":"YulIdentifier","src":"5198:6:14"},"nativeSrc":"5198:17:14","nodeType":"YulFunctionCall","src":"5198:17:14"},"nativeSrc":"5198:17:14","nodeType":"YulExpressionStatement","src":"5198:17:14"},{"nativeSrc":"5228:45:14","nodeType":"YulAssignment","src":"5228:45:14","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:14","nodeType":"YulIdentifier","src":"5248:5:14"},{"arguments":[{"name":"length","nativeSrc":"5259:6:14","nodeType":"YulIdentifier","src":"5259:6:14"},{"kind":"number","nativeSrc":"5267:4:14","nodeType":"YulLiteral","src":"5267:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:14","nodeType":"YulIdentifier","src":"5255:3:14"},"nativeSrc":"5255:17:14","nodeType":"YulFunctionCall","src":"5255:17:14"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:14","nodeType":"YulIdentifier","src":"5238:9:14"},"nativeSrc":"5238:35:14","nodeType":"YulFunctionCall","src":"5238:35:14"},"variableNames":[{"name":"result","nativeSrc":"5228:6:14","nodeType":"YulIdentifier","src":"5228:6:14"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:14","nodeType":"YulIdentifier","src":"5293:3:14"},{"name":"cache","nativeSrc":"5298:5:14","nodeType":"YulIdentifier","src":"5298:5:14"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:14","nodeType":"YulIdentifier","src":"5286:6:14"},"nativeSrc":"5286:18:14","nodeType":"YulFunctionCall","src":"5286:18:14"},"nativeSrc":"5286:18:14","nodeType":"YulExpressionStatement","src":"5286:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"5063:3:14","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"5097:3:14","valueSize":1},{"declaration":2629,"isOffset":false,"isSlot":false,"src":"5228:6:14","valueSize":1},{"declaration":2624,"isOffset":false,"isSlot":false,"src":"5210:4:14","valueSize":1}],"flags":["memory-safe"],"id":2631,"nodeType":"InlineAssembly","src":"5004:310:14"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"4817:78:14","text":" @dev Derive the location of a mapping element from the key."},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:14","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"slot","nameLocation":"4931:4:14","nodeType":"VariableDeclaration","scope":2633,"src":"4923:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"key","nameLocation":"4950:3:14","nodeType":"VariableDeclaration","scope":2633,"src":"4937:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:14"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"result","nameLocation":"4986:6:14","nodeType":"VariableDeclaration","scope":2633,"src":"4978:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:14"},"scope":2634,"src":"4900:420:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2635,"src":"1599:3723:14","usedErrors":[],"usedEvents":[]}],"src":"199:5124:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2758]},"id":2759,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2636,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2758,"linearizedBaseContracts":[2758],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2640,"members":[{"constant":false,"id":2639,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":2640,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2758,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2643,"members":[{"constant":false,"id":2642,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":2643,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2641,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":2758,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2646,"members":[{"constant":false,"id":2645,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":2646,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":2758,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2649,"members":[{"constant":false,"id":2648,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":2649,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":2758,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2652,"members":[{"constant":false,"id":2651,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":2652,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2650,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":2758,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2655,"members":[{"constant":false,"id":2654,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":2655,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2653,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":2758,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2658,"members":[{"constant":false,"id":2657,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":2658,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":2758,"src":"1756:45:15","visibility":"public"},{"body":{"id":2668,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nativeSrc":"2018:38:15","nodeType":"YulBlock","src":"2018:38:15","statements":[{"nativeSrc":"2032:14:15","nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nativeSrc":"2042:4:15","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:15","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2665,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":2661,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":2667,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":2669,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":2669,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2640_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2640,"src":"1960:11:15"},"referencedDeclaration":2640,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2640_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":2758,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2679,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nativeSrc":"2278:38:15","nodeType":"YulBlock","src":"2278:38:15","statements":[{"nativeSrc":"2292:14:15","nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nativeSrc":"2302:4:15","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:15","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2676,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":2672,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":2678,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":2680,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":2680,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2643_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2643,"src":"2220:11:15"},"referencedDeclaration":2643,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2643_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":2758,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2690,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nativeSrc":"2538:38:15","nodeType":"YulBlock","src":"2538:38:15","statements":[{"nativeSrc":"2552:14:15","nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nativeSrc":"2562:4:15","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:15","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2687,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":2683,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":2689,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2691,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":2691,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":2691,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2646_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2686,"nodeType":"UserDefinedTypeName","pathNode":{"id":2685,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2646,"src":"2480:11:15"},"referencedDeclaration":2646,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2646_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":2758,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nativeSrc":"2798:38:15","nodeType":"YulBlock","src":"2798:38:15","statements":[{"nativeSrc":"2812:14:15","nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nativeSrc":"2822:4:15","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:15","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2698,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":2694,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":2700,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":2692,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":2702,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":2702,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2697,"nodeType":"UserDefinedTypeName","pathNode":{"id":2696,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2649,"src":"2740:11:15"},"referencedDeclaration":2649,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2649_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":2758,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nativeSrc":"3055:38:15","nodeType":"YulBlock","src":"3055:38:15","statements":[{"nativeSrc":"3069:14:15","nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nativeSrc":"3079:4:15","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:15","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2709,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":2705,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":2711,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":2713,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":2713,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2652_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2708,"nodeType":"UserDefinedTypeName","pathNode":{"id":2707,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2652,"src":"2998:10:15"},"referencedDeclaration":2652,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2652_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":2758,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nativeSrc":"3312:38:15","nodeType":"YulBlock","src":"3312:38:15","statements":[{"nativeSrc":"3326:14:15","nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nativeSrc":"3336:4:15","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:15","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2720,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":2722,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":2724,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":2724,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2655_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2719,"nodeType":"UserDefinedTypeName","pathNode":{"id":2718,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2655,"src":"3255:10:15"},"referencedDeclaration":2655,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2655_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":2758,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nativeSrc":"3593:44:15","nodeType":"YulBlock","src":"3593:44:15","statements":[{"nativeSrc":"3607:20:15","nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nativeSrc":"3617:10:15","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:15","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2731,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":2727,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2733,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":2735,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":2735,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2655_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2730,"nodeType":"UserDefinedTypeName","pathNode":{"id":2729,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2655,"src":"3536:10:15"},"referencedDeclaration":2655,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2655_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":2758,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2745,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nativeSrc":"3853:38:15","nodeType":"YulBlock","src":"3853:38:15","statements":[{"nativeSrc":"3867:14:15","nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nativeSrc":"3877:4:15","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:15","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2742,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":2738,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":2744,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":2746,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":2746,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2658_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2658,"src":"3797:9:15"},"referencedDeclaration":2658,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2658_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":2758,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nativeSrc":"4129:44:15","nodeType":"YulBlock","src":"4129:44:15","statements":[{"nativeSrc":"4143:20:15","nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nativeSrc":"4153:10:15","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:15","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2753,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":2749,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2755,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":2757,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2748,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":2757,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2658_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2752,"nodeType":"UserDefinedTypeName","pathNode":{"id":2751,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2658,"src":"4073:9:15"},"referencedDeclaration":2658,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2658_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":2758,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2759,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2782],"IERC165":[2794]},"id":2783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2760,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2783,"sourceUnit":2795,"src":"140:38:16","symbolAliases":[{"foreign":{"id":2761,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"148:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2764,"name":"IERC165","nameLocations":["688:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"688:7:16"},"id":2765,"nodeType":"InheritanceSpecifier","src":"688:7:16"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"180:479:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2782,"linearizedBaseContracts":[2782,2794],"name":"ERC165","nameLocation":"678:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2793],"body":{"id":2780,"nodeType":"Block","src":"845:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"862:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2775,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"882:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2794_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2794_$","typeString":"type(contract IERC165)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2794","typeString":"type(contract IERC165)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2772,"id":2779,"nodeType":"Return","src":"855:47:16"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"702:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:16","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:16","nodeType":"VariableDeclaration","scope":2781,"src":"790:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2767,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:16"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"839:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:16"},"scope":2782,"src":"763:146:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2783,"src":"660:251:16","usedErrors":[],"usedEvents":[]}],"src":"114:798:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2794]},"id":2795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2784,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"141:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2794,"linearizedBaseContracts":[2794],"name":"IERC165","nameLocation":"432:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"446:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:17","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:17","nodeType":"VariableDeclaration","scope":2793,"src":"818:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2787,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:17"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"861:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2790,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:17"},"scope":2794,"src":"791:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2795,"src":"422:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:755:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4415],"Panic":[2504],"SafeCast":[6180]},"id":4416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2796,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2798,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4416,"sourceUnit":2505,"src":"129:35:18","symbolAliases":[{"foreign":{"id":2797,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4416,"sourceUnit":6181,"src":"165:40:18","symbolAliases":[{"foreign":{"id":2799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2801,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4415,"linearizedBaseContracts":[4415],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2806,"members":[{"id":2802,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":2803,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":2804,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":2805,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":2819,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nativeSrc":"766:71:18","nodeType":"YulBlock","src":"766:71:18","statements":[{"nativeSrc":"780:16:18","nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nativeSrc":"791:1:18","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nativeSrc":"794:1:18","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nativeSrc":"787:3:18","nodeType":"YulIdentifier","src":"787:3:18"},"nativeSrc":"787:9:18","nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nativeSrc":"780:3:18","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nativeSrc":"809:18:18","nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nativeSrc":"820:3:18","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nativeSrc":"825:1:18","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nativeSrc":"817:2:18","nodeType":"YulIdentifier","src":"817:2:18"},"nativeSrc":"817:10:18","nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nativeSrc":"809:4:18","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2809,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":2809,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":2811,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":2814,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":2818,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":2820,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":2820,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":2820,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":2820,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":4415,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nativeSrc":"1437:134:18","nodeType":"YulBlock","src":"1437:134:18","statements":[{"nativeSrc":"1451:30:18","nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:18","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nativeSrc":"1471:1:18","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:18","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:18","nodeType":"YulIdentifier","src":"1474:3:18"},"nativeSrc":"1474:6:18","nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:18","nodeType":"YulIdentifier","src":"1461:6:18"},"nativeSrc":"1461:20:18","nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nativeSrc":"1455:2:18","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nativeSrc":"1494:16:18","nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:18","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nativeSrc":"1508:1:18","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nativeSrc":"1501:3:18","nodeType":"YulIdentifier","src":"1501:3:18"},"nativeSrc":"1501:9:18","nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nativeSrc":"1494:3:18","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nativeSrc":"1523:38:18","nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:18","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nativeSrc":"1543:3:18","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nativeSrc":"1535:3:18","nodeType":"YulIdentifier","src":"1535:3:18"},"nativeSrc":"1535:12:18","nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:18","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nativeSrc":"1556:3:18","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nativeSrc":"1549:2:18","nodeType":"YulIdentifier","src":"1549:2:18"},"nativeSrc":"1549:11:18","nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nativeSrc":"1531:3:18","nodeType":"YulIdentifier","src":"1531:3:18"},"nativeSrc":"1531:30:18","nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nativeSrc":"1523:4:18","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2823,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":2823,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":2825,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":2825,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":2828,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":2830,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":2830,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":2830,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":2832,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":2834,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":2834,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":2834,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":2834,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":4415,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"1784:149:18","statements":[{"id":2867,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":2867,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2851,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2857,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2859,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2860,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2866,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":2869,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":2869,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":2869,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2841,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":2869,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":4415,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2903,"nodeType":"Block","src":"2143:149:18","statements":[{"id":2902,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[2882],"declarations":[{"constant":false,"id":2882,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":2902,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2897,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":2904,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":2904,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":2904,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2876,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":2904,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":4415,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2933,"nodeType":"Block","src":"2505:391:18","statements":[{"id":2932,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":2932,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nativeSrc":"2595:188:18","nodeType":"YulBlock","src":"2595:188:18","statements":[{"nativeSrc":"2727:42:18","nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:18","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nativeSrc":"2751:1:18","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nativeSrc":"2744:3:18","nodeType":"YulIdentifier","src":"2744:3:18"},"nativeSrc":"2744:9:18","nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nativeSrc":"2755:1:18","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nativeSrc":"2741:2:18","nodeType":"YulIdentifier","src":"2741:2:18"},"nativeSrc":"2741:16:18","nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nativeSrc":"2766:1:18","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:18","nodeType":"YulIdentifier","src":"2759:6:18"},"nativeSrc":"2759:9:18","nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nativeSrc":"2738:2:18","nodeType":"YulIdentifier","src":"2738:2:18"},"nativeSrc":"2738:31:18","nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nativeSrc":"2727:7:18","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2907,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":2907,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":2909,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":2917,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":2912,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":2922,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2927,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2925,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":2934,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":2934,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":2934,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":2934,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":4415,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"3111:231:18","statements":[{"id":2953,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nativeSrc":"3199:127:18","nodeType":"YulBlock","src":"3199:127:18","statements":[{"nativeSrc":"3293:19:18","nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:18","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nativeSrc":"3310:1:18","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nativeSrc":"3303:3:18","nodeType":"YulIdentifier","src":"3303:3:18"},"nativeSrc":"3303:9:18","nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nativeSrc":"3293:6:18","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2937,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":2939,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":2944,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":2952,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":2955,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":2955,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":2955,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2941,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":2955,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":4415,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"3567:231:18","statements":[{"id":2974,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nativeSrc":"3655:127:18","nodeType":"YulBlock","src":"3655:127:18","statements":[{"nativeSrc":"3749:19:18","nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:18","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nativeSrc":"3766:1:18","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nativeSrc":"3759:3:18","nodeType":"YulIdentifier","src":"3759:3:18"},"nativeSrc":"3759:9:18","nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nativeSrc":"3749:6:18","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2958,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":2960,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":2965,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":2973,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":2976,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":2976,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":2976,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":2976,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":4415,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[2987,2989],"declarations":[{"constant":false,"id":2987,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":3005,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2986,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":3005,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2994,"initialValue":{"arguments":[{"id":2991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2990,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":2996,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2998,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2995,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2985,"id":3004,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":3006,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":3006,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":4415,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,3017],"declarations":[null,{"constant":false,"id":3017,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":3025,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3022,"initialValue":{"arguments":[{"id":3019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":3023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3015,"id":3024,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":3026,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":3026,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":4415,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[3037,3039],"declarations":[{"constant":false,"id":3037,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":3055,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":3055,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"initialValue":{"arguments":[{"id":3041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":3046,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3035,"id":3054,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":3056,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":3056,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":4415,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3082,"nodeType":"Block","src":"5158:207:18","statements":[{"id":3081,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3070,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3075,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3073,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3067,"id":3080,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":3083,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3058,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":3083,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":3083,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":4415,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3092,"id":3100,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":3102,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":3102,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3102,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":4415,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3120,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3112,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3119,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":3121,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":3121,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":3121,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3121,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":4415,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3143,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3130,"id":3142,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3144,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":3144,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":3144,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":4415,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3165,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":3164,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":3160,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3157,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3163,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":3183,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3166,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3153,"id":3182,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":3185,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":3185,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":4415,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":3319,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[3198,3200],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":3319,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":3319,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3205,"initialValue":{"arguments":[{"id":3202,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3203,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":3213,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3196,"id":3212,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3216,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":3232,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3225,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3227,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3218,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3231,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":3319,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3236,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nativeSrc":"8415:283:18","nodeType":"YulBlock","src":"8415:283:18","statements":[{"nativeSrc":"8484:38:18","nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:18","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nativeSrc":"8507:1:18","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nativeSrc":"8510:11:18","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:18","nodeType":"YulIdentifier","src":"8497:6:18"},"nativeSrc":"8497:25:18","nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:18","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nativeSrc":"8604:37:18","nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:18","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:18","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nativeSrc":"8636:3:18","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nativeSrc":"8622:2:18","nodeType":"YulIdentifier","src":"8622:2:18"},"nativeSrc":"8622:18:18","nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nativeSrc":"8612:3:18","nodeType":"YulIdentifier","src":"8612:3:18"},"nativeSrc":"8612:29:18","nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nativeSrc":"8604:4:18","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nativeSrc":"8658:26:18","nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:18","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nativeSrc":"8674:9:18","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nativeSrc":"8665:3:18","nodeType":"YulIdentifier","src":"8665:3:18"},"nativeSrc":"8665:19:18","nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nativeSrc":"8658:3:18","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3192,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":3198,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":3198,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":3188,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":3190,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":3237,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[3239],"declarations":[{"constant":false,"id":3239,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":3319,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3246,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nativeSrc":"8987:359:18","nodeType":"YulBlock","src":"8987:359:18","statements":[{"nativeSrc":"9052:37:18","nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:18","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nativeSrc":"9084:4:18","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nativeSrc":"9067:3:18","nodeType":"YulIdentifier","src":"9067:3:18"},"nativeSrc":"9067:22:18","nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:18","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nativeSrc":"9153:21:18","nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:18","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nativeSrc":"9169:4:18","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nativeSrc":"9160:3:18","nodeType":"YulIdentifier","src":"9160:3:18"},"nativeSrc":"9160:14:18","nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nativeSrc":"9153:3:18","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nativeSrc":"9293:39:18","nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:18","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:18","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nativeSrc":"9309:3:18","nodeType":"YulIdentifier","src":"9309:3:18"},"nativeSrc":"9309:12:18","nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nativeSrc":"9323:4:18","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nativeSrc":"9305:3:18","nodeType":"YulIdentifier","src":"9305:3:18"},"nativeSrc":"9305:23:18","nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nativeSrc":"9330:1:18","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:18","nodeType":"YulIdentifier","src":"9301:3:18"},"nativeSrc":"9301:31:18","nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:18","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3192,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":3239,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":3247,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3250,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[3255],"declarations":[{"constant":false,"id":3255,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":3319,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3257,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3266,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3270,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3271,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3274,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3279,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3282,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3290,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3295,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3298,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3306,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3313,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":3317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3196,"id":3318,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":3321,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":3321,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":3321,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":3321,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":4415,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3357,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3337,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3338,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3321,3358],"referencedDeclaration":3321,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3344,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":3343,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3347,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3348,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3335,"id":3356,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":3358,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":3358,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":3358,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":3358,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":3330,"nodeType":"UserDefinedTypeName","pathNode":{"id":3329,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"11113:8:18"},"referencedDeclaration":2806,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3358,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":4415,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"11500:245:18","statements":[{"id":3406,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[3371,3373],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":3406,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":3406,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3378,"initialValue":{"arguments":[{"id":3375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3376,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3374,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3381,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":3391,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":3387,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3384,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3395,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3401,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3369,"id":3405,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":3408,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":3408,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":3408,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3364,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":3408,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":4415,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3424,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3425,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3426,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3423,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3408,3447],"referencedDeclaration":3408,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3431,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":3430,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3434,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3437,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3433,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3422,"id":3445,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":3447,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":3447,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":3447,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3414,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":3447,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":3417,"nodeType":"UserDefinedTypeName","pathNode":{"id":3416,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"11912:8:18"},"referencedDeclaration":2806,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":4415,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3462,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3456,"id":3461,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[3464],"declarations":[{"constant":false,"id":3464,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":3542,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3468,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3466,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[3470],"declarations":[{"constant":false,"id":3470,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":3542,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3472,"initialValue":{"id":3471,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[3474],"declarations":[{"constant":false,"id":3474,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":3542,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3473,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3476,"initialValue":{"hexValue":"30","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[3478],"declarations":[{"constant":false,"id":3478,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":3542,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3477,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3480,"initialValue":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":3517,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":3517,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3487,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3490,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3491,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3492,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3493,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3496,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3502,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3503,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3504,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3505,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3510,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3508,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3516,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3456,"id":3523,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":3532,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3538,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3525,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3456,"id":3541,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":3544,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":3544,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":4415,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"15159:82:18","statements":[{"id":3563,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":3556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3560,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3554,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4415_$","typeString":"type(library Math)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3601,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3553,"id":3562,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":3565,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":3565,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":4415,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[3578,3580],"declarations":[{"constant":false,"id":3578,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":3600,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3577,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":3600,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3586,"initialValue":{"arguments":[{"id":3582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3583,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3584,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3581,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3625,3707],"referencedDeclaration":3625,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":3587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":3596,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":3592,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3589,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3576,"id":3599,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":3601,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":3601,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":3601,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3601,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":4415,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3614,"id":3621,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nativeSrc":"17113:1413:18","nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nativeSrc":"17127:22:18","nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:18","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:18","nodeType":"YulIdentifier","src":"17138:5:18"},"nativeSrc":"17138:11:18","nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nativeSrc":"17131:3:18","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:18","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nativeSrc":"18062:4:18","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:18","nodeType":"YulIdentifier","src":"18050:6:18"},"nativeSrc":"18050:17:18","nodeType":"YulFunctionCall","src":"18050:17:18"},"nativeSrc":"18050:17:18","nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:18","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nativeSrc":"18096:4:18","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:18","nodeType":"YulIdentifier","src":"18087:3:18"},"nativeSrc":"18087:14:18","nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nativeSrc":"18103:4:18","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:18","nodeType":"YulIdentifier","src":"18080:6:18"},"nativeSrc":"18080:28:18","nodeType":"YulFunctionCall","src":"18080:28:18"},"nativeSrc":"18080:28:18","nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:18","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nativeSrc":"18137:4:18","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:18","nodeType":"YulIdentifier","src":"18128:3:18"},"nativeSrc":"18128:14:18","nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nativeSrc":"18144:4:18","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:18","nodeType":"YulIdentifier","src":"18121:6:18"},"nativeSrc":"18121:28:18","nodeType":"YulFunctionCall","src":"18121:28:18"},"nativeSrc":"18121:28:18","nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:18","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nativeSrc":"18178:4:18","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:18","nodeType":"YulIdentifier","src":"18169:3:18"},"nativeSrc":"18169:14:18","nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nativeSrc":"18185:1:18","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:18","nodeType":"YulIdentifier","src":"18162:6:18"},"nativeSrc":"18162:25:18","nodeType":"YulFunctionCall","src":"18162:25:18"},"nativeSrc":"18162:25:18","nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:18","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nativeSrc":"18216:4:18","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:18","nodeType":"YulIdentifier","src":"18207:3:18"},"nativeSrc":"18207:14:18","nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nativeSrc":"18223:1:18","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:18","nodeType":"YulIdentifier","src":"18200:6:18"},"nativeSrc":"18200:25:18","nodeType":"YulFunctionCall","src":"18200:25:18"},"nativeSrc":"18200:25:18","nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:18","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nativeSrc":"18254:4:18","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:18","nodeType":"YulIdentifier","src":"18245:3:18"},"nativeSrc":"18245:14:18","nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nativeSrc":"18261:1:18","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:18","nodeType":"YulIdentifier","src":"18238:6:18"},"nativeSrc":"18238:25:18","nodeType":"YulFunctionCall","src":"18238:25:18"},"nativeSrc":"18238:25:18","nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nativeSrc":"18425:57:18","nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:18","nodeType":"YulIdentifier","src":"18447:3:18"},"nativeSrc":"18447:5:18","nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nativeSrc":"18454:4:18","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:18","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nativeSrc":"18465:4:18","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:18","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:18","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:18","nodeType":"YulIdentifier","src":"18436:10:18"},"nativeSrc":"18436:46:18","nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nativeSrc":"18425:7:18","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nativeSrc":"18495:21:18","nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:18","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:18","nodeType":"YulIdentifier","src":"18505:5:18"},"nativeSrc":"18505:11:18","nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nativeSrc":"18495:6:18","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3604,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":3606,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":3613,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":3611,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":3623,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":3625,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":3625,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":3625,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":3625,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3610,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":3625,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":4415,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3660,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[3638,3640],"declarations":[{"constant":false,"id":3638,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":3660,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3637,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":3660,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3639,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3646,"initialValue":{"arguments":[{"id":3642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3643,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3644,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3641,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3625,3707],"referencedDeclaration":3707,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":3647,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":3656,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":3652,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3649,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2504_$","typeString":"type(library Panic)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3655,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":3658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3636,"id":3659,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3661,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":3661,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":3661,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3629,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":3661,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3661,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":4415,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":3676,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3675,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3685,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3679,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3674,"id":3684,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":3706,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"expression":{"id":3688,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3696,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3698,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3700,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3701,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3692,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3704,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nativeSrc":"19431:496:18","nodeType":"YulBlock","src":"19431:496:18","statements":[{"nativeSrc":"19445:32:18","nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:18","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nativeSrc":"19472:4:18","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:18","nodeType":"YulIdentifier","src":"19460:3:18"},"nativeSrc":"19460:17:18","nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:18","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nativeSrc":"19567:73:18","nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:18","nodeType":"YulIdentifier","src":"19589:3:18"},"nativeSrc":"19589:5:18","nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nativeSrc":"19596:4:18","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:18","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nativeSrc":"19617:6:18","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nativeSrc":"19611:5:18","nodeType":"YulIdentifier","src":"19611:5:18"},"nativeSrc":"19611:13:18","nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nativeSrc":"19626:7:18","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nativeSrc":"19635:4:18","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:18","nodeType":"YulIdentifier","src":"19578:10:18"},"nativeSrc":"19578:62:18","nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nativeSrc":"19567:7:18","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:18","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nativeSrc":"19804:4:18","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:18","nodeType":"YulIdentifier","src":"19789:6:18"},"nativeSrc":"19789:20:18","nodeType":"YulFunctionCall","src":"19789:20:18"},"nativeSrc":"19789:20:18","nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:18","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:18","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nativeSrc":"19911:4:18","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nativeSrc":"19898:3:18","nodeType":"YulIdentifier","src":"19898:3:18"},"nativeSrc":"19898:18:18","nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:18","nodeType":"YulIdentifier","src":"19885:6:18"},"nativeSrc":"19885:32:18","nodeType":"YulFunctionCall","src":"19885:32:18"},"nativeSrc":"19885:32:18","nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3687,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":3687,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":3671,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":3705,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":3662,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":3707,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3663,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":3707,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3665,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":3707,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3667,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":3707,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3670,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":3707,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":4415,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":3735,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3726,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3728,"indexExpression":{"id":3727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":3733,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3714,"id":3732,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3720,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"initializationExpression":{"assignments":[3716],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":3736,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":3723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3714,"id":3738,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":3740,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3709,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3712,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":4415,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3958,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":3957,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":3753,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":3751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3747,"id":3752,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[3756],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":3957,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3758,"initialValue":{"id":3757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":3957,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3762,"initialValue":{"hexValue":"31","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":3777,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3769,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3794,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":3793,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3785,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":3809,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3804,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3826,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":3825,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3842,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":3841,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3840,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3858,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":3857,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3870,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":3869,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3883,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3890,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3901,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3902,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3912,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3913,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3934,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3951,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3747,"id":3956,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3959,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":3959,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3959,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":4415,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3992,"nodeType":"Block","src":"25921:171:18","statements":[{"id":3991,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":3991,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3975,"initialValue":{"arguments":[{"id":3973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3972,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3959,3993],"referencedDeclaration":3959,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":3979,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3977,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3969,"id":3990,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":3993,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":3993,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":3964,"nodeType":"UserDefinedTypeName","pathNode":{"id":3963,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"25870:8:18"},"referencedDeclaration":2806,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":4415,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4083,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4011,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4012,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4016,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4025,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4026,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4030,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4041,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4058,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4055,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4072,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nativeSrc":"28490:119:18","nodeType":"YulBlock","src":"28490:119:18","statements":[{"nativeSrc":"28504:95:18","nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:18","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:18","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nativeSrc":"28527:1:18","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nativeSrc":"28520:3:18","nodeType":"YulIdentifier","src":"28520:3:18"},"nativeSrc":"28520:9:18","nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nativeSrc":"28531:66:18","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:18","nodeType":"YulIdentifier","src":"28515:4:18"},"nativeSrc":"28515:83:18","nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nativeSrc":"28509:2:18","nodeType":"YulIdentifier","src":"28509:2:18"},"nativeSrc":"28509:90:18","nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nativeSrc":"28504:1:18","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3999,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":3999,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":3999,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":3996,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":4082,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4084,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":4084,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":4084,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":4415,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4117,"nodeType":"Block","src":"28848:175:18","statements":[{"id":4116,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[4096],"declarations":[{"constant":false,"id":4096,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":4116,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4100,"initialValue":{"arguments":[{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4097,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4084,4118],"referencedDeclaration":4084,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4105,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":4104,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4094,"id":4115,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":4085,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":4118,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":4118,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":4089,"nodeType":"UserDefinedTypeName","pathNode":{"id":4088,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"28797:8:18"},"referencedDeclaration":2806,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":4415,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4246,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":4246,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4129,"initialValue":{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":4243,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":4145,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4144,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":4162,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4157,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4161,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":4179,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4178,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4197,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":4196,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4191,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4214,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":4213,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4208,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4212,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4231,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":4230,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4225,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":4241,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4240,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":4244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4125,"id":4245,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":4247,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4123,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":4415,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4280,"nodeType":"Block","src":"30305:177:18","statements":[{"id":4279,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[4259],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":4279,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4263,"initialValue":{"arguments":[{"id":4261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4247,4281],"referencedDeclaration":4247,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4268,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":4267,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4265,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4257,"id":4278,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4281,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":4281,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":4281,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":4252,"nodeType":"UserDefinedTypeName","pathNode":{"id":4251,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"30254:8:18"},"referencedDeclaration":2806,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":4415,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4290,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4304,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4301,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4313,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4317,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4318,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4315,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4327,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4332,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4341,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4346,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4288,"id":4356,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":4282,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":4358,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":4358,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":4415,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"31712:184:18","statements":[{"id":4393,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[4370],"declarations":[{"constant":false,"id":4370,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":4393,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4374,"initialValue":{"arguments":[{"id":4372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4371,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4358,4395],"referencedDeclaration":4358,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4379,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":4378,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2806_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6180_$","typeString":"type(library SafeCast)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4368,"id":4392,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":4395,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4364,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":4395,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":4363,"nodeType":"UserDefinedTypeName","pathNode":{"id":4362,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"31661:8:18"},"referencedDeclaration":2806,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":4415,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4406,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4404,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4403,"id":4412,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":4414,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"},"typeName":{"id":4398,"nodeType":"UserDefinedTypeName","pathNode":{"id":4397,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"32046:8:18"},"referencedDeclaration":2806,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2806","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4401,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":4415,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4416,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6180]},"id":6181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6180,"linearizedBaseContracts":[6180],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4425,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":4425,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4420,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":4425,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4430,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":4430,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4427,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":4431,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4437,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":4437,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4432,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4435,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":4437,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4434,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4442,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":4442,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":4469,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4452,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4463,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":4462,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4461,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":4466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4464,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4449,"id":4468,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":4470,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4470,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4447,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":6180,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4480,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4491,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":4490,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4489,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":4494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4492,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4477,"id":4496,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":4498,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4475,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":6180,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4508,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":4518,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4517,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4520,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4505,"id":4524,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":4526,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4526,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4503,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":6180,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4553,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4536,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4547,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":4546,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4545,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4548,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4533,"id":4552,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":4527,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":4554,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4554,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4531,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":6180,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4564,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4575,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":4574,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4569,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4573,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":4578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4576,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4561,"id":4580,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":4555,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":4582,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4582,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4559,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":6180,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4592,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4603,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":4602,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4597,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4601,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":4606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4604,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4589,"id":4608,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":4610,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4610,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4587,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":6180,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4620,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4631,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":4630,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4629,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4632,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4617,"id":4636,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":4611,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":4638,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4615,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":6180,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4665,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4648,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4659,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":4658,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4657,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4660,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4645,"id":4664,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":4666,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4666,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4643,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":6180,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4693,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4676,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4687,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":4686,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4681,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4685,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4669,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4688,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4673,"id":4692,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":4667,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":4694,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4694,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4671,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":6180,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4721,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4704,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":4714,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4713,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4716,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4701,"id":4720,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":4695,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":4722,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4722,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4699,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":6180,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4732,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4743,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":4742,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4737,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4741,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4744,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4729,"id":4748,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":4750,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4727,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":6180,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4760,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4771,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":4770,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4765,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4769,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":4774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4772,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4757,"id":4776,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":4778,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4755,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":6180,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4788,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4799,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":4798,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4793,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4797,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4800,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4785,"id":4804,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":4806,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4806,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4783,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":6180,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4816,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4815,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":4826,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4821,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4825,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4828,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4813,"id":4832,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":4834,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4811,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":6180,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4844,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4843,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":4854,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4853,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4856,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4841,"id":4860,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":4862,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4839,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":6180,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4872,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":4882,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4877,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4881,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4884,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4869,"id":4888,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":4890,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4867,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":6180,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4900,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":4910,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4905,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4909,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4912,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4897,"id":4916,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":4918,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4895,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":6180,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4945,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4928,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":4938,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4933,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4937,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":4942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4940,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4925,"id":4944,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":4919,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":4946,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4946,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4923,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":6180,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4973,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4956,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":4966,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4961,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4965,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4968,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4953,"id":4972,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":4974,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4974,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4951,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":6180,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5001,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4984,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4983,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4995,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":4994,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4989,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4993,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4996,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4981,"id":5000,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":4975,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":5002,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4979,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":6180,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5012,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":5022,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5017,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5021,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5024,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5009,"id":5028,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":5030,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5030,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5007,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":6180,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5057,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5040,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":5050,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5049,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5052,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5037,"id":5056,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5058,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":5058,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5058,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5035,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":6180,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5068,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5067,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5079,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":5078,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5073,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5077,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5080,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5065,"id":5084,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":5086,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5086,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5063,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":6180,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5113,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5096,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5095,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5107,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":5106,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5101,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5105,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5108,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5093,"id":5112,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5114,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":5114,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5114,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5091,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":6180,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5124,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5123,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5135,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":5134,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5129,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5133,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5136,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5121,"id":5140,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":5115,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":5142,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5119,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":6180,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5169,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5152,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5163,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":5162,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5157,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5161,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5164,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5149,"id":5168,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":5170,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5170,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5147,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":6180,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5197,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5180,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5191,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":5190,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5185,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5189,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":5194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5192,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5177,"id":5196,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5198,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":5198,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5198,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5175,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":6180,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5208,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5219,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":5218,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5217,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5220,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5205,"id":5224,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":5199,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":5226,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5203,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":6180,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5253,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5236,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5247,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":5246,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5241,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5245,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5248,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5233,"id":5252,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5254,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":5254,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5254,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5231,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":6180,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5281,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5264,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5275,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":5274,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5269,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5273,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5276,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5261,"id":5280,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":5255,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5282,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":5282,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5282,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5259,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":6180,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5309,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5292,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5291,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":5302,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5301,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5304,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5289,"id":5308,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":5310,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5310,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5287,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":6180,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5332,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5326,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":5325,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5321,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5324,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5317,"id":5331,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":5311,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":5333,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5312,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5333,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":6180,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5342,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5347,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5357,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":5356,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5351,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5355,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":5359,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5335,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":5359,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5338,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":6180,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5384,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5368,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5373,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5383,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":5382,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5377,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5381,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5385,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":5385,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5361,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":5385,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5364,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":6180,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5410,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5393,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5394,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5399,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5409,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":5408,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5403,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5407,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5411,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":5411,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5387,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":5411,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5390,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":6180,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5436,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5420,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5425,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5435,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":5434,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5429,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5433,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":5412,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5437,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":5437,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5413,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":5437,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5416,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":6180,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5462,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5445,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5446,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5451,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5461,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":5460,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5455,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5459,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":5438,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5463,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":5463,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5439,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":5463,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5442,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":6180,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5472,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5477,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5487,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":5486,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5481,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5485,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":5464,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":5489,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5465,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":5489,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5468,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":6180,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5514,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5498,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5503,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5513,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":5512,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5507,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5511,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5515,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":5515,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5491,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":5515,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5494,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":6180,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5540,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5524,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5529,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5539,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":5538,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5533,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5537,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":5516,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":5541,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5517,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":5541,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5520,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":6180,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5550,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5555,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5565,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":5564,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5559,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5563,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":5542,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":5567,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5543,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":5567,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5546,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":6180,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5592,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5576,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5581,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5591,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":5590,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5585,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5589,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5593,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":5593,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5569,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":5593,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5572,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":6180,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5618,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5602,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5607,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5617,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":5616,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5611,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5615,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":5594,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":5619,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5595,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":5619,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5598,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":6180,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5644,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5628,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5633,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5643,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":5642,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5637,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5641,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":5645,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5621,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":5645,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5624,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":6180,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5670,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5654,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5659,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5669,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":5668,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5663,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5667,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":5671,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5647,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":5671,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5650,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":6180,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5696,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5680,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5685,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5695,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":5694,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5689,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5693,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":5697,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5673,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":5697,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5676,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":6180,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5722,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5706,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5711,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5721,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":5720,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5715,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5719,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":5701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":5723,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5699,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":5704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":5723,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5702,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":6180,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5748,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5732,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5737,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":5746,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5741,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5745,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5749,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":5749,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5725,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":5749,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5728,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":6180,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5774,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5758,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5763,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5773,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":5772,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5767,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5771,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":5750,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5775,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":5775,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5751,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":5775,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5754,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":6180,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5800,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5784,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5789,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5799,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":5798,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5793,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5797,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5801,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":5801,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5777,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":5782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5781,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":5801,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5780,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":6180,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5826,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5810,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5815,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5825,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":5824,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5819,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5823,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":5827,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5803,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":5827,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5806,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":6180,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5852,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5836,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5841,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5851,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":5850,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5845,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5849,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":5828,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":5853,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5829,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":5853,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5832,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":6180,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5878,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5862,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5867,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":5876,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5871,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5875,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":5879,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5855,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":5879,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5858,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":6180,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5904,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5888,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5893,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5903,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":5902,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5897,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5901,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":5880,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5905,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":5905,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5881,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":5886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5885,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":5905,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5884,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":6180,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5914,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5919,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5911,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5929,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":5928,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5923,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5927,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":5906,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":5931,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5907,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":5931,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5910,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":6180,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5956,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5940,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5945,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5955,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":5954,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5949,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5953,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5957,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":5957,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5933,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":5957,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5936,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":6180,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5982,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5966,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5971,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5981,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":5980,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5975,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5979,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":5958,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5983,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":5983,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5959,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":5983,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5962,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":6180,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6008,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5992,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5997,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6007,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":6006,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6001,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6005,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":5984,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6009,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":6009,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5985,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":6009,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5988,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":6180,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6034,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6018,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6023,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6033,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":6032,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6027,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6031,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":6010,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":6035,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6011,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":6035,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6014,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":6180,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6060,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6044,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6049,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6059,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":6058,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6053,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6057,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":6036,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6061,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":6061,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6037,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6041,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":6061,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6040,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":6180,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6070,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6075,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6085,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":6084,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6079,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6083,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":6062,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":6065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6064,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":6087,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6063,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":6087,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6066,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":6180,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6112,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6096,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6101,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6111,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":6110,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6105,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6109,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6113,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":6113,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6089,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":6113,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6092,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":6180,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6138,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6122,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6127,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6137,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":6136,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6131,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6135,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":6114,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6139,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":6139,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6115,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":6139,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6118,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":6180,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6168,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6151,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6148,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":6161,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6157,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6160,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6163,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6146,"id":6167,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":6140,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6169,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":6143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6142,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":6169,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6169,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6144,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":6180,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nativeSrc":"34888:46:19","nodeType":"YulBlock","src":"34888:46:19","statements":[{"nativeSrc":"34902:22:19","nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:19","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:19","nodeType":"YulIdentifier","src":"34914:6:19"},"nativeSrc":"34914:9:19","nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:19","nodeType":"YulIdentifier","src":"34907:6:19"},"nativeSrc":"34907:17:19","nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nativeSrc":"34902:1:19","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6172,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":6175,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":6177,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":6170,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":6179,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6171,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":6179,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6174,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":6180,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6181,"src":"769:34173:19","usedErrors":[4425,4430,4437,4442],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"Arrays":[2390],"EnumerableSet":[6877]},"id":6878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6182,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"205:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../Arrays.sol","id":6184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6878,"sourceUnit":2391,"src":"231:37:20","symbolAliases":[{"foreign":{"id":6183,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"239:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":6185,"nodeType":"StructuredDocumentation","src":"270:1154:20","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n - Set can be cleared (all elements removed) in O(n).\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":6877,"linearizedBaseContracts":[6877],"name":"EnumerableSet","nameLocation":"1433:13:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":6193,"members":[{"constant":false,"id":6188,"mutability":"mutable","name":"_values","nameLocation":"1957:7:20","nodeType":"VariableDeclaration","scope":6193,"src":"1947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6187,"nodeType":"ArrayTypeName","src":"1947:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6192,"mutability":"mutable","name":"_positions","nameLocation":"2149:10:20","nodeType":"VariableDeclaration","scope":6193,"src":"2115:44:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6191,"keyName":"value","keyNameLocation":"2131:5:20","keyType":{"id":6189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2123:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2115:33:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1900:3:20","nodeType":"StructDefinition","scope":6877,"src":"1893:273:20","visibility":"public"},{"body":{"id":6234,"nodeType":"Block","src":"2405:337:20","statements":[{"condition":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2419:22:20","subExpression":{"arguments":[{"id":6205,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"2430:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"2435:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6204,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"2420:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6232,"nodeType":"Block","src":"2699:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2720:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6203,"id":6231,"nodeType":"Return","src":"2713:12:20"}]},"id":6233,"nodeType":"IfStatement","src":"2415:321:20","trueBody":{"id":6229,"nodeType":"Block","src":"2443:250:20","statements":[{"expression":{"arguments":[{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"2474:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":6209,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"2457:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2461:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"2457:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:4:20","memberName":"push","nodeType":"MemberAccess","src":"2457:16:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6216,"nodeType":"ExpressionStatement","src":"2457:23:20"},{"expression":{"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6217,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"2615:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2619:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"2615:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6221,"indexExpression":{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"2630:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2615:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6222,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"2639:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"2639:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:6:20","memberName":"length","nodeType":"MemberAccess","src":"2639:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2615:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6226,"nodeType":"ExpressionStatement","src":"2615:42:20"},{"expression":{"hexValue":"74727565","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2678:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6203,"id":6228,"nodeType":"Return","src":"2671:11:20"}]}}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"2172:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2345:4:20","nodeType":"FunctionDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"set","nameLocation":"2362:3:20","nodeType":"VariableDeclaration","scope":6235,"src":"2350:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6196,"nodeType":"UserDefinedTypeName","pathNode":{"id":6195,"name":"Set","nameLocations":["2350:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"2350:3:20"},"referencedDeclaration":6193,"src":"2350:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6199,"mutability":"mutable","name":"value","nameLocation":"2375:5:20","nodeType":"VariableDeclaration","scope":6235,"src":"2367:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2349:32:20"},"returnParameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6235,"src":"2399:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6201,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:6:20"},"scope":6877,"src":"2336:406:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6318,"nodeType":"Block","src":"2982:1296:20","statements":[{"assignments":[6247],"declarations":[{"constant":false,"id":6247,"mutability":"mutable","name":"position","nameLocation":"3094:8:20","nodeType":"VariableDeclaration","scope":6318,"src":"3086:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6252,"initialValue":{"baseExpression":{"expression":{"id":6248,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3105:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3109:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"3105:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6251,"indexExpression":{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"3120:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3105:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3086:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"3141:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3153:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3141:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6316,"nodeType":"Block","src":"4235:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4256:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6245,"id":6315,"nodeType":"Return","src":"4249:12:20"}]},"id":6317,"nodeType":"IfStatement","src":"3137:1135:20","trueBody":{"id":6313,"nodeType":"Block","src":"3156:1073:20","statements":[{"assignments":[6257],"declarations":[{"constant":false,"id":6257,"mutability":"mutable","name":"valueIndex","nameLocation":"3516:10:20","nodeType":"VariableDeclaration","scope":6313,"src":"3508:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6261,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6258,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"3529:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3529:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3508:33:20"},{"assignments":[6263],"declarations":[{"constant":false,"id":6263,"mutability":"mutable","name":"lastIndex","nameLocation":"3563:9:20","nodeType":"VariableDeclaration","scope":6313,"src":"3555:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6269,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6264,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3575:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3579:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"3575:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:20","memberName":"length","nodeType":"MemberAccess","src":"3575:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3575:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3555:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6270,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"3616:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6271,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"3630:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3616:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6297,"nodeType":"IfStatement","src":"3612:378:20","trueBody":{"id":6296,"nodeType":"Block","src":"3641:349:20","statements":[{"assignments":[6274],"declarations":[{"constant":false,"id":6274,"mutability":"mutable","name":"lastValue","nameLocation":"3667:9:20","nodeType":"VariableDeclaration","scope":6296,"src":"3659:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3659:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6279,"initialValue":{"baseExpression":{"expression":{"id":6275,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3679:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3683:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"3679:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6278,"indexExpression":{"id":6277,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"3691:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3659:42:20"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6280,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3800:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3804:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"3800:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6284,"indexExpression":{"id":6282,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"3812:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3800:23:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6285,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"3826:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3800:35:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6287,"nodeType":"ExpressionStatement","src":"3800:35:20"},{"expression":{"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6288,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3939:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3943:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"3939:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6292,"indexExpression":{"id":6290,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"3954:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3939:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6293,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"3967:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3939:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6295,"nodeType":"ExpressionStatement","src":"3939:36:20"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6298,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"4068:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4072:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"4068:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4080:3:20","memberName":"pop","nodeType":"MemberAccess","src":"4068:15:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"ExpressionStatement","src":"4068:17:20"},{"expression":{"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4164:28:20","subExpression":{"baseExpression":{"expression":{"id":6305,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"4171:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4175:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"4171:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6308,"indexExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"4186:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4171:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"4164:28:20"},{"expression":{"hexValue":"74727565","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4214:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6245,"id":6312,"nodeType":"Return","src":"4207:11:20"}]}}]},"documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"2748:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2919:7:20","nodeType":"FunctionDefinition","parameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"set","nameLocation":"2939:3:20","nodeType":"VariableDeclaration","scope":6319,"src":"2927:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6238,"nodeType":"UserDefinedTypeName","pathNode":{"id":6237,"name":"Set","nameLocations":["2927:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"2927:3:20"},"referencedDeclaration":6193,"src":"2927:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"value","nameLocation":"2952:5:20","nodeType":"VariableDeclaration","scope":6319,"src":"2944:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2944:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:32:20"},"returnParameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6319,"src":"2976:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6243,"name":"bool","nodeType":"ElementaryTypeName","src":"2976:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2975:6:20"},"scope":6877,"src":"2910:1368:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6361,"nodeType":"Block","src":"4633:196:20","statements":[{"assignments":[6327],"declarations":[{"constant":false,"id":6327,"mutability":"mutable","name":"len","nameLocation":"4651:3:20","nodeType":"VariableDeclaration","scope":6361,"src":"4643:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6331,"initialValue":{"arguments":[{"id":6329,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4665:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}],"id":6328,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"4657:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:26:20"},{"body":{"id":6351,"nodeType":"Block","src":"4713:62:20","statements":[{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4727:37:20","subExpression":{"baseExpression":{"expression":{"id":6342,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4734:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"4734:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6348,"indexExpression":{"baseExpression":{"expression":{"id":6344,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4749:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4753:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"4749:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6347,"indexExpression":{"id":6346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"4761:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4749:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4734:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6350,"nodeType":"ExpressionStatement","src":"4727:37:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"4699:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6337,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"4703:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6352,"initializationExpression":{"assignments":[6333],"declarations":[{"constant":false,"id":6333,"mutability":"mutable","name":"i","nameLocation":"4692:1:20","nodeType":"VariableDeclaration","scope":6352,"src":"4684:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6335,"initialValue":{"hexValue":"30","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4708:3:20","subExpression":{"id":6339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"4710:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6341,"nodeType":"ExpressionStatement","src":"4708:3:20"},"nodeType":"ForStatement","src":"4679:96:20"},{"expression":{"arguments":[{"expression":{"id":6356,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4807:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4811:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"4807:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},{"hexValue":"30","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4820:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":6353,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Arrays_$2390_$","typeString":"type(library Arrays)"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:15:20","memberName":"unsafeSetLength","nodeType":"MemberAccess","referencedDeclaration":2378,"src":"4784:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32[] storage pointer,uint256)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6360,"nodeType":"ExpressionStatement","src":"4784:38:20"}]},"documentation":{"id":6320,"nodeType":"StructuredDocumentation","src":"4284:303:20","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":6362,"implemented":true,"kind":"function","modifiers":[],"name":"_clear","nameLocation":"4601:6:20","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"set","nameLocation":"4620:3:20","nodeType":"VariableDeclaration","scope":6362,"src":"4608:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6322,"nodeType":"UserDefinedTypeName","pathNode":{"id":6321,"name":"Set","nameLocations":["4608:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"4608:3:20"},"referencedDeclaration":6193,"src":"4608:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4607:17:20"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[],"src":"4633:0:20"},"scope":6877,"src":"4592:237:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6380,"nodeType":"Block","src":"4989:50:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":6373,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"5006:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5010:10:20","memberName":"_positions","nodeType":"MemberAccess","referencedDeclaration":6192,"src":"5006:14:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6376,"indexExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"5021:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5031:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5006:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6372,"id":6379,"nodeType":"Return","src":"4999:33:20"}]},"documentation":{"id":6363,"nodeType":"StructuredDocumentation","src":"4835:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":6381,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4919:9:20","nodeType":"FunctionDefinition","parameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"set","nameLocation":"4941:3:20","nodeType":"VariableDeclaration","scope":6381,"src":"4929:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6365,"nodeType":"UserDefinedTypeName","pathNode":{"id":6364,"name":"Set","nameLocations":["4929:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"4929:3:20"},"referencedDeclaration":6193,"src":"4929:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6368,"mutability":"mutable","name":"value","nameLocation":"4954:5:20","nodeType":"VariableDeclaration","scope":6381,"src":"4946:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4946:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:32:20"},"returnParameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6381,"src":"4983:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6370,"name":"bool","nodeType":"ElementaryTypeName","src":"4983:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4982:6:20"},"scope":6877,"src":"4910:129:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6394,"nodeType":"Block","src":"5185:42:20","statements":[{"expression":{"expression":{"expression":{"id":6390,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"5202:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5206:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"5202:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:20","memberName":"length","nodeType":"MemberAccess","src":"5202:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6389,"id":6393,"nodeType":"Return","src":"5195:25:20"}]},"documentation":{"id":6382,"nodeType":"StructuredDocumentation","src":"5045:70:20","text":" @dev Returns the number of values on the set. O(1)."},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"5129:7:20","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"set","nameLocation":"5149:3:20","nodeType":"VariableDeclaration","scope":6395,"src":"5137:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6384,"nodeType":"UserDefinedTypeName","pathNode":{"id":6383,"name":"Set","nameLocations":["5137:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"5137:3:20"},"referencedDeclaration":6193,"src":"5137:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5136:17:20"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"5176:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5176:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:9:20"},"scope":6877,"src":"5120:107:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6411,"nodeType":"Block","src":"5645:42:20","statements":[{"expression":{"baseExpression":{"expression":{"id":6406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"5662:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"5662:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6409,"indexExpression":{"id":6408,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"5674:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6405,"id":6410,"nodeType":"Return","src":"5655:25:20"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"5233:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"5578:3:20","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"set","nameLocation":"5594:3:20","nodeType":"VariableDeclaration","scope":6412,"src":"5582:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6398,"nodeType":"UserDefinedTypeName","pathNode":{"id":6397,"name":"Set","nameLocations":["5582:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"5582:3:20"},"referencedDeclaration":6193,"src":"5582:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6401,"mutability":"mutable","name":"index","nameLocation":"5607:5:20","nodeType":"VariableDeclaration","scope":6412,"src":"5599:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6400,"name":"uint256","nodeType":"ElementaryTypeName","src":"5599:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:32:20"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6412,"src":"5636:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5636:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5635:9:20"},"scope":6877,"src":"5569:118:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6425,"nodeType":"Block","src":"6301:35:20","statements":[{"expression":{"expression":{"id":6422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"6318:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6322:7:20","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6188,"src":"6318:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6421,"id":6424,"nodeType":"Return","src":"6311:18:20"}]},"documentation":{"id":6413,"nodeType":"StructuredDocumentation","src":"5693:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6426,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"6236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"set","nameLocation":"6256:3:20","nodeType":"VariableDeclaration","scope":6426,"src":"6244:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6415,"nodeType":"UserDefinedTypeName","pathNode":{"id":6414,"name":"Set","nameLocations":["6244:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"6244:3:20"},"referencedDeclaration":6193,"src":"6244:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"6243:17:20"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6426,"src":"6283:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6283:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6419,"nodeType":"ArrayTypeName","src":"6283:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6282:18:20"},"scope":6877,"src":"6227:109:20","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":6430,"members":[{"constant":false,"id":6429,"mutability":"mutable","name":"_inner","nameLocation":"6393:6:20","nodeType":"VariableDeclaration","scope":6430,"src":"6389:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6428,"nodeType":"UserDefinedTypeName","pathNode":{"id":6427,"name":"Set","nameLocations":["6389:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"6389:3:20"},"referencedDeclaration":6193,"src":"6389:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"6368:10:20","nodeType":"StructDefinition","scope":6877,"src":"6361:45:20","visibility":"public"},{"body":{"id":6447,"nodeType":"Block","src":"6652:47:20","statements":[{"expression":{"arguments":[{"expression":{"id":6442,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"6674:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6678:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"6674:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"6686:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6441,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"6669:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6669:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6440,"id":6446,"nodeType":"Return","src":"6662:30:20"}]},"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"6412:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6448,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6585:3:20","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"set","nameLocation":"6608:3:20","nodeType":"VariableDeclaration","scope":6448,"src":"6589:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6433,"nodeType":"UserDefinedTypeName","pathNode":{"id":6432,"name":"Bytes32Set","nameLocations":["6589:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"6589:10:20"},"referencedDeclaration":6430,"src":"6589:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"6621:5:20","nodeType":"VariableDeclaration","scope":6448,"src":"6613:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6588:39:20"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6448,"src":"6646:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6438,"name":"bool","nodeType":"ElementaryTypeName","src":"6646:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6645:6:20"},"scope":6877,"src":"6576:123:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6465,"nodeType":"Block","src":"6946:50:20","statements":[{"expression":{"arguments":[{"expression":{"id":6460,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"6971:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"6971:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"6983:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6459,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"6963:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6963:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6458,"id":6464,"nodeType":"Return","src":"6956:33:20"}]},"documentation":{"id":6449,"nodeType":"StructuredDocumentation","src":"6705:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6466,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6876:6:20","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"set","nameLocation":"6902:3:20","nodeType":"VariableDeclaration","scope":6466,"src":"6883:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6451,"nodeType":"UserDefinedTypeName","pathNode":{"id":6450,"name":"Bytes32Set","nameLocations":["6883:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"6883:10:20"},"referencedDeclaration":6430,"src":"6883:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6454,"mutability":"mutable","name":"value","nameLocation":"6915:5:20","nodeType":"VariableDeclaration","scope":6466,"src":"6907:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6907:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6882:39:20"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6466,"src":"6940:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6456,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:20"},"scope":6877,"src":"6867:129:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"7358:35:20","statements":[{"expression":{"arguments":[{"expression":{"id":6474,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"7375:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7379:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"7375:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6473,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"7368:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7368:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6477,"nodeType":"ExpressionStatement","src":"7368:18:20"}]},"documentation":{"id":6467,"nodeType":"StructuredDocumentation","src":"7002:303:20","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"7319:5:20","nodeType":"FunctionDefinition","parameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"set","nameLocation":"7344:3:20","nodeType":"VariableDeclaration","scope":6479,"src":"7325:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6469,"nodeType":"UserDefinedTypeName","pathNode":{"id":6468,"name":"Bytes32Set","nameLocations":["7325:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"7325:10:20"},"referencedDeclaration":6430,"src":"7325:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7324:24:20"},"returnParameters":{"id":6472,"nodeType":"ParameterList","parameters":[],"src":"7358:0:20"},"scope":6877,"src":"7310:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6496,"nodeType":"Block","src":"7560:52:20","statements":[{"expression":{"arguments":[{"expression":{"id":6491,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"7587:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7591:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"7587:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"7599:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6490,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"7577:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7577:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6489,"id":6495,"nodeType":"Return","src":"7570:35:20"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"7399:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":6497,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7483:8:20","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6483,"mutability":"mutable","name":"set","nameLocation":"7511:3:20","nodeType":"VariableDeclaration","scope":6497,"src":"7492:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6482,"nodeType":"UserDefinedTypeName","pathNode":{"id":6481,"name":"Bytes32Set","nameLocations":["7492:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"7492:10:20"},"referencedDeclaration":6430,"src":"7492:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6485,"mutability":"mutable","name":"value","nameLocation":"7524:5:20","nodeType":"VariableDeclaration","scope":6497,"src":"7516:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7516:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7491:39:20"},"returnParameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6497,"src":"7554:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6487,"name":"bool","nodeType":"ElementaryTypeName","src":"7554:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7553:6:20"},"scope":6877,"src":"7474:138:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6511,"nodeType":"Block","src":"7765:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":6507,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"7790:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"7790:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6506,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"7782:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7782:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6505,"id":6510,"nodeType":"Return","src":"7775:26:20"}]},"documentation":{"id":6498,"nodeType":"StructuredDocumentation","src":"7618:70:20","text":" @dev Returns the number of values in the set. O(1)."},"id":6512,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7702:6:20","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"set","nameLocation":"7728:3:20","nodeType":"VariableDeclaration","scope":6512,"src":"7709:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6500,"nodeType":"UserDefinedTypeName","pathNode":{"id":6499,"name":"Bytes32Set","nameLocations":["7709:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"7709:10:20"},"referencedDeclaration":6430,"src":"7709:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7708:24:20"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6512,"src":"7756:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:9:20"},"scope":6877,"src":"7693:115:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"8233:46:20","statements":[{"expression":{"arguments":[{"expression":{"id":6524,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"8254:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8258:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"8254:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6526,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"8266:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6523,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"8250:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6522,"id":6528,"nodeType":"Return","src":"8243:29:20"}]},"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"7814:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8159:2:20","nodeType":"FunctionDefinition","parameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"set","nameLocation":"8181:3:20","nodeType":"VariableDeclaration","scope":6530,"src":"8162:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6515,"nodeType":"UserDefinedTypeName","pathNode":{"id":6514,"name":"Bytes32Set","nameLocations":["8162:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"8162:10:20"},"referencedDeclaration":6430,"src":"8162:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6518,"mutability":"mutable","name":"index","nameLocation":"8194:5:20","nodeType":"VariableDeclaration","scope":6530,"src":"8186:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6517,"name":"uint256","nodeType":"ElementaryTypeName","src":"8186:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8161:39:20"},"returnParameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6530,"src":"8224:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8224:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8223:9:20"},"scope":6877,"src":"8150:129:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6559,"nodeType":"Block","src":"8900:192:20","statements":[{"assignments":[6544],"declarations":[{"constant":false,"id":6544,"mutability":"mutable","name":"store","nameLocation":"8927:5:20","nodeType":"VariableDeclaration","scope":6559,"src":"8910:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8910:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6543,"nodeType":"ArrayTypeName","src":"8910:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6549,"initialValue":{"arguments":[{"expression":{"id":6546,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"8943:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":6547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8947:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6429,"src":"8943:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6545,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"8935:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8935:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8910:44:20"},{"assignments":[6554],"declarations":[{"constant":false,"id":6554,"mutability":"mutable","name":"result","nameLocation":"8981:6:20","nodeType":"VariableDeclaration","scope":6559,"src":"8964:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8964:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6553,"nodeType":"ArrayTypeName","src":"8964:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6555,"nodeType":"VariableDeclarationStatement","src":"8964:23:20"},{"AST":{"nativeSrc":"9023:39:20","nodeType":"YulBlock","src":"9023:39:20","statements":[{"nativeSrc":"9037:15:20","nodeType":"YulAssignment","src":"9037:15:20","value":{"name":"store","nativeSrc":"9047:5:20","nodeType":"YulIdentifier","src":"9047:5:20"},"variableNames":[{"name":"result","nativeSrc":"9037:6:20","nodeType":"YulIdentifier","src":"9037:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6554,"isOffset":false,"isSlot":false,"src":"9037:6:20","valueSize":1},{"declaration":6544,"isOffset":false,"isSlot":false,"src":"9047:5:20","valueSize":1}],"flags":["memory-safe"],"id":6556,"nodeType":"InlineAssembly","src":"8998:64:20"},{"expression":{"id":6557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"9079:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":6539,"id":6558,"nodeType":"Return","src":"9072:13:20"}]},"documentation":{"id":6531,"nodeType":"StructuredDocumentation","src":"8285:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6560,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"8828:6:20","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"set","nameLocation":"8854:3:20","nodeType":"VariableDeclaration","scope":6560,"src":"8835:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":6533,"nodeType":"UserDefinedTypeName","pathNode":{"id":6532,"name":"Bytes32Set","nameLocations":["8835:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6430,"src":"8835:10:20"},"referencedDeclaration":6430,"src":"8835:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6430_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8834:24:20"},"returnParameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6560,"src":"8882:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8882:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6537,"nodeType":"ArrayTypeName","src":"8882:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8881:18:20"},"scope":6877,"src":"8819:273:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":6564,"members":[{"constant":false,"id":6563,"mutability":"mutable","name":"_inner","nameLocation":"9149:6:20","nodeType":"VariableDeclaration","scope":6564,"src":"9145:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6562,"nodeType":"UserDefinedTypeName","pathNode":{"id":6561,"name":"Set","nameLocations":["9145:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"9145:3:20"},"referencedDeclaration":6193,"src":"9145:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"9124:10:20","nodeType":"StructDefinition","scope":6877,"src":"9117:45:20","visibility":"public"},{"body":{"id":6590,"nodeType":"Block","src":"9408:74:20","statements":[{"expression":{"arguments":[{"expression":{"id":6576,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"9430:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9434:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"9430:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"9466:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9458:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6582,"name":"uint160","nodeType":"ElementaryTypeName","src":"9458:7:20","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9450:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:20","typeDescriptions":{}}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9442:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9442:7:20","typeDescriptions":{}}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6575,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"9425:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9425:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6574,"id":6589,"nodeType":"Return","src":"9418:57:20"}]},"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"9168:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"9341:3:20","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"set","nameLocation":"9364:3:20","nodeType":"VariableDeclaration","scope":6591,"src":"9345:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6567,"nodeType":"UserDefinedTypeName","pathNode":{"id":6566,"name":"AddressSet","nameLocations":["9345:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"9345:10:20"},"referencedDeclaration":6564,"src":"9345:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6570,"mutability":"mutable","name":"value","nameLocation":"9377:5:20","nodeType":"VariableDeclaration","scope":6591,"src":"9369:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6569,"name":"address","nodeType":"ElementaryTypeName","src":"9369:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9344:39:20"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6591,"src":"9402:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6572,"name":"bool","nodeType":"ElementaryTypeName","src":"9402:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9401:6:20"},"scope":6877,"src":"9332:150:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"9729:77:20","statements":[{"expression":{"arguments":[{"expression":{"id":6603,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"9754:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"9754:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"9790:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6609,"name":"uint160","nodeType":"ElementaryTypeName","src":"9782:7:20","typeDescriptions":{}}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9782:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9774:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6607,"name":"uint256","nodeType":"ElementaryTypeName","src":"9774:7:20","typeDescriptions":{}}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9766:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9766:7:20","typeDescriptions":{}}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9766:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6602,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"9746:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6601,"id":6616,"nodeType":"Return","src":"9739:60:20"}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"9488:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"9659:6:20","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"set","nameLocation":"9685:3:20","nodeType":"VariableDeclaration","scope":6618,"src":"9666:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6594,"nodeType":"UserDefinedTypeName","pathNode":{"id":6593,"name":"AddressSet","nameLocations":["9666:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"9666:10:20"},"referencedDeclaration":6564,"src":"9666:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6597,"mutability":"mutable","name":"value","nameLocation":"9698:5:20","nodeType":"VariableDeclaration","scope":6618,"src":"9690:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6596,"name":"address","nodeType":"ElementaryTypeName","src":"9690:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9665:39:20"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6618,"src":"9723:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6599,"name":"bool","nodeType":"ElementaryTypeName","src":"9723:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9722:6:20"},"scope":6877,"src":"9650:156:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6630,"nodeType":"Block","src":"10168:35:20","statements":[{"expression":{"arguments":[{"expression":{"id":6626,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"10185:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10189:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"10185:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6625,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"10178:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10178:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6629,"nodeType":"ExpressionStatement","src":"10178:18:20"}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"9812:303:20","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":6631,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"10129:5:20","nodeType":"FunctionDefinition","parameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"set","nameLocation":"10154:3:20","nodeType":"VariableDeclaration","scope":6631,"src":"10135:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6621,"nodeType":"UserDefinedTypeName","pathNode":{"id":6620,"name":"AddressSet","nameLocations":["10135:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"10135:10:20"},"referencedDeclaration":6564,"src":"10135:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10134:24:20"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[],"src":"10168:0:20"},"scope":6877,"src":"10120:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6657,"nodeType":"Block","src":"10370:79:20","statements":[{"expression":{"arguments":[{"expression":{"id":6643,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"10397:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"10397:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"10433:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6649,"name":"uint160","nodeType":"ElementaryTypeName","src":"10425:7:20","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10417:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"10417:7:20","typeDescriptions":{}}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10417:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10409:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10409:7:20","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10409:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6642,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"10387:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10387:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6641,"id":6656,"nodeType":"Return","src":"10380:62:20"}]},"documentation":{"id":6632,"nodeType":"StructuredDocumentation","src":"10209:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":6658,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10293:8:20","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"set","nameLocation":"10321:3:20","nodeType":"VariableDeclaration","scope":6658,"src":"10302:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6634,"nodeType":"UserDefinedTypeName","pathNode":{"id":6633,"name":"AddressSet","nameLocations":["10302:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"10302:10:20"},"referencedDeclaration":6564,"src":"10302:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6637,"mutability":"mutable","name":"value","nameLocation":"10334:5:20","nodeType":"VariableDeclaration","scope":6658,"src":"10326:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6636,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10301:39:20"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6658,"src":"10364:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6639,"name":"bool","nodeType":"ElementaryTypeName","src":"10364:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10363:6:20"},"scope":6877,"src":"10284:165:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6672,"nodeType":"Block","src":"10602:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":6668,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"10627:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10631:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"10627:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6667,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"10619:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6666,"id":6671,"nodeType":"Return","src":"10612:26:20"}]},"documentation":{"id":6659,"nodeType":"StructuredDocumentation","src":"10455:70:20","text":" @dev Returns the number of values in the set. O(1)."},"id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10539:6:20","nodeType":"FunctionDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"set","nameLocation":"10565:3:20","nodeType":"VariableDeclaration","scope":6673,"src":"10546:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6661,"nodeType":"UserDefinedTypeName","pathNode":{"id":6660,"name":"AddressSet","nameLocations":["10546:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"10546:10:20"},"referencedDeclaration":6564,"src":"10546:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10545:24:20"},"returnParameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6673,"src":"10593:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:9:20"},"scope":6877,"src":"10530:115:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6699,"nodeType":"Block","src":"11070:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":6691,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"11115:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11119:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"11115:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6693,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"11127:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6690,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"11111:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11111:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11103:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6688,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:20","typeDescriptions":{}}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11103:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6686,"name":"uint160","nodeType":"ElementaryTypeName","src":"11095:7:20","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11087:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6684,"name":"address","nodeType":"ElementaryTypeName","src":"11087:7:20","typeDescriptions":{}}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6683,"id":6698,"nodeType":"Return","src":"11080:56:20"}]},"documentation":{"id":6674,"nodeType":"StructuredDocumentation","src":"10651:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6700,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"10996:2:20","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"set","nameLocation":"11018:3:20","nodeType":"VariableDeclaration","scope":6700,"src":"10999:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6676,"nodeType":"UserDefinedTypeName","pathNode":{"id":6675,"name":"AddressSet","nameLocations":["10999:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"10999:10:20"},"referencedDeclaration":6564,"src":"10999:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6679,"mutability":"mutable","name":"index","nameLocation":"11031:5:20","nodeType":"VariableDeclaration","scope":6700,"src":"11023:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"11023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10998:39:20"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6700,"src":"11061:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6681,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11060:9:20"},"scope":6877,"src":"10987:156:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6729,"nodeType":"Block","src":"11764:192:20","statements":[{"assignments":[6714],"declarations":[{"constant":false,"id":6714,"mutability":"mutable","name":"store","nameLocation":"11791:5:20","nodeType":"VariableDeclaration","scope":6729,"src":"11774:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11774:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6713,"nodeType":"ArrayTypeName","src":"11774:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6719,"initialValue":{"arguments":[{"expression":{"id":6716,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"11807:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":6717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6563,"src":"11807:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6715,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"11799:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11774:44:20"},{"assignments":[6724],"declarations":[{"constant":false,"id":6724,"mutability":"mutable","name":"result","nameLocation":"11845:6:20","nodeType":"VariableDeclaration","scope":6729,"src":"11828:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6722,"name":"address","nodeType":"ElementaryTypeName","src":"11828:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6723,"nodeType":"ArrayTypeName","src":"11828:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6725,"nodeType":"VariableDeclarationStatement","src":"11828:23:20"},{"AST":{"nativeSrc":"11887:39:20","nodeType":"YulBlock","src":"11887:39:20","statements":[{"nativeSrc":"11901:15:20","nodeType":"YulAssignment","src":"11901:15:20","value":{"name":"store","nativeSrc":"11911:5:20","nodeType":"YulIdentifier","src":"11911:5:20"},"variableNames":[{"name":"result","nativeSrc":"11901:6:20","nodeType":"YulIdentifier","src":"11901:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6724,"isOffset":false,"isSlot":false,"src":"11901:6:20","valueSize":1},{"declaration":6714,"isOffset":false,"isSlot":false,"src":"11911:5:20","valueSize":1}],"flags":["memory-safe"],"id":6726,"nodeType":"InlineAssembly","src":"11862:64:20"},{"expression":{"id":6727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"11943:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":6709,"id":6728,"nodeType":"Return","src":"11936:13:20"}]},"documentation":{"id":6701,"nodeType":"StructuredDocumentation","src":"11149:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6730,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11692:6:20","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"set","nameLocation":"11718:3:20","nodeType":"VariableDeclaration","scope":6730,"src":"11699:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6703,"nodeType":"UserDefinedTypeName","pathNode":{"id":6702,"name":"AddressSet","nameLocations":["11699:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":6564,"src":"11699:10:20"},"referencedDeclaration":6564,"src":"11699:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6564_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"11698:24:20"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6730,"src":"11746:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6706,"name":"address","nodeType":"ElementaryTypeName","src":"11746:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6707,"nodeType":"ArrayTypeName","src":"11746:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11745:18:20"},"scope":6877,"src":"11683:273:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":6734,"members":[{"constant":false,"id":6733,"mutability":"mutable","name":"_inner","nameLocation":"12007:6:20","nodeType":"VariableDeclaration","scope":6734,"src":"12003:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6732,"nodeType":"UserDefinedTypeName","pathNode":{"id":6731,"name":"Set","nameLocations":["12003:3:20"],"nodeType":"IdentifierPath","referencedDeclaration":6193,"src":"12003:3:20"},"referencedDeclaration":6193,"src":"12003:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"11985:7:20","nodeType":"StructDefinition","scope":6877,"src":"11978:42:20","visibility":"public"},{"body":{"id":6754,"nodeType":"Block","src":"12263:56:20","statements":[{"expression":{"arguments":[{"expression":{"id":6746,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"12285:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12289:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"12285:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"12305:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12297:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12297:7:20","typeDescriptions":{}}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12297:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6745,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"12280:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6744,"id":6753,"nodeType":"Return","src":"12273:39:20"}]},"documentation":{"id":6735,"nodeType":"StructuredDocumentation","src":"12026:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6755,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"12199:3:20","nodeType":"FunctionDefinition","parameters":{"id":6741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"set","nameLocation":"12219:3:20","nodeType":"VariableDeclaration","scope":6755,"src":"12203:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6737,"nodeType":"UserDefinedTypeName","pathNode":{"id":6736,"name":"UintSet","nameLocations":["12203:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"12203:7:20"},"referencedDeclaration":6734,"src":"12203:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6740,"mutability":"mutable","name":"value","nameLocation":"12232:5:20","nodeType":"VariableDeclaration","scope":6755,"src":"12224:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"12224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:36:20"},"returnParameters":{"id":6744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6755,"src":"12257:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6742,"name":"bool","nodeType":"ElementaryTypeName","src":"12257:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12256:6:20"},"scope":6877,"src":"12190:129:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"12563:59:20","statements":[{"expression":{"arguments":[{"expression":{"id":6767,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"12588:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12592:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"12588:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"12608:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12600:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12600:7:20","typeDescriptions":{}}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12600:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6766,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12580:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12580:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6765,"id":6774,"nodeType":"Return","src":"12573:42:20"}]},"documentation":{"id":6756,"nodeType":"StructuredDocumentation","src":"12325:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12496:6:20","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"set","nameLocation":"12519:3:20","nodeType":"VariableDeclaration","scope":6776,"src":"12503:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6758,"nodeType":"UserDefinedTypeName","pathNode":{"id":6757,"name":"UintSet","nameLocations":["12503:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"12503:7:20"},"referencedDeclaration":6734,"src":"12503:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6761,"mutability":"mutable","name":"value","nameLocation":"12532:5:20","nodeType":"VariableDeclaration","scope":6776,"src":"12524:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"12524:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12502:36:20"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6776,"src":"12557:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6763,"name":"bool","nodeType":"ElementaryTypeName","src":"12557:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12556:6:20"},"scope":6877,"src":"12487:135:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6788,"nodeType":"Block","src":"12981:35:20","statements":[{"expression":{"arguments":[{"expression":{"id":6784,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"12998:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13002:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"12998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6783,"name":"_clear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"12991:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6193_storage_ptr_$returns$__$","typeString":"function (struct EnumerableSet.Set storage pointer)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12991:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6787,"nodeType":"ExpressionStatement","src":"12991:18:20"}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"12628:303:20","text":" @dev Removes all the values from a set. O(n).\n WARNING: Developers should keep in mind that this function has an unbounded cost and using it may render the\n function uncallable if the set grows to the point where clearing it consumes too much gas to fit in a block."},"id":6789,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"12945:5:20","nodeType":"FunctionDefinition","parameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"set","nameLocation":"12967:3:20","nodeType":"VariableDeclaration","scope":6789,"src":"12951:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6779,"nodeType":"UserDefinedTypeName","pathNode":{"id":6778,"name":"UintSet","nameLocations":["12951:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"12951:7:20"},"referencedDeclaration":6734,"src":"12951:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12950:21:20"},"returnParameters":{"id":6782,"nodeType":"ParameterList","parameters":[],"src":"12981:0:20"},"scope":6877,"src":"12936:80:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"13180:61:20","statements":[{"expression":{"arguments":[{"expression":{"id":6801,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"13207:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13211:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"13207:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":6805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"13227:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13219:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13219:7:20","typeDescriptions":{}}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6800,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"13197:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6799,"id":6808,"nodeType":"Return","src":"13190:44:20"}]},"documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"13022:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"13106:8:20","nodeType":"FunctionDefinition","parameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"set","nameLocation":"13131:3:20","nodeType":"VariableDeclaration","scope":6810,"src":"13115:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6792,"nodeType":"UserDefinedTypeName","pathNode":{"id":6791,"name":"UintSet","nameLocations":["13115:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"13115:7:20"},"referencedDeclaration":6734,"src":"13115:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6795,"mutability":"mutable","name":"value","nameLocation":"13144:5:20","nodeType":"VariableDeclaration","scope":6810,"src":"13136:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6794,"name":"uint256","nodeType":"ElementaryTypeName","src":"13136:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13114:36:20"},"returnParameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6810,"src":"13174:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6797,"name":"bool","nodeType":"ElementaryTypeName","src":"13174:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13173:6:20"},"scope":6877,"src":"13097:144:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"13391:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":6820,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"13416:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13420:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"13416:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6819,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"13408:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13408:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6818,"id":6823,"nodeType":"Return","src":"13401:26:20"}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"13247:70:20","text":" @dev Returns the number of values in the set. O(1)."},"id":6825,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"13331:6:20","nodeType":"FunctionDefinition","parameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"set","nameLocation":"13354:3:20","nodeType":"VariableDeclaration","scope":6825,"src":"13338:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6813,"nodeType":"UserDefinedTypeName","pathNode":{"id":6812,"name":"UintSet","nameLocations":["13338:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"13338:7:20"},"referencedDeclaration":6734,"src":"13338:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"13337:21:20"},"returnParameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6825,"src":"13382:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13381:9:20"},"scope":6877,"src":"13322:112:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6845,"nodeType":"Block","src":"13856:55:20","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6839,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"13885:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13889:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"13885:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":6841,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"13897:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"13881:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13881:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13873:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"13873:7:20","typeDescriptions":{}}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13873:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6835,"id":6844,"nodeType":"Return","src":"13866:38:20"}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"13440:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13785:2:20","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"set","nameLocation":"13804:3:20","nodeType":"VariableDeclaration","scope":6846,"src":"13788:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6828,"nodeType":"UserDefinedTypeName","pathNode":{"id":6827,"name":"UintSet","nameLocations":["13788:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"13788:7:20"},"referencedDeclaration":6734,"src":"13788:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":6831,"mutability":"mutable","name":"index","nameLocation":"13817:5:20","nodeType":"VariableDeclaration","scope":6846,"src":"13809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13787:36:20"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6846,"src":"13847:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6833,"name":"uint256","nodeType":"ElementaryTypeName","src":"13847:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13846:9:20"},"scope":6877,"src":"13776:135:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"14529:192:20","statements":[{"assignments":[6860],"declarations":[{"constant":false,"id":6860,"mutability":"mutable","name":"store","nameLocation":"14556:5:20","nodeType":"VariableDeclaration","scope":6875,"src":"14539:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14539:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6859,"nodeType":"ArrayTypeName","src":"14539:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6865,"initialValue":{"arguments":[{"expression":{"id":6862,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"14572:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":6863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14576:6:20","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"14572:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6193_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":6861,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"14564:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6193_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14539:44:20"},{"assignments":[6870],"declarations":[{"constant":false,"id":6870,"mutability":"mutable","name":"result","nameLocation":"14610:6:20","nodeType":"VariableDeclaration","scope":6875,"src":"14593:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6869,"nodeType":"ArrayTypeName","src":"14593:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6871,"nodeType":"VariableDeclarationStatement","src":"14593:23:20"},{"AST":{"nativeSrc":"14652:39:20","nodeType":"YulBlock","src":"14652:39:20","statements":[{"nativeSrc":"14666:15:20","nodeType":"YulAssignment","src":"14666:15:20","value":{"name":"store","nativeSrc":"14676:5:20","nodeType":"YulIdentifier","src":"14676:5:20"},"variableNames":[{"name":"result","nativeSrc":"14666:6:20","nodeType":"YulIdentifier","src":"14666:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6870,"isOffset":false,"isSlot":false,"src":"14666:6:20","valueSize":1},{"declaration":6860,"isOffset":false,"isSlot":false,"src":"14676:5:20","valueSize":1}],"flags":["memory-safe"],"id":6872,"nodeType":"InlineAssembly","src":"14627:64:20"},{"expression":{"id":6873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6870,"src":"14708:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6855,"id":6874,"nodeType":"Return","src":"14701:13:20"}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"13917:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"14460:6:20","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"set","nameLocation":"14483:3:20","nodeType":"VariableDeclaration","scope":6876,"src":"14467:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":6849,"nodeType":"UserDefinedTypeName","pathNode":{"id":6848,"name":"UintSet","nameLocations":["14467:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":6734,"src":"14467:7:20"},"referencedDeclaration":6734,"src":"14467:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6734_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"14466:21:20"},"returnParameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6876,"src":"14511:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6852,"name":"uint256","nodeType":"ElementaryTypeName","src":"14511:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6853,"nodeType":"ArrayTypeName","src":"14511:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14510:18:20"},"scope":6877,"src":"14451:270:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6878,"src":"1425:13298:20","usedErrors":[],"usedEvents":[]}],"src":"205:14519:20"},"id":20},"contracts/CXPTToken.sol":{"ast":{"absolutePath":"contracts/CXPTToken.sol","exportedSymbols":{"AccessControl":[295],"CXPTToken":[6929],"Context":[2452],"ERC165":[2782],"ERC20":[1362],"IAccessControl":[378],"IERC20":[1440],"IERC20Errors":[752],"IERC20Metadata":[1512]},"id":6930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6879,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6880,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6930,"sourceUnit":1363,"src":"58:55:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6930,"sourceUnit":296,"src":"114:58:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6883,"name":"ERC20","nameLocations":["327:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"327:5:21"},"id":6884,"nodeType":"InheritanceSpecifier","src":"327:5:21"},{"baseName":{"id":6885,"name":"AccessControl","nameLocations":["334:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"334:13:21"},"id":6886,"nodeType":"InheritanceSpecifier","src":"334:13:21"}],"canonicalName":"CXPTToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":6882,"nodeType":"StructuredDocumentation","src":"174:130:21","text":" Governance / rebate token – minted 1 : 1 when users withdraw\n “asCxpt = true”.  Vault is the sole minter."},"fullyImplemented":true,"id":6929,"linearizedBaseContracts":[6929,295,2782,2794,378,1362,752,1512,1440,2452],"name":"CXPTToken","nameLocation":"314:9:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":6891,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"378:11:21","nodeType":"VariableDeclaration","scope":6929,"src":"354:62:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"354:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"402:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6888,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"392:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"392:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":6911,"nodeType":"Block","src":"481:99:21","statements":[{"expression":{"arguments":[{"id":6901,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"502:18:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6902,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"522:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"526:6:21","memberName":"sender","nodeType":"MemberAccess","src":"522:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6900,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"491:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6905,"nodeType":"ExpressionStatement","src":"491:42:21"},{"expression":{"arguments":[{"id":6907,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"554:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6908,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"567:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6906,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"543:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"543:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6910,"nodeType":"ExpressionStatement","src":"543:30:21"}]},"id":6912,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43584d7075746520546f6b656e","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"456:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_43c6f1c594ab608807e32bd6736e2a0c79263ad7ae9e0c3aaf64448171adf29b","typeString":"literal_string \"CXMpute Token\""},"value":"CXMpute Token"},{"hexValue":"43585054","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"473:6:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_179e05e1776c402bcc0cf84b9ee70badca3ad507885254bbcfe670e2d1aaefe5","typeString":"literal_string \"CXPT\""},"value":"CXPT"}],"id":6898,"kind":"baseConstructorSpecifier","modifierName":{"id":6895,"name":"ERC20","nameLocations":["450:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"450:5:21"},"nodeType":"ModifierInvocation","src":"450:30:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"vault","nameLocation":"443:5:21","nodeType":"VariableDeclaration","scope":6912,"src":"435:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6892,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:15:21"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[],"src":"481:0:21"},"scope":6929,"src":"423:157:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6927,"nodeType":"Block","src":"659:34:21","statements":[{"expression":{"arguments":[{"id":6923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"675:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"679:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6922,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"669:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"669:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"ExpressionStatement","src":"669:17:21"}]},"functionSelector":"40c10f19","id":6928,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6919,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"646:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6920,"kind":"modifierInvocation","modifierName":{"id":6918,"name":"onlyRole","nameLocations":["637:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"637:8:21"},"nodeType":"ModifierInvocation","src":"637:21:21"}],"name":"mint","nameLocation":"595:4:21","nodeType":"FunctionDefinition","parameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6914,"mutability":"mutable","name":"to","nameLocation":"608:2:21","nodeType":"VariableDeclaration","scope":6928,"src":"600:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6913,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6916,"mutability":"mutable","name":"amount","nameLocation":"620:6:21","nodeType":"VariableDeclaration","scope":6928,"src":"612:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"599:28:21"},"returnParameters":{"id":6921,"nodeType":"ParameterList","parameters":[],"src":"659:0:21"},"scope":6929,"src":"586:107:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6930,"src":"305:390:21","usedErrors":[305,308,722,727,732,741,746,751],"usedEvents":[317,326,335,1374,1383]}],"src":"32:663:21"},"id":21},"contracts/SynthERC20.sol":{"ast":{"absolutePath":"contracts/SynthERC20.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"Context":[2452],"ERC20":[1362],"ERC20Burnable":[1486],"EnumerableSet":[6877],"IAccessControlEnumerable":[710],"IERC20":[1440],"IERC20Errors":[752],"IERC20Metadata":[1512],"SynthERC20":[7057]},"id":7058,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6931,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7058,"sourceUnit":1363,"src":"58:55:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":6933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7058,"sourceUnit":1487,"src":"114:74:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":6934,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7058,"sourceUnit":685,"src":"219:79:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6935,"name":"ERC20","nameLocations":["323:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"323:5:22"},"id":6936,"nodeType":"InheritanceSpecifier","src":"323:5:22"},{"baseName":{"id":6937,"name":"ERC20Burnable","nameLocations":["330:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"330:13:22"},"id":6938,"nodeType":"InheritanceSpecifier","src":"330:13:22"},{"baseName":{"id":6939,"name":"AccessControlEnumerable","nameLocations":["345:23:22"],"nodeType":"IdentifierPath","referencedDeclaration":684,"src":"345:23:22"},"id":6940,"nodeType":"InheritanceSpecifier","src":"345:23:22"}],"canonicalName":"SynthERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7057,"linearizedBaseContracts":[7057,684,295,2782,2794,710,378,1486,1362,752,1512,1440,2452],"name":"SynthERC20","nameLocation":"309:10:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":6945,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"399:11:22","nodeType":"VariableDeclaration","scope":7057,"src":"375:62:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"375:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"423:13:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6942,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"413:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"413:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"282c51f3","id":6950,"mutability":"constant","name":"BURNER_ROLE","nameLocation":"467:11:22","nodeType":"VariableDeclaration","scope":7057,"src":"443:62:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"443:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4255524e45525f524f4c45","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"491:13:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""},"value":"BURNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""}],"id":6947,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"481:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"481:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":6952,"mutability":"mutable","name":"_decimals","nameLocation":"559:9:22","nodeType":"VariableDeclaration","scope":7057,"src":"545:23:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6951,"name":"uint8","nodeType":"ElementaryTypeName","src":"545:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":7008,"nodeType":"Block","src":"855:432:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6970,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"873:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"897:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"889:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6971,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:22","typeDescriptions":{}}},"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"889:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"873:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e746845524332303a20496e697469616c2061646d696e2063616e6e6f74206265207a65726f2061646472657373","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"901:50:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_31b9a123421668ab96a3606bf31de15aa3f9201adf8d135afa05f280ae599e7b","typeString":"literal_string \"SynthERC20: Initial admin cannot be zero address\""},"value":"SynthERC20: Initial admin cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31b9a123421668ab96a3606bf31de15aa3f9201adf8d135afa05f280ae599e7b","typeString":"literal_string \"SynthERC20: Initial admin cannot be zero address\""}],"id":6969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"865:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"865:87:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"ExpressionStatement","src":"865:87:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6980,"name":"minterAndBurner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"970:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"997:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"989:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6981,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:22","typeDescriptions":{}}},"id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"970:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e746845524332303a204d696e7465722f4275726e65722063616e6e6f74206265207a65726f2061646472657373","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1001:50:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f7894880915fee4c23e5de34cdb65b061b927752ccc1b307eb1bc8142eec655","typeString":"literal_string \"SynthERC20: Minter/Burner cannot be zero address\""},"value":"SynthERC20: Minter/Burner cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f7894880915fee4c23e5de34cdb65b061b927752ccc1b307eb1bc8142eec655","typeString":"literal_string \"SynthERC20: Minter/Burner cannot be zero address\""}],"id":6979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"962:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"962:90:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6988,"nodeType":"ExpressionStatement","src":"962:90:22"},{"expression":{"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6989,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"1071:9:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6990,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"1083:9:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1071:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6992,"nodeType":"ExpressionStatement","src":"1071:21:22"},{"expression":{"arguments":[{"id":6994,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1114:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6995,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"1134:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6993,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"1103:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1103:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6997,"nodeType":"ExpressionStatement","src":"1103:44:22"},{"expression":{"arguments":[{"id":6999,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"1168:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7000,"name":"minterAndBurner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"1181:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6998,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"1157:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7002,"nodeType":"ExpressionStatement","src":"1157:40:22"},{"expression":{"arguments":[{"id":7004,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"1218:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7005,"name":"minterAndBurner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"1231:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7003,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"1207:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1207:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7007,"nodeType":"ExpressionStatement","src":"1207:40:22"}]},"id":7009,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6965,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6966,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"847:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6967,"kind":"baseConstructorSpecifier","modifierName":{"id":6964,"name":"ERC20","nameLocations":["835:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"835:5:22"},"nodeType":"ModifierInvocation","src":"835:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6954,"mutability":"mutable","name":"name","nameLocation":"610:4:22","nodeType":"VariableDeclaration","scope":7009,"src":"596:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6953,"name":"string","nodeType":"ElementaryTypeName","src":"596:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6956,"mutability":"mutable","name":"symbol","nameLocation":"638:6:22","nodeType":"VariableDeclaration","scope":7009,"src":"624:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6955,"name":"string","nodeType":"ElementaryTypeName","src":"624:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6958,"mutability":"mutable","name":"decimals_","nameLocation":"660:9:22","nodeType":"VariableDeclaration","scope":7009,"src":"654:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6957,"name":"uint8","nodeType":"ElementaryTypeName","src":"654:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"initialAdmin","nameLocation":"687:12:22","nodeType":"VariableDeclaration","scope":7009,"src":"679:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6959,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6962,"mutability":"mutable","name":"minterAndBurner","nameLocation":"782:15:22","nodeType":"VariableDeclaration","scope":7009,"src":"774:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6961,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"586:248:22"},"returnParameters":{"id":6968,"nodeType":"ParameterList","parameters":[],"src":"855:0:22"},"scope":7057,"src":"575:712:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[926],"body":{"id":7018,"nodeType":"Block","src":"1454:33:22","statements":[{"expression":{"id":7016,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"1471:9:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7015,"id":7017,"nodeType":"Return","src":"1464:16:22"}]},"documentation":{"id":7010,"nodeType":"StructuredDocumentation","src":"1293:91:22","text":" @dev Returns the number of decimals used to get its user representation."},"functionSelector":"313ce567","id":7019,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1398:8:22","nodeType":"FunctionDefinition","overrides":{"id":7012,"nodeType":"OverrideSpecifier","overrides":[],"src":"1429:8:22"},"parameters":{"id":7011,"nodeType":"ParameterList","parameters":[],"src":"1406:2:22"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7019,"src":"1447:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7013,"name":"uint8","nodeType":"ElementaryTypeName","src":"1447:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1446:7:22"},"scope":7057,"src":"1389:98:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7035,"nodeType":"Block","src":"1736:34:22","statements":[{"expression":{"arguments":[{"id":7031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"1752:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"1756:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7030,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"1746:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1746:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7034,"nodeType":"ExpressionStatement","src":"1746:17:22"}]},"documentation":{"id":7020,"nodeType":"StructuredDocumentation","src":"1493:157:22","text":" @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."},"functionSelector":"40c10f19","id":7036,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7027,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"1723:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7028,"kind":"modifierInvocation","modifierName":{"id":7026,"name":"onlyRole","nameLocations":["1714:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1714:8:22"},"nodeType":"ModifierInvocation","src":"1714:21:22"}],"name":"mint","nameLocation":"1664:4:22","nodeType":"FunctionDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"to","nameLocation":"1677:2:22","nodeType":"VariableDeclaration","scope":7036,"src":"1669:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7021,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7024,"mutability":"mutable","name":"amount","nameLocation":"1689:6:22","nodeType":"VariableDeclaration","scope":7036,"src":"1681:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1668:28:22"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[],"src":"1736:0:22"},"scope":7057,"src":"1655:115:22","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[1485],"body":{"id":7055,"nodeType":"Block","src":"2134:228:22","statements":[{"expression":{"arguments":[{"id":7051,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"2339:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7052,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"2348:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7048,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2324:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SynthERC20_$7057_$","typeString":"type(contract super SynthERC20)"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2330:8:22","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"2324:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"ExpressionStatement","src":"2324:31:22"}]},"documentation":{"id":7037,"nodeType":"StructuredDocumentation","src":"1776:256:22","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n See {ERC20-_burn}.\n Requirements:\n - the caller must have the `BURNER_ROLE`.\n - `account` must have approved `amount` to the caller."},"functionSelector":"79cc6790","id":7056,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7045,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"2121:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7046,"kind":"modifierInvocation","modifierName":{"id":7044,"name":"onlyRole","nameLocations":["2112:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2112:8:22"},"nodeType":"ModifierInvocation","src":"2112:21:22"}],"name":"burnFrom","nameLocation":"2046:8:22","nodeType":"FunctionDefinition","overrides":{"id":7043,"nodeType":"OverrideSpecifier","overrides":[],"src":"2103:8:22"},"parameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"account","nameLocation":"2063:7:22","nodeType":"VariableDeclaration","scope":7056,"src":"2055:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7038,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7041,"mutability":"mutable","name":"amount","nameLocation":"2080:6:22","nodeType":"VariableDeclaration","scope":7056,"src":"2072:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2072:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2054:33:22"},"returnParameters":{"id":7047,"nodeType":"ParameterList","parameters":[],"src":"2134:0:22"},"scope":7057,"src":"2037:325:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":7058,"src":"300:2660:22","usedErrors":[305,308,722,727,732,741,746,751],"usedEvents":[317,326,335,1374,1383]}],"src":"32:2928:22"},"id":22},"contracts/SynthFactory.sol":{"ast":{"absolutePath":"contracts/SynthFactory.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"CXPTToken":[6929],"Context":[2452],"ERC165":[2782],"ERC20":[1362],"ERC20Burnable":[1486],"EnumerableSet":[6877],"IAccessControl":[378],"IAccessControlEnumerable":[710],"IERC20":[1440],"IERC20Errors":[752],"IERC20Metadata":[1512],"ISynthERC20":[7301],"Ownable":[526],"SynthERC20":[7057],"SynthFactory":[7278],"Vault":[8042]},"id":7279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7059,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7279,"sourceUnit":527,"src":"58:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SynthERC20.sol","file":"./SynthERC20.sol","id":7061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7279,"sourceUnit":7058,"src":"166:26:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Vault.sol","file":"./Vault.sol","id":7062,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7279,"sourceUnit":8043,"src":"193:21:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7063,"name":"Ownable","nameLocations":["272:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"272:7:23"},"id":7064,"nodeType":"InheritanceSpecifier","src":"272:7:23"}],"canonicalName":"SynthFactory","contractDependencies":[7057],"contractKind":"contract","fullyImplemented":true,"id":7278,"linearizedBaseContracts":[7278,526,2452],"name":"SynthFactory","nameLocation":"256:12:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fbfa77cf","id":7067,"mutability":"immutable","name":"vault","nameLocation":"309:5:23","nodeType":"VariableDeclaration","scope":7278,"src":"286:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"},"typeName":{"id":7066,"nodeType":"UserDefinedTypeName","pathNode":{"id":7065,"name":"Vault","nameLocations":["286:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":8042,"src":"286:5:23"},"referencedDeclaration":8042,"src":"286:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}},"visibility":"public"},{"constant":false,"functionSelector":"14cd6c6d","id":7071,"mutability":"mutable","name":"synthBySymbol","nameLocation":"465:13:23","nodeType":"VariableDeclaration","scope":7278,"src":"431:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":7070,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7068,"name":"string","nodeType":"ElementaryTypeName","src":"439:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"431:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7069,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"8d015d22","id":7074,"mutability":"mutable","name":"allSynths","nameLocation":"587:9:23","nodeType":"VariableDeclaration","scope":7278,"src":"570:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":7072,"name":"address","nodeType":"ElementaryTypeName","src":"570:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7073,"nodeType":"ArrayTypeName","src":"570:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"4048353daeac164bd3c491159fc34428025f0bd6dec64fb19ed1faf812a0d9bb","id":7088,"name":"SynthCreated","nameLocation":"609:12:23","nodeType":"EventDefinition","parameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"indexed":true,"mutability":"mutable","name":"synthContract","nameLocation":"647:13:23","nodeType":"VariableDeclaration","scope":7088,"src":"631:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7075,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7078,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"677:4:23","nodeType":"VariableDeclaration","scope":7088,"src":"670:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7077,"name":"string","nodeType":"ElementaryTypeName","src":"670:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7080,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"698:6:23","nodeType":"VariableDeclaration","scope":7088,"src":"691:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7079,"name":"string","nodeType":"ElementaryTypeName","src":"691:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7082,"indexed":false,"mutability":"mutable","name":"decimals","nameLocation":"720:8:23","nodeType":"VariableDeclaration","scope":7088,"src":"714:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7081,"name":"uint8","nodeType":"ElementaryTypeName","src":"714:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7084,"indexed":true,"mutability":"mutable","name":"vaultAddress","nameLocation":"754:12:23","nodeType":"VariableDeclaration","scope":7088,"src":"738:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7083,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7086,"indexed":false,"mutability":"mutable","name":"adminForSynth","nameLocation":"784:13:23","nodeType":"VariableDeclaration","scope":7088,"src":"776:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7085,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"621:227:23"},"src":"603:246:23"},{"body":{"id":7114,"nodeType":"Block","src":"933:135:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7099,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"951:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"975:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"967:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7100,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:23","typeDescriptions":{}}},"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"967:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"951:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a205661756c7420616464726573732063616e6e6f74206265207a65726f","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"979:44:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b4058f2b30d7b219dbdc967b7bc89212f9c9e2b2fd71bb37c53b63141f281d0","typeString":"literal_string \"SynthFactory: Vault address cannot be zero\""},"value":"SynthFactory: Vault address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b4058f2b30d7b219dbdc967b7bc89212f9c9e2b2fd71bb37c53b63141f281d0","typeString":"literal_string \"SynthFactory: Vault address cannot be zero\""}],"id":7098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"943:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"943:81:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"ExpressionStatement","src":"943:81:23"},{"expression":{"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7108,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"1034:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7110,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"1048:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7109,"name":"Vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"1042:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Vault_$8042_$","typeString":"type(contract Vault)"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}},"src":"1034:27:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}},"id":7113,"nodeType":"ExpressionStatement","src":"1034:27:23"}]},"id":7115,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7095,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"919:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7096,"kind":"baseConstructorSpecifier","modifierName":{"id":7094,"name":"Ownable","nameLocations":["911:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"911:7:23"},"nodeType":"ModifierInvocation","src":"911:21:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"initialOwner","nameLocation":"875:12:23","nodeType":"VariableDeclaration","scope":7115,"src":"867:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7089,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7092,"mutability":"mutable","name":"vaultAddress","nameLocation":"897:12:23","nodeType":"VariableDeclaration","scope":7115,"src":"889:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7091,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"866:44:23"},"returnParameters":{"id":7097,"nodeType":"ParameterList","parameters":[],"src":"933:0:23"},"scope":7278,"src":"855:213:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7234,"nodeType":"Block","src":"1709:2019:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7130,"name":"synthBySymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"1727:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7132,"indexExpression":{"id":7131,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"1741:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1727:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1760:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1752:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7133,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:23","typeDescriptions":{}}},"id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1727:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a2053796d626f6c20616c726561647920657869737473","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1764:37:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85890c925f1727608cb87d0372ae4768a534a9da9df2e35bf010dc1b05950c3","typeString":"literal_string \"SynthFactory: Symbol already exists\""},"value":"SynthFactory: Symbol already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85890c925f1727608cb87d0372ae4768a534a9da9df2e35bf010dc1b05950c3","typeString":"literal_string \"SynthFactory: Symbol already exists\""}],"id":7129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1719:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:83:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"ExpressionStatement","src":"1719:83:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7144,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"1826:4:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1820:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7142,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:23","typeDescriptions":{}}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1820:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1832:6:23","memberName":"length","nodeType":"MemberAccess","src":"1820:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1820:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a204e616d652063616e6e6f7420626520656d707479","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:36:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d1a9a13b06cc8aff9ba483a4e13e59e28891d478348833dc1a34b1373ddcc50","typeString":"literal_string \"SynthFactory: Name cannot be empty\""},"value":"SynthFactory: Name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d1a9a13b06cc8aff9ba483a4e13e59e28891d478348833dc1a34b1373ddcc50","typeString":"literal_string \"SynthFactory: Name cannot be empty\""}],"id":7141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1812:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7151,"nodeType":"ExpressionStatement","src":"1812:69:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7155,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"1905:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1899:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7153,"name":"bytes","nodeType":"ElementaryTypeName","src":"1899:5:23","typeDescriptions":{}}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1913:6:23","memberName":"length","nodeType":"MemberAccess","src":"1899:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1899:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a2053796d626f6c2063616e6e6f7420626520656d707479","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1925:38:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c40c49e7556f13eebc7e10cf1b33b114a0b170d19003e10546e347f52e71913","typeString":"literal_string \"SynthFactory: Symbol cannot be empty\""},"value":"SynthFactory: Symbol cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c40c49e7556f13eebc7e10cf1b33b114a0b170d19003e10546e347f52e71913","typeString":"literal_string \"SynthFactory: Symbol cannot be empty\""}],"id":7152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1891:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1891:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7162,"nodeType":"ExpressionStatement","src":"1891:73:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"1982:9:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1994:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1982:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"1999:9:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3138","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2012:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1999:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1982:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a20446563696d616c73206d757374206265206265747765656e203120616e64203138","id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2016:49:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f5c08208265473fd885ce40580391aab225617aea767cb8f69d6ac8c30c012a","typeString":"literal_string \"SynthFactory: Decimals must be between 1 and 18\""},"value":"SynthFactory: Decimals must be between 1 and 18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f5c08208265473fd885ce40580391aab225617aea767cb8f69d6ac8c30c012a","typeString":"literal_string \"SynthFactory: Decimals must be between 1 and 18\""}],"id":7163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1974:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:92:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7173,"nodeType":"ExpressionStatement","src":"1974:92:23"},{"assignments":[7175],"declarations":[{"constant":false,"id":7175,"mutability":"mutable","name":"synthAdmin","nameLocation":"2293:10:23","nodeType":"VariableDeclaration","scope":7234,"src":"2285:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7174,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7178,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"2306:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2285:28:23"},{"assignments":[7181],"declarations":[{"constant":false,"id":7181,"mutability":"mutable","name":"newSynth","nameLocation":"2393:8:23","nodeType":"VariableDeclaration","scope":7234,"src":"2382:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"},"typeName":{"id":7180,"nodeType":"UserDefinedTypeName","pathNode":{"id":7179,"name":"SynthERC20","nameLocations":["2382:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":7057,"src":"2382:10:23"},"referencedDeclaration":7057,"src":"2382:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"}},"visibility":"internal"}],"id":7194,"initialValue":{"arguments":[{"id":7185,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"2419:4:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7186,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"2425:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7187,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"2433:9:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7188,"name":"synthAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"2444:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7191,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2464:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2456:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7189,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:23","typeDescriptions":{}}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2456:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2404:14:23","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_address_$_t_address_$returns$_t_contract$_SynthERC20_$7057_$","typeString":"function (string memory,string memory,uint8,address,address) returns (contract SynthERC20)"},"typeName":{"id":7183,"nodeType":"UserDefinedTypeName","pathNode":{"id":7182,"name":"SynthERC20","nameLocations":["2408:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":7057,"src":"2408:10:23"},"referencedDeclaration":7057,"src":"2408:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"}}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"}},"nodeType":"VariableDeclarationStatement","src":"2382:89:23"},{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7195,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"2481:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7198,"name":"newSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"2512:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SynthERC20_$7057","typeString":"contract SynthERC20"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2504:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7196,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:23","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2481:40:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7201,"nodeType":"ExpressionStatement","src":"2481:40:23"},{"expression":{"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7202,"name":"synthBySymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"2562:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7204,"indexExpression":{"id":7203,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"2576:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2562:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7205,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"2586:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2562:44:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7207,"nodeType":"ExpressionStatement","src":"2562:44:23"},{"expression":{"arguments":[{"id":7211,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"2631:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7208,"name":"allSynths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"2616:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:4:23","memberName":"push","nodeType":"MemberAccess","src":"2616:14:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2616:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7213,"nodeType":"ExpressionStatement","src":"2616:36:23"},{"expression":{"arguments":[{"id":7217,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"3560:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7214,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"3540:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3546:13:23","memberName":"registerSynth","nodeType":"MemberAccess","referencedDeclaration":7941,"src":"3540:19:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7219,"nodeType":"ExpressionStatement","src":"3540:41:23"},{"eventCall":{"arguments":[{"id":7221,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"3610:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7222,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3632:4:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7223,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3638:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7224,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"3646:9:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":7227,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"3665:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3657:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7225,"name":"address","nodeType":"ElementaryTypeName","src":"3657:7:23","typeDescriptions":{}}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7229,"name":"synthAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"3673:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7220,"name":"SynthCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"3597:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_address_$_t_address_$returns$__$","typeString":"function (address,string memory,string memory,uint8,address,address)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7231,"nodeType":"EmitStatement","src":"3592:92:23"},{"expression":{"id":7232,"name":"synthContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"3701:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7128,"id":7233,"nodeType":"Return","src":"3694:27:23"}]},"documentation":{"id":7116,"nodeType":"StructuredDocumentation","src":"1074:458:23","text":" @dev Creates a new SynthERC20 token, grants minting/burning roles to the Vault,\n      and registers it with the Vault.\n @param name The name of the synthetic token (e.g., \"Synthetic Bitcoin\")\n @param symbol The symbol of the synthetic token (e.g., \"sBTC\")\n @param decimals_ The number of decimals for the token\n Only callable by the owner of this factory (likely deployer initially, then can be DAO/multisig)."},"functionSelector":"2584b3aa","id":7235,"implemented":true,"kind":"function","modifiers":[{"id":7125,"kind":"modifierInvocation","modifierName":{"id":7124,"name":"onlyOwner","nameLocations":["1660:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1660:9:23"},"nodeType":"ModifierInvocation","src":"1660:9:23"}],"name":"createSynth","nameLocation":"1546:11:23","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"name","nameLocation":"1583:4:23","nodeType":"VariableDeclaration","scope":7235,"src":"1567:20:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7117,"name":"string","nodeType":"ElementaryTypeName","src":"1567:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7120,"mutability":"mutable","name":"symbol","nameLocation":"1613:6:23","nodeType":"VariableDeclaration","scope":7235,"src":"1597:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7119,"name":"string","nodeType":"ElementaryTypeName","src":"1597:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7122,"mutability":"mutable","name":"decimals_","nameLocation":"1635:9:23","nodeType":"VariableDeclaration","scope":7235,"src":"1629:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7121,"name":"uint8","nodeType":"ElementaryTypeName","src":"1629:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1557:93:23"},"returnParameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"synthContractAddress","nameLocation":"1687:20:23","nodeType":"VariableDeclaration","scope":7235,"src":"1679:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7126,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:30:23"},"scope":7278,"src":"1537:2191:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7247,"nodeType":"Block","src":"4049:45:23","statements":[{"expression":{"baseExpression":{"id":7243,"name":"synthBySymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"4066:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7245,"indexExpression":{"id":7244,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7238,"src":"4080:6:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4066:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7242,"id":7246,"nodeType":"Return","src":"4059:28:23"}]},"documentation":{"id":7236,"nodeType":"StructuredDocumentation","src":"3734:228:23","text":" @dev Retrieves the address of a synth contract by its symbol.\n @param symbol The symbol of the synthetic token (e.g., \"sBTC\")\n @return The address of the synth contract, or address(0) if not found."},"functionSelector":"d9a07bc9","id":7248,"implemented":true,"kind":"function","modifiers":[],"name":"getSynthBySymbol","nameLocation":"3976:16:23","nodeType":"FunctionDefinition","parameters":{"id":7239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7238,"mutability":"mutable","name":"symbol","nameLocation":"4009:6:23","nodeType":"VariableDeclaration","scope":7248,"src":"3993:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7237,"name":"string","nodeType":"ElementaryTypeName","src":"3993:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3992:24:23"},"returnParameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7248,"src":"4040:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7240,"name":"address","nodeType":"ElementaryTypeName","src":"4040:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4039:9:23"},"scope":7278,"src":"3967:127:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7256,"nodeType":"Block","src":"4161:40:23","statements":[{"expression":{"expression":{"id":7253,"name":"allSynths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"4178:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4188:6:23","memberName":"length","nodeType":"MemberAccess","src":"4178:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7252,"id":7255,"nodeType":"Return","src":"4171:23:23"}]},"functionSelector":"dddde17a","id":7257,"implemented":true,"kind":"function","modifiers":[],"name":"getAllSynthsCount","nameLocation":"4109:17:23","nodeType":"FunctionDefinition","parameters":{"id":7249,"nodeType":"ParameterList","parameters":[],"src":"4126:2:23"},"returnParameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7257,"src":"4152:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4151:9:23"},"scope":7278,"src":"4100:101:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7276,"nodeType":"Block","src":"4279:120:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7265,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"4297:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7266,"name":"allSynths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"4305:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4315:6:23","memberName":"length","nodeType":"MemberAccess","src":"4305:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4297:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796e7468466163746f72793a20496e646578206f7574206f6620626f756e6473","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4323:35:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2362954854abec606345926a1e026bdb0343c7dd1d7aef33a453e36a76639980","typeString":"literal_string \"SynthFactory: Index out of bounds\""},"value":"SynthFactory: Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2362954854abec606345926a1e026bdb0343c7dd1d7aef33a453e36a76639980","typeString":"literal_string \"SynthFactory: Index out of bounds\""}],"id":7264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4289:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4289:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7271,"nodeType":"ExpressionStatement","src":"4289:70:23"},{"expression":{"baseExpression":{"id":7272,"name":"allSynths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"4376:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7274,"indexExpression":{"id":7273,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"4386:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4376:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7263,"id":7275,"nodeType":"Return","src":"4369:23:23"}]},"functionSelector":"734d7a0e","id":7277,"implemented":true,"kind":"function","modifiers":[],"name":"getSynthAtIndex","nameLocation":"4216:15:23","nodeType":"FunctionDefinition","parameters":{"id":7260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7259,"mutability":"mutable","name":"index","nameLocation":"4240:5:23","nodeType":"VariableDeclaration","scope":7277,"src":"4232:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:15:23"},"returnParameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7277,"src":"4270:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7261,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4269:9:23"},"scope":7278,"src":"4207:192:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7279,"src":"247:4825:23","usedErrors":[392,397],"usedEvents":[403,7088]}],"src":"32:5040:23"},"id":23},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"AccessControl":[295],"AccessControlEnumerable":[684],"CXPTToken":[6929],"Context":[2452],"ERC165":[2782],"ERC20":[1362],"ERC20Burnable":[1486],"EnumerableSet":[6877],"IAccessControl":[378],"IAccessControlEnumerable":[710],"IERC20":[1440],"IERC20Errors":[752],"IERC20Metadata":[1512],"ISynthERC20":[7301],"SynthERC20":[7057],"Vault":[8042]},"id":8043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7280,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":1441,"src":"58:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol","id":7282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":685,"src":"115:79:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CXPTToken.sol","file":"./CXPTToken.sol","id":7283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":6930,"src":"195:25:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SynthERC20.sol","file":"./SynthERC20.sol","id":7284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8043,"sourceUnit":7058,"src":"406:26:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7285,"name":"IERC20","nameLocations":["525:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"525:6:24"},"id":7286,"nodeType":"InheritanceSpecifier","src":"525:6:24"}],"canonicalName":"ISynthERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7301,"linearizedBaseContracts":[7301,1440],"name":"ISynthERC20","nameLocation":"510:11:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":7293,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"547:4:24","nodeType":"FunctionDefinition","parameters":{"id":7291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"to","nameLocation":"560:2:24","nodeType":"VariableDeclaration","scope":7293,"src":"552:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7287,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7290,"mutability":"mutable","name":"amount","nameLocation":"572:6:24","nodeType":"VariableDeclaration","scope":7293,"src":"564:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"551:28:24"},"returnParameters":{"id":7292,"nodeType":"ParameterList","parameters":[],"src":"588:0:24"},"scope":7301,"src":"538:51:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79cc6790","id":7300,"implemented":false,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"603:8:24","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"account","nameLocation":"620:7:24","nodeType":"VariableDeclaration","scope":7300,"src":"612:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7294,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7297,"mutability":"mutable","name":"amount","nameLocation":"637:6:24","nodeType":"VariableDeclaration","scope":7300,"src":"629:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:33:24"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[],"src":"653:0:24"},"scope":7301,"src":"594:60:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8043,"src":"500:273:24","usedErrors":[],"usedEvents":[1374,1383]},{"abstract":false,"baseContracts":[{"baseName":{"id":7302,"name":"AccessControlEnumerable","nameLocations":["793:23:24"],"nodeType":"IdentifierPath","referencedDeclaration":684,"src":"793:23:24"},"id":7303,"nodeType":"InheritanceSpecifier","src":"793:23:24"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8042,"linearizedBaseContracts":[8042,684,295,2782,2794,710,378,2452],"name":"Vault","nameLocation":"784:5:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f36246d1","id":7308,"mutability":"constant","name":"CORE_ROLE","nameLocation":"847:9:24","nodeType":"VariableDeclaration","scope":8042,"src":"823:58:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"823:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434f52455f524f4c45","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"869:11:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_502d3d275257923b2bea6ea25d9631f12369fb532871f13eb85eb09dc0fb4842","typeString":"literal_string \"CORE_ROLE\""},"value":"CORE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_502d3d275257923b2bea6ea25d9631f12369fb532871f13eb85eb09dc0fb4842","typeString":"literal_string \"CORE_ROLE\""}],"id":7305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"859:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"859:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c50d6dd9","id":7313,"mutability":"constant","name":"GATEWAY_ROLE","nameLocation":"911:12:24","nodeType":"VariableDeclaration","scope":8042,"src":"887:64:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"887:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"474154455741595f524f4c45","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"936:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a","typeString":"literal_string \"GATEWAY_ROLE\""},"value":"GATEWAY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a","typeString":"literal_string \"GATEWAY_ROLE\""}],"id":7310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"926:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":7318,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"981:10:24","nodeType":"VariableDeclaration","scope":8042,"src":"957:60:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"957:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1004:12:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":7315,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"994:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"994:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"11eac855","id":7321,"mutability":"immutable","name":"usdcToken","nameLocation":"1048:9:24","nodeType":"VariableDeclaration","scope":8042,"src":"1024:33:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"},"typeName":{"id":7320,"nodeType":"UserDefinedTypeName","pathNode":{"id":7319,"name":"IERC20","nameLocations":["1024:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1440,"src":"1024:6:24"},"referencedDeclaration":1440,"src":"1024:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"3fa4d814","id":7324,"mutability":"immutable","name":"cxptToken","nameLocation":"1090:9:24","nodeType":"VariableDeclaration","scope":8042,"src":"1063:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"},"typeName":{"id":7323,"nodeType":"UserDefinedTypeName","pathNode":{"id":7322,"name":"CXPTToken","nameLocations":["1063:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":6929,"src":"1063:9:24"},"referencedDeclaration":6929,"src":"1063:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}},"visibility":"public"},{"constant":false,"functionSelector":"4d394279","id":7328,"mutability":"mutable","name":"isRegisteredSynth","nameLocation":"1138:17:24","nodeType":"VariableDeclaration","scope":8042,"src":"1106:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7327,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7325,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1106:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7326,"name":"bool","nodeType":"ElementaryTypeName","src":"1125:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"c7090818","id":7330,"mutability":"mutable","name":"totalFeesCollectedUSDC","nameLocation":"1215:22:24","nodeType":"VariableDeclaration","scope":8042,"src":"1200:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5a860befdd305e7d99e384272a4b82aab613eab23cc3070774a4a8cc0f168100","id":7338,"name":"DepositedUSDC","nameLocation":"1309:13:24","nodeType":"EventDefinition","parameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"1339:11:24","nodeType":"VariableDeclaration","scope":7338,"src":"1323:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7331,"name":"address","nodeType":"ElementaryTypeName","src":"1323:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7334,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"1368:10:24","nodeType":"VariableDeclaration","scope":7338,"src":"1352:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7333,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7336,"indexed":false,"mutability":"mutable","name":"usdcAmount","nameLocation":"1388:10:24","nodeType":"VariableDeclaration","scope":7338,"src":"1380:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:77:24"},"src":"1303:97:24"},{"anonymous":false,"eventSelector":"a97afe0164ab246d52c034daf6c9025ccfc099b55129272a9bb868ec04669ea4","id":7346,"name":"WithdrawnUSDC","nameLocation":"1411:13:24","nodeType":"EventDefinition","parameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"1441:11:24","nodeType":"VariableDeclaration","scope":7346,"src":"1425:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7339,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7342,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"1470:10:24","nodeType":"VariableDeclaration","scope":7346,"src":"1454:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7341,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7344,"indexed":false,"mutability":"mutable","name":"usdcAmount","nameLocation":"1490:10:24","nodeType":"VariableDeclaration","scope":7346,"src":"1482:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1424:77:24"},"src":"1405:97:24"},{"anonymous":false,"eventSelector":"92b755fa8e77bd21bd6dacacaa86ce4f43d5ca8568a52a401dc983cbd51bf67e","id":7354,"name":"WithdrawnCXPT","nameLocation":"1513:13:24","nodeType":"EventDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"1543:11:24","nodeType":"VariableDeclaration","scope":7354,"src":"1527:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7347,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7350,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"1572:10:24","nodeType":"VariableDeclaration","scope":7354,"src":"1556:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7352,"indexed":false,"mutability":"mutable","name":"cxptAmount","nameLocation":"1592:10:24","nodeType":"VariableDeclaration","scope":7354,"src":"1584:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1584:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:77:24"},"src":"1507:97:24"},{"anonymous":false,"eventSelector":"db3823c581f8b10f079485fcda8dc823145456bf18ccf7606d21afdc5f53a042","id":7360,"name":"SynthRegistered","nameLocation":"1615:15:24","nodeType":"EventDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"indexed":true,"mutability":"mutable","name":"registrar","nameLocation":"1647:9:24","nodeType":"VariableDeclaration","scope":7360,"src":"1631:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7355,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7358,"indexed":true,"mutability":"mutable","name":"synthContract","nameLocation":"1674:13:24","nodeType":"VariableDeclaration","scope":7360,"src":"1658:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7357,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1630:58:24"},"src":"1609:80:24"},{"anonymous":false,"eventSelector":"1e24569f7c3f504b5551f16f646a25d65ffa8e302d9b65c1506c24fd10e1ca95","id":7366,"name":"FeesRecorded","nameLocation":"1700:12:24","nodeType":"EventDefinition","parameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"1729:11:24","nodeType":"VariableDeclaration","scope":7366,"src":"1713:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7361,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7364,"indexed":false,"mutability":"mutable","name":"usdcFeeAmount","nameLocation":"1750:13:24","nodeType":"VariableDeclaration","scope":7366,"src":"1742:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1712:52:24"},"src":"1694:71:24"},{"anonymous":false,"eventSelector":"5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa8","id":7374,"name":"FeesWithdrawn","nameLocation":"1776:13:24","nodeType":"EventDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"1806:5:24","nodeType":"VariableDeclaration","scope":7374,"src":"1790:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7367,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7370,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1829:2:24","nodeType":"VariableDeclaration","scope":7374,"src":"1813:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7369,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7372,"indexed":false,"mutability":"mutable","name":"usdcAmount","nameLocation":"1841:10:24","nodeType":"VariableDeclaration","scope":7374,"src":"1833:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1789:63:24"},"src":"1770:83:24"},{"anonymous":false,"eventSelector":"8f6bb1fe8136c1d257d77e7a1e5be2c656c9971040cbbf7cce283eb69a729897","id":7382,"name":"SynthDepositedToVault","nameLocation":"1865:21:24","nodeType":"EventDefinition","parameters":{"id":7381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"1903:10:24","nodeType":"VariableDeclaration","scope":7382,"src":"1887:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7375,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7378,"indexed":true,"mutability":"mutable","name":"synthContract","nameLocation":"1931:13:24","nodeType":"VariableDeclaration","scope":7382,"src":"1915:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7377,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7380,"indexed":false,"mutability":"mutable","name":"sAssetAmount","nameLocation":"1954:12:24","nodeType":"VariableDeclaration","scope":7382,"src":"1946:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1886:81:24"},"src":"1859:109:24"},{"anonymous":false,"eventSelector":"1adf7c474f4d4c8c8c445ac7bb8ddfd2ac3bc3d69602e520973e1e130b35d059","id":7392,"name":"SynthWithdrawnFromVault","nameLocation":"1979:23:24","nodeType":"EventDefinition","parameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7384,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"2019:11:24","nodeType":"VariableDeclaration","scope":7392,"src":"2003:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7383,"name":"address","nodeType":"ElementaryTypeName","src":"2003:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7386,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"2048:10:24","nodeType":"VariableDeclaration","scope":7392,"src":"2032:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7385,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7388,"indexed":true,"mutability":"mutable","name":"synthContract","nameLocation":"2076:13:24","nodeType":"VariableDeclaration","scope":7392,"src":"2060:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7387,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7390,"indexed":false,"mutability":"mutable","name":"sAssetAmount","nameLocation":"2099:12:24","nodeType":"VariableDeclaration","scope":7392,"src":"2091:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2002:110:24"},"src":"1973:140:24"},{"anonymous":false,"eventSelector":"0f98fef012e390f285dc060967b20ecc02d87aeb79d028669963fa048e07d5bd","id":7404,"name":"USDCToSAssetExchanged","nameLocation":"2129:21:24","nodeType":"EventDefinition","parameters":{"id":7403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"2176:11:24","nodeType":"VariableDeclaration","scope":7404,"src":"2160:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7393,"name":"address","nodeType":"ElementaryTypeName","src":"2160:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7396,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"2213:10:24","nodeType":"VariableDeclaration","scope":7404,"src":"2197:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7395,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7398,"indexed":true,"mutability":"mutable","name":"sAssetContract","nameLocation":"2249:14:24","nodeType":"VariableDeclaration","scope":7404,"src":"2233:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7397,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7400,"indexed":false,"mutability":"mutable","name":"usdcAmountSpent","nameLocation":"2281:15:24","nodeType":"VariableDeclaration","scope":7404,"src":"2273:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7402,"indexed":false,"mutability":"mutable","name":"sAssetAmountMinted","nameLocation":"2314:18:24","nodeType":"VariableDeclaration","scope":7404,"src":"2306:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2150:188:24"},"src":"2123:216:24"},{"anonymous":false,"eventSelector":"9b25b321600b34289c3cbb5c981301c953b6444e24e29b076424380203574704","id":7416,"name":"SAssetToUSDCExchanged","nameLocation":"2350:21:24","nodeType":"EventDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"indexed":true,"mutability":"mutable","name":"coreAddress","nameLocation":"2397:11:24","nodeType":"VariableDeclaration","scope":7416,"src":"2381:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7405,"name":"address","nodeType":"ElementaryTypeName","src":"2381:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7408,"indexed":true,"mutability":"mutable","name":"userWallet","nameLocation":"2434:10:24","nodeType":"VariableDeclaration","scope":7416,"src":"2418:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7410,"indexed":true,"mutability":"mutable","name":"sAssetContract","nameLocation":"2470:14:24","nodeType":"VariableDeclaration","scope":7416,"src":"2454:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7409,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7412,"indexed":false,"mutability":"mutable","name":"sAssetAmountBurned","nameLocation":"2502:18:24","nodeType":"VariableDeclaration","scope":7416,"src":"2494:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7414,"indexed":false,"mutability":"mutable","name":"usdcAmountReceived","nameLocation":"2538:18:24","nodeType":"VariableDeclaration","scope":7416,"src":"2530:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2371:191:24"},"src":"2344:219:24"},{"body":{"id":7501,"nodeType":"Block","src":"2716:647:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7428,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"2734:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2750:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7429,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:24","typeDescriptions":{}}},"id":7432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2734:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420555344432061646472657373","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2762:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cabb85905726238a61108ff7db33a260b54600229dbc1fcb2b45dcc15ee14228","typeString":"literal_string \"Vault: Invalid USDC address\""},"value":"Vault: Invalid USDC address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cabb85905726238a61108ff7db33a260b54600229dbc1fcb2b45dcc15ee14228","typeString":"literal_string \"Vault: Invalid USDC address\""}],"id":7427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2726:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7436,"nodeType":"ExpressionStatement","src":"2726:66:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7438,"name":"_cxptTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"2810:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2831:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7439,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:24","typeDescriptions":{}}},"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2810:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420435850542061646472657373","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2843:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4143c608e759ac0a10480b0b64c5faf7bc609465f4d47050750e80b86c03c7e","typeString":"literal_string \"Vault: Invalid CXPT address\""},"value":"Vault: Invalid CXPT address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4143c608e759ac0a10480b0b64c5faf7bc609465f4d47050750e80b86c03c7e","typeString":"literal_string \"Vault: Invalid CXPT address\""}],"id":7437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2802:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7446,"nodeType":"ExpressionStatement","src":"2802:71:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7448,"name":"_coreAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"2891:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2907:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7449,"name":"address","nodeType":"ElementaryTypeName","src":"2907:7:24","typeDescriptions":{}}},"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2907:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2891:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420436f72652061646472657373","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2919:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc3ef930b84225a3d455e689feeef2f0f8eea2781e2791d7b43706604fe7b178","typeString":"literal_string \"Vault: Invalid Core address\""},"value":"Vault: Invalid Core address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc3ef930b84225a3d455e689feeef2f0f8eea2781e2791d7b43706604fe7b178","typeString":"literal_string \"Vault: Invalid Core address\""}],"id":7447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2883:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2883:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"2883:66:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7458,"name":"_gatewayAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"2967:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2994:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2986:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7459,"name":"address","nodeType":"ElementaryTypeName","src":"2986:7:24","typeDescriptions":{}}},"id":7462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2967:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420476174657761792061646472657373","id":7464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2998:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3fe1be505b000346304c811dc1968719aa106f725a15863d87db884f593cd83","typeString":"literal_string \"Vault: Invalid Gateway address\""},"value":"Vault: Invalid Gateway address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3fe1be505b000346304c811dc1968719aa106f725a15863d87db884f593cd83","typeString":"literal_string \"Vault: Invalid Gateway address\""}],"id":7457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2959:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2959:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7466,"nodeType":"ExpressionStatement","src":"2959:72:24"},{"expression":{"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7467,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"3042:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7469,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"3061:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7468,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"3054:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1440_$","typeString":"type(contract IERC20)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"src":"3042:32:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7472,"nodeType":"ExpressionStatement","src":"3042:32:24"},{"expression":{"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7473,"name":"cxptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"3084:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7475,"name":"_cxptTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"3106:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7474,"name":"CXPTToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"3096:9:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CXPTToken_$6929_$","typeString":"type(contract CXPTToken)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}},"src":"3084:40:24","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}},"id":7478,"nodeType":"ExpressionStatement","src":"3084:40:24"},{"expression":{"arguments":[{"id":7480,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3185:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3205:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3209:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3205:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7479,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"3174:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3174:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7484,"nodeType":"ExpressionStatement","src":"3174:42:24"},{"expression":{"arguments":[{"id":7486,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"3237:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7487,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3249:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3253:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3249:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7485,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"3226:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7490,"nodeType":"ExpressionStatement","src":"3226:34:24"},{"expression":{"arguments":[{"id":7492,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"3281:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7493,"name":"_coreAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"3292:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7491,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"3270:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7495,"nodeType":"ExpressionStatement","src":"3270:35:24"},{"expression":{"arguments":[{"id":7497,"name":"GATEWAY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"3326:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7498,"name":"_gatewayAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"3340:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7496,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[651],"referencedDeclaration":651,"src":"3315:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3315:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7500,"nodeType":"ExpressionStatement","src":"3315:41:24"}]},"id":7502,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7418,"mutability":"mutable","name":"_usdcAddress","nameLocation":"2598:12:24","nodeType":"VariableDeclaration","scope":7502,"src":"2590:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7417,"name":"address","nodeType":"ElementaryTypeName","src":"2590:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7420,"mutability":"mutable","name":"_cxptTokenAddress","nameLocation":"2628:17:24","nodeType":"VariableDeclaration","scope":7502,"src":"2620:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7419,"name":"address","nodeType":"ElementaryTypeName","src":"2620:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7422,"mutability":"mutable","name":"_coreAddress","nameLocation":"2663:12:24","nodeType":"VariableDeclaration","scope":7502,"src":"2655:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7421,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"_gatewayAddress","nameLocation":"2693:15:24","nodeType":"VariableDeclaration","scope":7502,"src":"2685:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7423,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2580:135:24"},"returnParameters":{"id":7426,"nodeType":"ParameterList","parameters":[],"src":"2716:0:24"},"scope":8042,"src":"2569:794:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7549,"nodeType":"Block","src":"3520:417:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7513,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"3538:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3560:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7514,"name":"address","nodeType":"ElementaryTypeName","src":"3552:7:24","typeDescriptions":{}}},"id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3538:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3564:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3530:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7521,"nodeType":"ExpressionStatement","src":"3530:63:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7523,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"3611:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20416d6f756e74206d75737420626520706f736974697665","id":7526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3627:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""},"value":"Vault: Amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""}],"id":7522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3603:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7528,"nodeType":"ExpressionStatement","src":"3603:57:24"},{"expression":{"arguments":[{"arguments":[{"id":7532,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"3792:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3812:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3804:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7533,"name":"address","nodeType":"ElementaryTypeName","src":"3804:7:24","typeDescriptions":{}}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7537,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"3819:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7530,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"3769:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3779:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1439,"src":"3769:22:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3769:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2055534443207472616e7366657246726f6d206661696c6564","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3832:33:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d6ae6e04de27a95a55697afc4104c9a57c9f9ed75cc00578b5cb6b42352eb1e","typeString":"literal_string \"Vault: USDC transferFrom failed\""},"value":"Vault: USDC transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d6ae6e04de27a95a55697afc4104c9a57c9f9ed75cc00578b5cb6b42352eb1e","typeString":"literal_string \"Vault: USDC transferFrom failed\""}],"id":7529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3761:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3761:105:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7541,"nodeType":"ExpressionStatement","src":"3761:105:24"},{"eventCall":{"arguments":[{"expression":{"id":7543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3895:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3895:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7545,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"3907:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7546,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"3919:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7542,"name":"DepositedUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3881:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3881:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7548,"nodeType":"EmitStatement","src":"3876:54:24"}]},"functionSelector":"56b22bf2","id":7550,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7509,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"3509:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7510,"kind":"modifierInvocation","modifierName":{"id":7508,"name":"onlyRole","nameLocations":["3500:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3500:8:24"},"nodeType":"ModifierInvocation","src":"3500:19:24"}],"name":"depositUSDC","nameLocation":"3439:11:24","nodeType":"FunctionDefinition","parameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"mutability":"mutable","name":"userWallet","nameLocation":"3459:10:24","nodeType":"VariableDeclaration","scope":7550,"src":"3451:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7503,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7506,"mutability":"mutable","name":"usdcAmount","nameLocation":"3479:10:24","nodeType":"VariableDeclaration","scope":7550,"src":"3471:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3471:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:40:24"},"returnParameters":{"id":7511,"nodeType":"ParameterList","parameters":[],"src":"3520:0:24"},"scope":8042,"src":"3430:507:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7624,"nodeType":"Block","src":"4125:765:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7563,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4143:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4165:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4157:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7564,"name":"address","nodeType":"ElementaryTypeName","src":"4157:7:24","typeDescriptions":{}}},"id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4157:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4143:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4135:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7571,"nodeType":"ExpressionStatement","src":"4135:63:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4216:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4225:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4216:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20416d6f756e74206d75737420626520706f736974697665","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4228:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""},"value":"Vault: Amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""}],"id":7572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4208:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"ExpressionStatement","src":"4208:53:24"},{"condition":{"id":7579,"name":"withdrawAsCxpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"4360:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7622,"nodeType":"Block","src":"4633:251:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7600,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4703:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4695:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7598,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:24","typeDescriptions":{}}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7596,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"4675:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4685:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"4675:19:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4713:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4675:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e73756666696369656e74205553444320696e205661756c74","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4721:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f08a77ec6099f5cc0b388b1b7f87ebd6a79c089f8810caa9e155e76f4270c1fd","typeString":"literal_string \"Vault: Insufficient USDC in Vault\""},"value":"Vault: Insufficient USDC in Vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f08a77ec6099f5cc0b388b1b7f87ebd6a79c089f8810caa9e155e76f4270c1fd","typeString":"literal_string \"Vault: Insufficient USDC in Vault\""}],"id":7595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4667:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:90:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7607,"nodeType":"ExpressionStatement","src":"4667:90:24"},{"expression":{"arguments":[{"id":7611,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4790:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7612,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4802:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7608,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"4771:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4781:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"4771:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"ExpressionStatement","src":"4771:38:24"},{"eventCall":{"arguments":[{"expression":{"id":7616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4842:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7618,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4854:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4866:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7615,"name":"WithdrawnUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4828:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"EmitStatement","src":"4823:50:24"}]},"id":7623,"nodeType":"IfStatement","src":"4356:528:24","trueBody":{"id":7594,"nodeType":"Block","src":"4376:251:24","statements":[{"expression":{"arguments":[{"id":7583,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4479:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4491:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7580,"name":"cxptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"4464:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4474:4:24","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":6928,"src":"4464:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4464:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7586,"nodeType":"ExpressionStatement","src":"4464:34:24"},{"eventCall":{"arguments":[{"expression":{"id":7588,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4585:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4589:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4585:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7590,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4597:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7591,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4609:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7587,"name":"WithdrawnCXPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"4571:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4571:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7593,"nodeType":"EmitStatement","src":"4566:50:24"}]}}]},"functionSelector":"ead5d359","id":7625,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7559,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"4114:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7560,"kind":"modifierInvocation","modifierName":{"id":7558,"name":"onlyRole","nameLocations":["4105:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4105:8:24"},"nodeType":"ModifierInvocation","src":"4105:19:24"}],"name":"withdraw","nameLocation":"4030:8:24","nodeType":"FunctionDefinition","parameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"userWallet","nameLocation":"4047:10:24","nodeType":"VariableDeclaration","scope":7625,"src":"4039:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"4039:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7554,"mutability":"mutable","name":"amount","nameLocation":"4067:6:24","nodeType":"VariableDeclaration","scope":7625,"src":"4059:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7553,"name":"uint256","nodeType":"ElementaryTypeName","src":"4059:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7556,"mutability":"mutable","name":"withdrawAsCxpt","nameLocation":"4080:14:24","nodeType":"VariableDeclaration","scope":7625,"src":"4075:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7555,"name":"bool","nodeType":"ElementaryTypeName","src":"4075:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4038:57:24"},"returnParameters":{"id":7561,"nodeType":"ParameterList","parameters":[],"src":"4125:0:24"},"scope":8042,"src":"4021:869:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7682,"nodeType":"Block","src":"5199:566:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7638,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5217:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5239:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7639,"name":"address","nodeType":"ElementaryTypeName","src":"5231:7:24","typeDescriptions":{}}},"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5231:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5217:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5243:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5209:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7646,"nodeType":"ExpressionStatement","src":"5209:63:24"},{"expression":{"arguments":[{"baseExpression":{"id":7648,"name":"isRegisteredSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"5290:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7650,"indexExpression":{"id":7649,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"5308:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5290:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2053796e7468206e6f742072656769737465726564","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5324:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""},"value":"Vault: Synth not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""}],"id":7647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5282:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7653,"nodeType":"ExpressionStatement","src":"5282:72:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"5372:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5387:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5372:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20416d6f756e74206d75737420626520706f736974697665","id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5390:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""},"value":"Vault: Amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""}],"id":7654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5364:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5364:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7660,"nodeType":"ExpressionStatement","src":"5364:59:24"},{"expression":{"arguments":[{"arguments":[{"id":7666,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5603:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7669,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5623:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7667,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:24","typeDescriptions":{}}},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7671,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"5630:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7663,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"5575:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7662,"name":"ISynthERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"5563:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISynthERC20_$7301_$","typeString":"type(contract ISynthERC20)"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5563:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISynthERC20_$7301","typeString":"contract ISynthERC20"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5590:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1439,"src":"5563:39:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5563:80:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20734153534554207472616e7366657246726f6d206661696c6564","id":7673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5645:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed3db335e9fb351cc5d051bc5d7fd3270fa11914a949176a292335808a9cbaeb","typeString":"literal_string \"Vault: sASSET transferFrom failed\""},"value":"Vault: sASSET transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed3db335e9fb351cc5d051bc5d7fd3270fa11914a949176a292335808a9cbaeb","typeString":"literal_string \"Vault: sASSET transferFrom failed\""}],"id":7661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5555:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5555:126:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7675,"nodeType":"ExpressionStatement","src":"5555:126:24"},{"eventCall":{"arguments":[{"id":7677,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"5718:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7678,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"5730:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7679,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"5745:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7676,"name":"SynthDepositedToVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"5696:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7681,"nodeType":"EmitStatement","src":"5691:67:24"}]},"functionSelector":"4e2c151f","id":7683,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7634,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"5188:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7635,"kind":"modifierInvocation","modifierName":{"id":7633,"name":"onlyRole","nameLocations":["5179:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5179:8:24"},"nodeType":"ModifierInvocation","src":"5179:19:24"}],"name":"depositSynthToVault","nameLocation":"5085:19:24","nodeType":"FunctionDefinition","parameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7627,"mutability":"mutable","name":"userWallet","nameLocation":"5113:10:24","nodeType":"VariableDeclaration","scope":7683,"src":"5105:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7626,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7629,"mutability":"mutable","name":"synthContract","nameLocation":"5133:13:24","nodeType":"VariableDeclaration","scope":7683,"src":"5125:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7628,"name":"address","nodeType":"ElementaryTypeName","src":"5125:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7631,"mutability":"mutable","name":"sAssetAmount","nameLocation":"5156:12:24","nodeType":"VariableDeclaration","scope":7683,"src":"5148:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5104:65:24"},"returnParameters":{"id":7636,"nodeType":"ParameterList","parameters":[],"src":"5199:0:24"},"scope":8042,"src":"5076:689:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7750,"nodeType":"Block","src":"5989:527:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7696,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"6007:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6021:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7697,"name":"address","nodeType":"ElementaryTypeName","src":"6021:7:24","typeDescriptions":{}}},"id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6033:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5999:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5999:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7704,"nodeType":"ExpressionStatement","src":"5999:63:24"},{"expression":{"arguments":[{"baseExpression":{"id":7706,"name":"isRegisteredSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"6080:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7708,"indexExpression":{"id":7707,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"6098:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6080:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2053796e7468206e6f742072656769737465726564","id":7709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6114:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""},"value":"Vault: Synth not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""}],"id":7705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6072:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6072:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7711,"nodeType":"ExpressionStatement","src":"6072:72:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7713,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"6162:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6177:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6162:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20416d6f756e74206d75737420626520706f736974697665","id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6180:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""},"value":"Vault: Amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9","typeString":"literal_string \"Vault: Amount must be positive\""}],"id":7712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6154:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6154:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7718,"nodeType":"ExpressionStatement","src":"6154:59:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6276:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6268:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7724,"name":"address","nodeType":"ElementaryTypeName","src":"6268:7:24","typeDescriptions":{}}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6268:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7721,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"6243:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7720,"name":"ISynthERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"6231:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISynthERC20_$7301_$","typeString":"type(contract ISynthERC20)"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6231:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISynthERC20_$7301","typeString":"contract ISynthERC20"}},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6258:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"6231:36:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6231:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7729,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"6286:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6231:67:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e73756666696369656e742073415353455420696e205661756c74","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6300:37:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc87779cc149742b4b4cb9bd5dce085bae2d1323af2305e873ac30f5826b8cff","typeString":"literal_string \"Vault: Insufficient sASSET in Vault\""},"value":"Vault: Insufficient sASSET in Vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc87779cc149742b4b4cb9bd5dce085bae2d1323af2305e873ac30f5826b8cff","typeString":"literal_string \"Vault: Insufficient sASSET in Vault\""}],"id":7719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6223:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6223:115:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"ExpressionStatement","src":"6223:115:24"},{"expression":{"arguments":[{"id":7738,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"6393:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7739,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"6405:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7735,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"6369:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7734,"name":"ISynthERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"6357:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISynthERC20_$7301_$","typeString":"type(contract ISynthERC20)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6357:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISynthERC20_$7301","typeString":"contract ISynthERC20"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6384:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6357:35:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6357:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7741,"nodeType":"ExpressionStatement","src":"6357:61:24"},{"eventCall":{"arguments":[{"expression":{"id":7743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6457:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6461:6:24","memberName":"sender","nodeType":"MemberAccess","src":"6457:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7745,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"6469:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7746,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"6481:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7747,"name":"sAssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"6496:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7742,"name":"SynthWithdrawnFromVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"6433:23:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7749,"nodeType":"EmitStatement","src":"6428:81:24"}]},"functionSelector":"2a314e05","id":7751,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7692,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"5978:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7693,"kind":"modifierInvocation","modifierName":{"id":7691,"name":"onlyRole","nameLocations":["5969:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5969:8:24"},"nodeType":"ModifierInvocation","src":"5969:19:24"}],"name":"withdrawSynthFromVault","nameLocation":"5872:22:24","nodeType":"FunctionDefinition","parameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"userWallet","nameLocation":"5903:10:24","nodeType":"VariableDeclaration","scope":7751,"src":"5895:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7684,"name":"address","nodeType":"ElementaryTypeName","src":"5895:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7687,"mutability":"mutable","name":"synthContract","nameLocation":"5923:13:24","nodeType":"VariableDeclaration","scope":7751,"src":"5915:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7686,"name":"address","nodeType":"ElementaryTypeName","src":"5915:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7689,"mutability":"mutable","name":"sAssetAmount","nameLocation":"5946:12:24","nodeType":"VariableDeclaration","scope":7751,"src":"5938:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5938:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5894:65:24"},"returnParameters":{"id":7694,"nodeType":"ParameterList","parameters":[],"src":"5989:0:24"},"scope":8042,"src":"5863:653:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7826,"nodeType":"Block","src":"7150:878:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7766,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"7168:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7190:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7182:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7767,"name":"address","nodeType":"ElementaryTypeName","src":"7182:7:24","typeDescriptions":{}}},"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7168:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7194:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7160:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7774,"nodeType":"ExpressionStatement","src":"7160:63:24"},{"expression":{"arguments":[{"baseExpression":{"id":7776,"name":"isRegisteredSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"7241:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7778,"indexExpression":{"id":7777,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"7259:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7241:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2053796e7468206e6f742072656769737465726564","id":7779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7276:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""},"value":"Vault: Synth not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""}],"id":7775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7233:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7233:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7781,"nodeType":"ExpressionStatement","src":"7233:73:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7783,"name":"usdcAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"7324:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7324:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a205553444320616d6f756e74206d75737420626520706f736974697665","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7347:37:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee","typeString":"literal_string \"Vault: USDC amount must be positive\""},"value":"Vault: USDC amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee","typeString":"literal_string \"Vault: USDC amount must be positive\""}],"id":7782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7316:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7788,"nodeType":"ExpressionStatement","src":"7316:69:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7790,"name":"sAssetAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"7403:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7424:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7403:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2073415353455420616d6f756e74206d75737420626520706f736974697665","id":7793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7427:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6","typeString":"literal_string \"Vault: sASSET amount must be positive\""},"value":"Vault: sASSET amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6","typeString":"literal_string \"Vault: sASSET amount must be positive\""}],"id":7789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7395:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7395:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7795,"nodeType":"ExpressionStatement","src":"7395:72:24"},{"expression":{"arguments":[{"arguments":[{"id":7799,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"7582:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7802,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7602:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7594:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7800,"name":"address","nodeType":"ElementaryTypeName","src":"7594:7:24","typeDescriptions":{}}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7594:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7804,"name":"usdcAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"7609:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7797,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"7559:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7569:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1439,"src":"7559:22:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2055534443207472616e7366657246726f6d20666f722065786368616e6765206661696c6564","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7629:46:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c77d5a563b6680470bb3bf944ade6bdcb6e242efde2c7524bfb416e13059f6c5","typeString":"literal_string \"Vault: USDC transferFrom for exchange failed\""},"value":"Vault: USDC transferFrom for exchange failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c77d5a563b6680470bb3bf944ade6bdcb6e242efde2c7524bfb416e13059f6c5","typeString":"literal_string \"Vault: USDC transferFrom for exchange failed\""}],"id":7796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7551:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7551:125:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7808,"nodeType":"ExpressionStatement","src":"7551:125:24"},{"expression":{"arguments":[{"id":7813,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"7874:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7814,"name":"sAssetAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"7886:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7810,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"7853:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7809,"name":"ISynthERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"7841:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISynthERC20_$7301_$","typeString":"type(contract ISynthERC20)"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISynthERC20_$7301","typeString":"contract ISynthERC20"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7869:4:24","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":7293,"src":"7841:32:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7816,"nodeType":"ExpressionStatement","src":"7841:64:24"},{"eventCall":{"arguments":[{"expression":{"id":7818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7943:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7947:6:24","memberName":"sender","nodeType":"MemberAccess","src":"7943:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7820,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"7955:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7821,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"7967:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7822,"name":"usdcAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"7983:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7823,"name":"sAssetAmountToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"8002:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7817,"name":"USDCToSAssetExchanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7921:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7921:100:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7825,"nodeType":"EmitStatement","src":"7916:105:24"}]},"functionSelector":"44ba2b24","id":7827,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7762,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"7139:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7763,"kind":"modifierInvocation","modifierName":{"id":7761,"name":"onlyRole","nameLocations":["7130:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7130:8:24"},"nodeType":"ModifierInvocation","src":"7130:19:24"}],"name":"exchangeUSDCToSAsset","nameLocation":"6719:20:24","nodeType":"FunctionDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"userWallet","nameLocation":"6757:10:24","nodeType":"VariableDeclaration","scope":7827,"src":"6749:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7752,"name":"address","nodeType":"ElementaryTypeName","src":"6749:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7755,"mutability":"mutable","name":"sAssetContract","nameLocation":"6840:14:24","nodeType":"VariableDeclaration","scope":7827,"src":"6832:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7754,"name":"address","nodeType":"ElementaryTypeName","src":"6832:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7757,"mutability":"mutable","name":"usdcAmountToSpend","nameLocation":"6929:17:24","nodeType":"VariableDeclaration","scope":7827,"src":"6921:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6921:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7759,"mutability":"mutable","name":"sAssetAmountToMint","nameLocation":"7020:18:24","nodeType":"VariableDeclaration","scope":7827,"src":"7012:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7758,"name":"uint256","nodeType":"ElementaryTypeName","src":"7012:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6739:381:24"},"returnParameters":{"id":7764,"nodeType":"ParameterList","parameters":[],"src":"7150:0:24"},"scope":8042,"src":"6710:1318:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7909,"nodeType":"Block","src":"8594:956:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7842,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"8612:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8626:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7843,"name":"address","nodeType":"ElementaryTypeName","src":"8626:7:24","typeDescriptions":{}}},"id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8626:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8612:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","id":7848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8638:28:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""},"value":"Vault: Invalid user wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b","typeString":"literal_string \"Vault: Invalid user wallet\""}],"id":7841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8604:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8604:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7850,"nodeType":"ExpressionStatement","src":"8604:63:24"},{"expression":{"arguments":[{"baseExpression":{"id":7852,"name":"isRegisteredSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"8685:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7854,"indexExpression":{"id":7853,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"8703:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8685:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2053796e7468206e6f742072656769737465726564","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8720:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""},"value":"Vault: Synth not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be","typeString":"literal_string \"Vault: Synth not registered\""}],"id":7851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8677:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7857,"nodeType":"ExpressionStatement","src":"8677:73:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7859,"name":"sAssetAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"8768:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8790:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8768:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2073415353455420616d6f756e74206d75737420626520706f736974697665","id":7862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8793:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6","typeString":"literal_string \"Vault: sASSET amount must be positive\""},"value":"Vault: sASSET amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6","typeString":"literal_string \"Vault: sASSET amount must be positive\""}],"id":7858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8760:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8760:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7864,"nodeType":"ExpressionStatement","src":"8760:73:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7866,"name":"usdcAmountToCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"8851:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8851:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a205553444320616d6f756e74206d75737420626520706f736974697665","id":7869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8875:37:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee","typeString":"literal_string \"Vault: USDC amount must be positive\""},"value":"Vault: USDC amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee","typeString":"literal_string \"Vault: USDC amount must be positive\""}],"id":7865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8843:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7871,"nodeType":"ExpressionStatement","src":"8843:70:24"},{"expression":{"arguments":[{"id":7876,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"9147:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7877,"name":"sAssetAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"9159:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7873,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"9122:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7872,"name":"ISynthERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"9110:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISynthERC20_$7301_$","typeString":"type(contract ISynthERC20)"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISynthERC20_$7301","typeString":"contract ISynthERC20"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9138:8:24","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":7300,"src":"9110:36:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7879,"nodeType":"ExpressionStatement","src":"9110:69:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7885,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9286:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7883,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:24","typeDescriptions":{}}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7881,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"9258:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9268:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"9258:19:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9258:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7888,"name":"usdcAmountToCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"9296:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9258:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e73756666696369656e74205553444320696e205661756c7420666f722065786368616e6765","id":7890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9316:48:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ab4ac0d14c19251246b94a3c1a5cb3035cb7649317d129358c0793b3f07cfbe","typeString":"literal_string \"Vault: Insufficient USDC in Vault for exchange\""},"value":"Vault: Insufficient USDC in Vault for exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ab4ac0d14c19251246b94a3c1a5cb3035cb7649317d129358c0793b3f07cfbe","typeString":"literal_string \"Vault: Insufficient USDC in Vault for exchange\""}],"id":7880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9250:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9250:115:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7892,"nodeType":"ExpressionStatement","src":"9250:115:24"},{"expression":{"arguments":[{"id":7896,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"9394:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7897,"name":"usdcAmountToCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"9406:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7893,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"9375:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9385:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"9375:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7899,"nodeType":"ExpressionStatement","src":"9375:50:24"},{"eventCall":{"arguments":[{"expression":{"id":7901,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9463:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9467:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9463:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7903,"name":"userWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"9475:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7904,"name":"sAssetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"9487:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7905,"name":"sAssetAmountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"9503:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7906,"name":"usdcAmountToCredit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"9524:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7900,"name":"SAssetToUSDCExchanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"9441:21:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:102:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7908,"nodeType":"EmitStatement","src":"9436:107:24"}]},"functionSelector":"3ab5ef82","id":7910,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7838,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"8583:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7839,"kind":"modifierInvocation","modifierName":{"id":7837,"name":"onlyRole","nameLocations":["8574:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8574:8:24"},"nodeType":"ModifierInvocation","src":"8574:19:24"}],"name":"exchangeSAssetToUSDC","nameLocation":"8153:20:24","nodeType":"FunctionDefinition","parameters":{"id":7836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"mutability":"mutable","name":"userWallet","nameLocation":"8191:10:24","nodeType":"VariableDeclaration","scope":7910,"src":"8183:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7828,"name":"address","nodeType":"ElementaryTypeName","src":"8183:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7831,"mutability":"mutable","name":"sAssetContract","nameLocation":"8274:14:24","nodeType":"VariableDeclaration","scope":7910,"src":"8266:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7830,"name":"address","nodeType":"ElementaryTypeName","src":"8266:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7833,"mutability":"mutable","name":"sAssetAmountToSpend","nameLocation":"8363:19:24","nodeType":"VariableDeclaration","scope":7910,"src":"8355:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7835,"mutability":"mutable","name":"usdcAmountToCredit","nameLocation":"8458:18:24","nodeType":"VariableDeclaration","scope":7910,"src":"8450:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8173:391:24"},"returnParameters":{"id":7840,"nodeType":"ParameterList","parameters":[],"src":"8594:0:24"},"scope":8042,"src":"8144:1406:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7940,"nodeType":"Block","src":"9675:192:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7919,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"9693:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9718:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9710:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7920,"name":"address","nodeType":"ElementaryTypeName","src":"9710:7:24","typeDescriptions":{}}},"id":7923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9710:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9693:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a205a65726f206164647265737320666f722073796e7468","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:31:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7479dc5e57938a430032e96d216888e5f1fdef822747fc2e260d2da3d0d36248","typeString":"literal_string \"Vault: Zero address for synth\""},"value":"Vault: Zero address for synth"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7479dc5e57938a430032e96d216888e5f1fdef822747fc2e260d2da3d0d36248","typeString":"literal_string \"Vault: Zero address for synth\""}],"id":7918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9685:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7927,"nodeType":"ExpressionStatement","src":"9685:69:24"},{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7928,"name":"isRegisteredSynth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"9764:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7930,"indexExpression":{"id":7929,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"9782:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9764:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9799:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9764:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7933,"nodeType":"ExpressionStatement","src":"9764:39:24"},{"eventCall":{"arguments":[{"expression":{"id":7935,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9834:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9838:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9834:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7937,"name":"synthContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"9846:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7934,"name":"SynthRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"9818:15:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9818:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7939,"nodeType":"EmitStatement","src":"9813:47:24"}]},"functionSelector":"ace5398a","id":7941,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7915,"name":"GATEWAY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"9661:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7916,"kind":"modifierInvocation","modifierName":{"id":7914,"name":"onlyRole","nameLocations":["9652:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9652:8:24"},"nodeType":"ModifierInvocation","src":"9652:22:24"}],"name":"registerSynth","nameLocation":"9606:13:24","nodeType":"FunctionDefinition","parameters":{"id":7913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7912,"mutability":"mutable","name":"synthContract","nameLocation":"9628:13:24","nodeType":"VariableDeclaration","scope":7941,"src":"9620:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7911,"name":"address","nodeType":"ElementaryTypeName","src":"9620:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9619:23:24"},"returnParameters":{"id":7917,"nodeType":"ParameterList","parameters":[],"src":"9675:0:24"},"scope":8042,"src":"9597:270:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7959,"nodeType":"Block","src":"9945:154:24","statements":[{"expression":{"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7949,"name":"totalFeesCollectedUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"9999:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7950,"name":"usdcFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"10025:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9999:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7952,"nodeType":"ExpressionStatement","src":"9999:39:24"},{"eventCall":{"arguments":[{"expression":{"id":7954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10066:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10070:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10066:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7956,"name":"usdcFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7943,"src":"10078:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7953,"name":"FeesRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"10053:12:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"EmitStatement","src":"10048:44:24"}]},"functionSelector":"d68ceed8","id":7960,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7946,"name":"CORE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"9934:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7947,"kind":"modifierInvocation","modifierName":{"id":7945,"name":"onlyRole","nameLocations":["9925:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9925:8:24"},"nodeType":"ModifierInvocation","src":"9925:19:24"}],"name":"recordFees","nameLocation":"9882:10:24","nodeType":"FunctionDefinition","parameters":{"id":7944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7943,"mutability":"mutable","name":"usdcFeeAmount","nameLocation":"9901:13:24","nodeType":"VariableDeclaration","scope":7960,"src":"9893:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7942,"name":"uint256","nodeType":"ElementaryTypeName","src":"9893:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9892:23:24"},"returnParameters":{"id":7948,"nodeType":"ParameterList","parameters":[],"src":"9945:0:24"},"scope":8042,"src":"9873:226:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8018,"nodeType":"Block","src":"10189:468:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"10207:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10221:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10213:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7972,"name":"address","nodeType":"ElementaryTypeName","src":"10213:7:24","typeDescriptions":{}}},"id":7975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10213:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a2046656520726563697069656e742063616e6e6f74206265207a65726f2061646472657373","id":7977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10225:45:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e116318237572736871ad69c58d3727eddf7d47b8ba25d88d8d7bf40a22ced23","typeString":"literal_string \"Vault: Fee recipient cannot be zero address\""},"value":"Vault: Fee recipient cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e116318237572736871ad69c58d3727eddf7d47b8ba25d88d8d7bf40a22ced23","typeString":"literal_string \"Vault: Fee recipient cannot be zero address\""}],"id":7970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10199:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10199:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7979,"nodeType":"ExpressionStatement","src":"10199:72:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7981,"name":"totalFeesCollectedUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"10289:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7982,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"10315:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10289:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e73756666696369656e7420636f6c6c65637465642066656573","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10327:36:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_185445a2dcbbbc5aa0bd1de088f6d94ab416775bdc4b3c651d5225f6541d0a3c","typeString":"literal_string \"Vault: Insufficient collected fees\""},"value":"Vault: Insufficient collected fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_185445a2dcbbbc5aa0bd1de088f6d94ab416775bdc4b3c651d5225f6541d0a3c","typeString":"literal_string \"Vault: Insufficient collected fees\""}],"id":7980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10281:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10281:83:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7986,"nodeType":"ExpressionStatement","src":"10281:83:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7992,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10410:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$8042","typeString":"contract Vault"}],"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10402:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7990,"name":"address","nodeType":"ElementaryTypeName","src":"10402:7:24","typeDescriptions":{}}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10402:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7988,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"10382:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10392:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"10382:19:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10382:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7995,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"10420:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10382:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c743a20496e73756666696369656e7420555344432062616c616e636520696e205661756c7420666f7220666565207769746864726177616c","id":7997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10432:62:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b56fdf35b0944b7abaa7cc0ff3f36aa6f21016d8094fdbdb06fd85b8d0f57f7","typeString":"literal_string \"Vault: Insufficient USDC balance in Vault for fee withdrawal\""},"value":"Vault: Insufficient USDC balance in Vault for fee withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b56fdf35b0944b7abaa7cc0ff3f36aa6f21016d8094fdbdb06fd85b8d0f57f7","typeString":"literal_string \"Vault: Insufficient USDC balance in Vault for fee withdrawal\""}],"id":7987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10374:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10374:121:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7999,"nodeType":"ExpressionStatement","src":"10374:121:24"},{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8000,"name":"totalFeesCollectedUSDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"10514:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8001,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"10540:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10514:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8003,"nodeType":"ExpressionStatement","src":"10514:36:24"},{"expression":{"arguments":[{"id":8007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"10579:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8008,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"10583:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8004,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"10560:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10570:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"10560:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10560:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8010,"nodeType":"ExpressionStatement","src":"10560:34:24"},{"eventCall":{"arguments":[{"expression":{"id":8012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10623:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10627:6:24","memberName":"sender","nodeType":"MemberAccess","src":"10623:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"10635:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8015,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"10639:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8011,"name":"FeesWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"10609:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10609:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"EmitStatement","src":"10604:46:24"}]},"functionSelector":"ad3b1b47","id":8019,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7967,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"10177:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7968,"kind":"modifierInvocation","modifierName":{"id":7966,"name":"onlyRole","nameLocations":["10168:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10168:8:24"},"nodeType":"ModifierInvocation","src":"10168:20:24"}],"name":"withdrawFees","nameLocation":"10114:12:24","nodeType":"FunctionDefinition","parameters":{"id":7965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7962,"mutability":"mutable","name":"to","nameLocation":"10135:2:24","nodeType":"VariableDeclaration","scope":8019,"src":"10127:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7961,"name":"address","nodeType":"ElementaryTypeName","src":"10127:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7964,"mutability":"mutable","name":"usdcAmount","nameLocation":"10147:10:24","nodeType":"VariableDeclaration","scope":8019,"src":"10139:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"10139:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10126:32:24"},"returnParameters":{"id":7969,"nodeType":"ParameterList","parameters":[],"src":"10189:0:24"},"scope":8042,"src":"10105:552:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8029,"nodeType":"Block","src":"10756:42:24","statements":[{"expression":{"arguments":[{"id":8026,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"10781:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1440","typeString":"contract IERC20"}],"id":8025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10773:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8024,"name":"address","nodeType":"ElementaryTypeName","src":"10773:7:24","typeDescriptions":{}}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10773:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8023,"id":8028,"nodeType":"Return","src":"10766:25:24"}]},"functionSelector":"0c8a95b2","id":8030,"implemented":true,"kind":"function","modifiers":[],"name":"getUSDCTokenAddress","nameLocation":"10702:19:24","nodeType":"FunctionDefinition","parameters":{"id":8020,"nodeType":"ParameterList","parameters":[],"src":"10721:2:24"},"returnParameters":{"id":8023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8030,"src":"10747:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8021,"name":"address","nodeType":"ElementaryTypeName","src":"10747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10746:9:24"},"scope":8042,"src":"10693:105:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8040,"nodeType":"Block","src":"10867:42:24","statements":[{"expression":{"arguments":[{"id":8037,"name":"cxptToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"10892:9:24","typeDescriptions":{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CXPTToken_$6929","typeString":"contract CXPTToken"}],"id":8036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8035,"name":"address","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10884:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8034,"id":8039,"nodeType":"Return","src":"10877:25:24"}]},"functionSelector":"0e8f61a7","id":8041,"implemented":true,"kind":"function","modifiers":[],"name":"getCXPTTokenAddress","nameLocation":"10813:19:24","nodeType":"FunctionDefinition","parameters":{"id":8031,"nodeType":"ParameterList","parameters":[],"src":"10832:2:24"},"returnParameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8041,"src":"10858:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8032,"name":"address","nodeType":"ElementaryTypeName","src":"10858:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10857:9:24"},"scope":8042,"src":"10804:105:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8043,"src":"775:10136:24","usedErrors":[305,308],"usedEvents":[317,326,335,7338,7346,7354,7360,7366,7374,7382,7392,7404,7416]}],"src":"32:10879:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb54d1b001fab4e6ed9fa6d70928ed13356913b0a63dcc56ac5d95c83de66136d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa06c427539f9298e0a8c3be712f876d6907eaeb03f2d8968d70b1cc798aecf\",\"dweb:/ipfs/QmdefyZfpkqWbBSUMtL8wXwoNJYeyAoKDMjTtxXRYbgj1f\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ecfcaf4d2d9353caabc4057d07a3749d5bfacbe7a3de0274d00123591096d4564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xCF 0xCA DELEGATECALL 0xD2 0xD9 CALLDATALOAD EXTCODECOPY 0xAA 0xBC BLOCKHASH JUMPI 0xD0 PUSH27 0x3749D5BFACBE7A3DE0274D00123591096D4564736F6C634300081C STOP CALLER ","sourceMap":"459:17878:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17878:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ecfcaf4d2d9353caabc4057d07a3749d5bfacbe7a3de0274d00123591096d4564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xCF 0xCA DELEGATECALL 0xD2 0xD9 CALLDATALOAD EXTCODECOPY 0xAA 0xBC BLOCKHASH JUMPI 0xD0 PUSH27 0x3749D5BFACBE7A3DE0274D00123591096D4564736F6C634300081C STOP CALLER ","sourceMap":"459:17878:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200de0828e703bb12a79cb0656511ba76866a8e7563645fb1ff1c61e5037afa91364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE0 DUP3 DUP15 PUSH17 0x3BB12A79CB0656511BA76866A8E7563645 0xFB 0x1F CALL 0xC6 0x1E POP CALLDATACOPY 0xAF 0xA9 SGT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"224:218:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200de0828e703bb12a79cb0656511ba76866a8e7563645fb1ff1c61e5037afa91364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xE0 DUP3 DUP15 PUSH17 0x3BB12A79CB0656511BA76866A8E7563645 0xFB 0x1F CALL 0xC6 0x1E POP CALLDATACOPY 0xAF 0xA9 SGT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"224:218:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206323b3c38c8e6729bd8e72de147c0dc86ff7a72372ef8fc819137a0c39781c9a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x23B3C38C DUP15 PUSH8 0x29BD8E72DE147C0D 0xC8 PUSH16 0xF7A72372EF8FC819137A0C39781C9A64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"1599:3723:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206323b3c38c8e6729bd8e72de147c0dc86ff7a72372ef8fc819137a0c39781c9a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x23B3C38C DUP15 PUSH8 0x29BD8E72DE147C0D 0xC8 PUSH16 0xF7A72372EF8FC819137A0C39781C9A64 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"1599:3723:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd02ad865f4d4d3506835bb24d0b42df1b76c7724b68b60d7e5678d28df83b7364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MUL 0xAD DUP7 PUSH0 0x4D 0x4D CALLDATALOAD MOD DUP4 JUMPDEST 0xB2 0x4D SIGNEXTEND TIMESTAMP 0xDF SHL PUSH23 0xC7724B68B60D7E5678D28DF83B7364736F6C634300081C STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd02ad865f4d4d3506835bb24d0b42df1b76c7724b68b60d7e5678d28df83b7364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MUL 0xAD DUP7 PUSH0 0x4D 0x4D CALLDATALOAD MOD DUP4 JUMPDEST 0xB2 0x4D SIGNEXTEND TIMESTAMP 0xDF SHL PUSH23 0xC7724B68B60D7E5678D28DF83B7364736F6C634300081C STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d357b7988090f8afe0fbd0caa286f7d61ad4250e90c459117378d6b6584c4dc64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 CALLDATALOAD PUSH28 0x7988090F8AFE0FBD0CAA286F7D61AD4250E90C459117378D6B6584C4 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1425:13298:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1425:13298:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d357b7988090f8afe0fbd0caa286f7d61ad4250e90c459117378d6b6584c4dc64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 CALLDATALOAD PUSH28 0x7988090F8AFE0FBD0CAA286F7D61AD4250E90C459117378D6B6584C4 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1425:13298:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. - Set can be cleared (all elements removed) in O(n). ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]}},\"version\":1}"}},"contracts/CXPTToken.sol":{"CXPTToken":{"abi":[{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6912":{"entryPoint":null,"id":6912,"parameterSlots":1,"returnSlots":0},"@_899":{"entryPoint":null,"id":899,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":208,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":384,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":512,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":591,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":454,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":432,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2947:25","nodeType":"YulBlock","src":"0:2947:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"95:209:25","nodeType":"YulBlock","src":"95:209:25","statements":[{"body":{"nativeSrc":"141:16:25","nodeType":"YulBlock","src":"141:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:25","nodeType":"YulLiteral","src":"150:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:25","nodeType":"YulLiteral","src":"153:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:25","nodeType":"YulIdentifier","src":"143:6:25"},"nativeSrc":"143:12:25","nodeType":"YulFunctionCall","src":"143:12:25"},"nativeSrc":"143:12:25","nodeType":"YulExpressionStatement","src":"143:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:25","nodeType":"YulIdentifier","src":"116:7:25"},{"name":"headStart","nativeSrc":"125:9:25","nodeType":"YulIdentifier","src":"125:9:25"}],"functionName":{"name":"sub","nativeSrc":"112:3:25","nodeType":"YulIdentifier","src":"112:3:25"},"nativeSrc":"112:23:25","nodeType":"YulFunctionCall","src":"112:23:25"},{"kind":"number","nativeSrc":"137:2:25","nodeType":"YulLiteral","src":"137:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:25","nodeType":"YulIdentifier","src":"108:3:25"},"nativeSrc":"108:32:25","nodeType":"YulFunctionCall","src":"108:32:25"},"nativeSrc":"105:52:25","nodeType":"YulIf","src":"105:52:25"},{"nativeSrc":"166:29:25","nodeType":"YulVariableDeclaration","src":"166:29:25","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:25","nodeType":"YulIdentifier","src":"185:9:25"}],"functionName":{"name":"mload","nativeSrc":"179:5:25","nodeType":"YulIdentifier","src":"179:5:25"},"nativeSrc":"179:16:25","nodeType":"YulFunctionCall","src":"179:16:25"},"variables":[{"name":"value","nativeSrc":"170:5:25","nodeType":"YulTypedName","src":"170:5:25","type":""}]},{"body":{"nativeSrc":"258:16:25","nodeType":"YulBlock","src":"258:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:25","nodeType":"YulLiteral","src":"267:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:25","nodeType":"YulLiteral","src":"270:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:25","nodeType":"YulIdentifier","src":"260:6:25"},"nativeSrc":"260:12:25","nodeType":"YulFunctionCall","src":"260:12:25"},"nativeSrc":"260:12:25","nodeType":"YulExpressionStatement","src":"260:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:25","nodeType":"YulIdentifier","src":"217:5:25"},{"arguments":[{"name":"value","nativeSrc":"228:5:25","nodeType":"YulIdentifier","src":"228:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:25","nodeType":"YulLiteral","src":"243:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:25","nodeType":"YulLiteral","src":"248:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:25","nodeType":"YulIdentifier","src":"239:3:25"},"nativeSrc":"239:11:25","nodeType":"YulFunctionCall","src":"239:11:25"},{"kind":"number","nativeSrc":"252:1:25","nodeType":"YulLiteral","src":"252:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:25","nodeType":"YulIdentifier","src":"235:3:25"},"nativeSrc":"235:19:25","nodeType":"YulFunctionCall","src":"235:19:25"}],"functionName":{"name":"and","nativeSrc":"224:3:25","nodeType":"YulIdentifier","src":"224:3:25"},"nativeSrc":"224:31:25","nodeType":"YulFunctionCall","src":"224:31:25"}],"functionName":{"name":"eq","nativeSrc":"214:2:25","nodeType":"YulIdentifier","src":"214:2:25"},"nativeSrc":"214:42:25","nodeType":"YulFunctionCall","src":"214:42:25"}],"functionName":{"name":"iszero","nativeSrc":"207:6:25","nodeType":"YulIdentifier","src":"207:6:25"},"nativeSrc":"207:50:25","nodeType":"YulFunctionCall","src":"207:50:25"},"nativeSrc":"204:70:25","nodeType":"YulIf","src":"204:70:25"},{"nativeSrc":"283:15:25","nodeType":"YulAssignment","src":"283:15:25","value":{"name":"value","nativeSrc":"293:5:25","nodeType":"YulIdentifier","src":"293:5:25"},"variableNames":[{"name":"value0","nativeSrc":"283:6:25","nodeType":"YulIdentifier","src":"283:6:25"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:25","nodeType":"YulTypedName","src":"61:9:25","type":""},{"name":"dataEnd","nativeSrc":"72:7:25","nodeType":"YulTypedName","src":"72:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:25","nodeType":"YulTypedName","src":"84:6:25","type":""}],"src":"14:290:25"},{"body":{"nativeSrc":"341:95:25","nodeType":"YulBlock","src":"341:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"358:1:25","nodeType":"YulLiteral","src":"358:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"365:3:25","nodeType":"YulLiteral","src":"365:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"370:10:25","nodeType":"YulLiteral","src":"370:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"361:3:25","nodeType":"YulIdentifier","src":"361:3:25"},"nativeSrc":"361:20:25","nodeType":"YulFunctionCall","src":"361:20:25"}],"functionName":{"name":"mstore","nativeSrc":"351:6:25","nodeType":"YulIdentifier","src":"351:6:25"},"nativeSrc":"351:31:25","nodeType":"YulFunctionCall","src":"351:31:25"},"nativeSrc":"351:31:25","nodeType":"YulExpressionStatement","src":"351:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"398:1:25","nodeType":"YulLiteral","src":"398:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"401:4:25","nodeType":"YulLiteral","src":"401:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"391:6:25","nodeType":"YulIdentifier","src":"391:6:25"},"nativeSrc":"391:15:25","nodeType":"YulFunctionCall","src":"391:15:25"},"nativeSrc":"391:15:25","nodeType":"YulExpressionStatement","src":"391:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"422:1:25","nodeType":"YulLiteral","src":"422:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"425:4:25","nodeType":"YulLiteral","src":"425:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"415:6:25","nodeType":"YulIdentifier","src":"415:6:25"},"nativeSrc":"415:15:25","nodeType":"YulFunctionCall","src":"415:15:25"},"nativeSrc":"415:15:25","nodeType":"YulExpressionStatement","src":"415:15:25"}]},"name":"panic_error_0x41","nativeSrc":"309:127:25","nodeType":"YulFunctionDefinition","src":"309:127:25"},{"body":{"nativeSrc":"496:325:25","nodeType":"YulBlock","src":"496:325:25","statements":[{"nativeSrc":"506:22:25","nodeType":"YulAssignment","src":"506:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"520:1:25","nodeType":"YulLiteral","src":"520:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"523:4:25","nodeType":"YulIdentifier","src":"523:4:25"}],"functionName":{"name":"shr","nativeSrc":"516:3:25","nodeType":"YulIdentifier","src":"516:3:25"},"nativeSrc":"516:12:25","nodeType":"YulFunctionCall","src":"516:12:25"},"variableNames":[{"name":"length","nativeSrc":"506:6:25","nodeType":"YulIdentifier","src":"506:6:25"}]},{"nativeSrc":"537:38:25","nodeType":"YulVariableDeclaration","src":"537:38:25","value":{"arguments":[{"name":"data","nativeSrc":"567:4:25","nodeType":"YulIdentifier","src":"567:4:25"},{"kind":"number","nativeSrc":"573:1:25","nodeType":"YulLiteral","src":"573:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"563:3:25","nodeType":"YulIdentifier","src":"563:3:25"},"nativeSrc":"563:12:25","nodeType":"YulFunctionCall","src":"563:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"541:18:25","nodeType":"YulTypedName","src":"541:18:25","type":""}]},{"body":{"nativeSrc":"614:31:25","nodeType":"YulBlock","src":"614:31:25","statements":[{"nativeSrc":"616:27:25","nodeType":"YulAssignment","src":"616:27:25","value":{"arguments":[{"name":"length","nativeSrc":"630:6:25","nodeType":"YulIdentifier","src":"630:6:25"},{"kind":"number","nativeSrc":"638:4:25","nodeType":"YulLiteral","src":"638:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"626:3:25","nodeType":"YulIdentifier","src":"626:3:25"},"nativeSrc":"626:17:25","nodeType":"YulFunctionCall","src":"626:17:25"},"variableNames":[{"name":"length","nativeSrc":"616:6:25","nodeType":"YulIdentifier","src":"616:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"594:18:25","nodeType":"YulIdentifier","src":"594:18:25"}],"functionName":{"name":"iszero","nativeSrc":"587:6:25","nodeType":"YulIdentifier","src":"587:6:25"},"nativeSrc":"587:26:25","nodeType":"YulFunctionCall","src":"587:26:25"},"nativeSrc":"584:61:25","nodeType":"YulIf","src":"584:61:25"},{"body":{"nativeSrc":"704:111:25","nodeType":"YulBlock","src":"704:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"725:1:25","nodeType":"YulLiteral","src":"725:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"732:3:25","nodeType":"YulLiteral","src":"732:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"737:10:25","nodeType":"YulLiteral","src":"737:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"728:3:25","nodeType":"YulIdentifier","src":"728:3:25"},"nativeSrc":"728:20:25","nodeType":"YulFunctionCall","src":"728:20:25"}],"functionName":{"name":"mstore","nativeSrc":"718:6:25","nodeType":"YulIdentifier","src":"718:6:25"},"nativeSrc":"718:31:25","nodeType":"YulFunctionCall","src":"718:31:25"},"nativeSrc":"718:31:25","nodeType":"YulExpressionStatement","src":"718:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:25","nodeType":"YulLiteral","src":"769:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"772:4:25","nodeType":"YulLiteral","src":"772:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"762:6:25","nodeType":"YulIdentifier","src":"762:6:25"},"nativeSrc":"762:15:25","nodeType":"YulFunctionCall","src":"762:15:25"},"nativeSrc":"762:15:25","nodeType":"YulExpressionStatement","src":"762:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:25","nodeType":"YulLiteral","src":"797:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"800:4:25","nodeType":"YulLiteral","src":"800:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"790:6:25","nodeType":"YulIdentifier","src":"790:6:25"},"nativeSrc":"790:15:25","nodeType":"YulFunctionCall","src":"790:15:25"},"nativeSrc":"790:15:25","nodeType":"YulExpressionStatement","src":"790:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"660:18:25","nodeType":"YulIdentifier","src":"660:18:25"},{"arguments":[{"name":"length","nativeSrc":"683:6:25","nodeType":"YulIdentifier","src":"683:6:25"},{"kind":"number","nativeSrc":"691:2:25","nodeType":"YulLiteral","src":"691:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"680:2:25","nodeType":"YulIdentifier","src":"680:2:25"},"nativeSrc":"680:14:25","nodeType":"YulFunctionCall","src":"680:14:25"}],"functionName":{"name":"eq","nativeSrc":"657:2:25","nodeType":"YulIdentifier","src":"657:2:25"},"nativeSrc":"657:38:25","nodeType":"YulFunctionCall","src":"657:38:25"},"nativeSrc":"654:161:25","nodeType":"YulIf","src":"654:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"441:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"476:4:25","nodeType":"YulTypedName","src":"476:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"485:6:25","nodeType":"YulTypedName","src":"485:6:25","type":""}],"src":"441:380:25"},{"body":{"nativeSrc":"882:65:25","nodeType":"YulBlock","src":"882:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"899:1:25","nodeType":"YulLiteral","src":"899:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"902:3:25","nodeType":"YulIdentifier","src":"902:3:25"}],"functionName":{"name":"mstore","nativeSrc":"892:6:25","nodeType":"YulIdentifier","src":"892:6:25"},"nativeSrc":"892:14:25","nodeType":"YulFunctionCall","src":"892:14:25"},"nativeSrc":"892:14:25","nodeType":"YulExpressionStatement","src":"892:14:25"},{"nativeSrc":"915:26:25","nodeType":"YulAssignment","src":"915:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"933:1:25","nodeType":"YulLiteral","src":"933:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"936:4:25","nodeType":"YulLiteral","src":"936:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"923:9:25","nodeType":"YulIdentifier","src":"923:9:25"},"nativeSrc":"923:18:25","nodeType":"YulFunctionCall","src":"923:18:25"},"variableNames":[{"name":"data","nativeSrc":"915:4:25","nodeType":"YulIdentifier","src":"915:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"826:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"865:3:25","nodeType":"YulTypedName","src":"865:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"873:4:25","nodeType":"YulTypedName","src":"873:4:25","type":""}],"src":"826:121:25"},{"body":{"nativeSrc":"1033:437:25","nodeType":"YulBlock","src":"1033:437:25","statements":[{"body":{"nativeSrc":"1066:398:25","nodeType":"YulBlock","src":"1066:398:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:25","nodeType":"YulLiteral","src":"1087:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"1090:5:25","nodeType":"YulIdentifier","src":"1090:5:25"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:25","nodeType":"YulIdentifier","src":"1080:6:25"},"nativeSrc":"1080:16:25","nodeType":"YulFunctionCall","src":"1080:16:25"},"nativeSrc":"1080:16:25","nodeType":"YulExpressionStatement","src":"1080:16:25"},{"nativeSrc":"1109:30:25","nodeType":"YulVariableDeclaration","src":"1109:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"1131:1:25","nodeType":"YulLiteral","src":"1131:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1134:4:25","nodeType":"YulLiteral","src":"1134:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1121:9:25","nodeType":"YulIdentifier","src":"1121:9:25"},"nativeSrc":"1121:18:25","nodeType":"YulFunctionCall","src":"1121:18:25"},"variables":[{"name":"data","nativeSrc":"1113:4:25","nodeType":"YulTypedName","src":"1113:4:25","type":""}]},{"nativeSrc":"1152:57:25","nodeType":"YulVariableDeclaration","src":"1152:57:25","value":{"arguments":[{"name":"data","nativeSrc":"1175:4:25","nodeType":"YulIdentifier","src":"1175:4:25"},{"arguments":[{"kind":"number","nativeSrc":"1185:1:25","nodeType":"YulLiteral","src":"1185:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1192:10:25","nodeType":"YulIdentifier","src":"1192:10:25"},{"kind":"number","nativeSrc":"1204:2:25","nodeType":"YulLiteral","src":"1204:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1188:3:25","nodeType":"YulIdentifier","src":"1188:3:25"},"nativeSrc":"1188:19:25","nodeType":"YulFunctionCall","src":"1188:19:25"}],"functionName":{"name":"shr","nativeSrc":"1181:3:25","nodeType":"YulIdentifier","src":"1181:3:25"},"nativeSrc":"1181:27:25","nodeType":"YulFunctionCall","src":"1181:27:25"}],"functionName":{"name":"add","nativeSrc":"1171:3:25","nodeType":"YulIdentifier","src":"1171:3:25"},"nativeSrc":"1171:38:25","nodeType":"YulFunctionCall","src":"1171:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"1156:11:25","nodeType":"YulTypedName","src":"1156:11:25","type":""}]},{"body":{"nativeSrc":"1246:23:25","nodeType":"YulBlock","src":"1246:23:25","statements":[{"nativeSrc":"1248:19:25","nodeType":"YulAssignment","src":"1248:19:25","value":{"name":"data","nativeSrc":"1263:4:25","nodeType":"YulIdentifier","src":"1263:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"1248:11:25","nodeType":"YulIdentifier","src":"1248:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1228:10:25","nodeType":"YulIdentifier","src":"1228:10:25"},{"kind":"number","nativeSrc":"1240:4:25","nodeType":"YulLiteral","src":"1240:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1225:2:25","nodeType":"YulIdentifier","src":"1225:2:25"},"nativeSrc":"1225:20:25","nodeType":"YulFunctionCall","src":"1225:20:25"},"nativeSrc":"1222:47:25","nodeType":"YulIf","src":"1222:47:25"},{"nativeSrc":"1282:41:25","nodeType":"YulVariableDeclaration","src":"1282:41:25","value":{"arguments":[{"name":"data","nativeSrc":"1296:4:25","nodeType":"YulIdentifier","src":"1296:4:25"},{"arguments":[{"kind":"number","nativeSrc":"1306:1:25","nodeType":"YulLiteral","src":"1306:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1313:3:25","nodeType":"YulIdentifier","src":"1313:3:25"},{"kind":"number","nativeSrc":"1318:2:25","nodeType":"YulLiteral","src":"1318:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1309:3:25","nodeType":"YulIdentifier","src":"1309:3:25"},"nativeSrc":"1309:12:25","nodeType":"YulFunctionCall","src":"1309:12:25"}],"functionName":{"name":"shr","nativeSrc":"1302:3:25","nodeType":"YulIdentifier","src":"1302:3:25"},"nativeSrc":"1302:20:25","nodeType":"YulFunctionCall","src":"1302:20:25"}],"functionName":{"name":"add","nativeSrc":"1292:3:25","nodeType":"YulIdentifier","src":"1292:3:25"},"nativeSrc":"1292:31:25","nodeType":"YulFunctionCall","src":"1292:31:25"},"variables":[{"name":"_1","nativeSrc":"1286:2:25","nodeType":"YulTypedName","src":"1286:2:25","type":""}]},{"nativeSrc":"1336:24:25","nodeType":"YulVariableDeclaration","src":"1336:24:25","value":{"name":"deleteStart","nativeSrc":"1349:11:25","nodeType":"YulIdentifier","src":"1349:11:25"},"variables":[{"name":"start","nativeSrc":"1340:5:25","nodeType":"YulTypedName","src":"1340:5:25","type":""}]},{"body":{"nativeSrc":"1434:20:25","nodeType":"YulBlock","src":"1434:20:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1443:5:25","nodeType":"YulIdentifier","src":"1443:5:25"},{"kind":"number","nativeSrc":"1450:1:25","nodeType":"YulLiteral","src":"1450:1:25","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1436:6:25","nodeType":"YulIdentifier","src":"1436:6:25"},"nativeSrc":"1436:16:25","nodeType":"YulFunctionCall","src":"1436:16:25"},"nativeSrc":"1436:16:25","nodeType":"YulExpressionStatement","src":"1436:16:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1384:5:25","nodeType":"YulIdentifier","src":"1384:5:25"},{"name":"_1","nativeSrc":"1391:2:25","nodeType":"YulIdentifier","src":"1391:2:25"}],"functionName":{"name":"lt","nativeSrc":"1381:2:25","nodeType":"YulIdentifier","src":"1381:2:25"},"nativeSrc":"1381:13:25","nodeType":"YulFunctionCall","src":"1381:13:25"},"nativeSrc":"1373:81:25","nodeType":"YulForLoop","post":{"nativeSrc":"1395:26:25","nodeType":"YulBlock","src":"1395:26:25","statements":[{"nativeSrc":"1397:22:25","nodeType":"YulAssignment","src":"1397:22:25","value":{"arguments":[{"name":"start","nativeSrc":"1410:5:25","nodeType":"YulIdentifier","src":"1410:5:25"},{"kind":"number","nativeSrc":"1417:1:25","nodeType":"YulLiteral","src":"1417:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1406:3:25","nodeType":"YulIdentifier","src":"1406:3:25"},"nativeSrc":"1406:13:25","nodeType":"YulFunctionCall","src":"1406:13:25"},"variableNames":[{"name":"start","nativeSrc":"1397:5:25","nodeType":"YulIdentifier","src":"1397:5:25"}]}]},"pre":{"nativeSrc":"1377:3:25","nodeType":"YulBlock","src":"1377:3:25","statements":[]},"src":"1373:81:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1049:3:25","nodeType":"YulIdentifier","src":"1049:3:25"},{"kind":"number","nativeSrc":"1054:2:25","nodeType":"YulLiteral","src":"1054:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1046:2:25","nodeType":"YulIdentifier","src":"1046:2:25"},"nativeSrc":"1046:11:25","nodeType":"YulFunctionCall","src":"1046:11:25"},"nativeSrc":"1043:421:25","nodeType":"YulIf","src":"1043:421:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"952:518:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1005:5:25","nodeType":"YulTypedName","src":"1005:5:25","type":""},{"name":"len","nativeSrc":"1012:3:25","nodeType":"YulTypedName","src":"1012:3:25","type":""},{"name":"startIndex","nativeSrc":"1017:10:25","nodeType":"YulTypedName","src":"1017:10:25","type":""}],"src":"952:518:25"},{"body":{"nativeSrc":"1560:81:25","nodeType":"YulBlock","src":"1560:81:25","statements":[{"nativeSrc":"1570:65:25","nodeType":"YulAssignment","src":"1570:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1585:4:25","nodeType":"YulIdentifier","src":"1585:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:1:25","nodeType":"YulLiteral","src":"1603:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"1606:3:25","nodeType":"YulIdentifier","src":"1606:3:25"}],"functionName":{"name":"shl","nativeSrc":"1599:3:25","nodeType":"YulIdentifier","src":"1599:3:25"},"nativeSrc":"1599:11:25","nodeType":"YulFunctionCall","src":"1599:11:25"},{"arguments":[{"kind":"number","nativeSrc":"1616:1:25","nodeType":"YulLiteral","src":"1616:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1612:3:25","nodeType":"YulIdentifier","src":"1612:3:25"},"nativeSrc":"1612:6:25","nodeType":"YulFunctionCall","src":"1612:6:25"}],"functionName":{"name":"shr","nativeSrc":"1595:3:25","nodeType":"YulIdentifier","src":"1595:3:25"},"nativeSrc":"1595:24:25","nodeType":"YulFunctionCall","src":"1595:24:25"}],"functionName":{"name":"not","nativeSrc":"1591:3:25","nodeType":"YulIdentifier","src":"1591:3:25"},"nativeSrc":"1591:29:25","nodeType":"YulFunctionCall","src":"1591:29:25"}],"functionName":{"name":"and","nativeSrc":"1581:3:25","nodeType":"YulIdentifier","src":"1581:3:25"},"nativeSrc":"1581:40:25","nodeType":"YulFunctionCall","src":"1581:40:25"},{"arguments":[{"kind":"number","nativeSrc":"1627:1:25","nodeType":"YulLiteral","src":"1627:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"1630:3:25","nodeType":"YulIdentifier","src":"1630:3:25"}],"functionName":{"name":"shl","nativeSrc":"1623:3:25","nodeType":"YulIdentifier","src":"1623:3:25"},"nativeSrc":"1623:11:25","nodeType":"YulFunctionCall","src":"1623:11:25"}],"functionName":{"name":"or","nativeSrc":"1578:2:25","nodeType":"YulIdentifier","src":"1578:2:25"},"nativeSrc":"1578:57:25","nodeType":"YulFunctionCall","src":"1578:57:25"},"variableNames":[{"name":"used","nativeSrc":"1570:4:25","nodeType":"YulIdentifier","src":"1570:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1475:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1537:4:25","nodeType":"YulTypedName","src":"1537:4:25","type":""},{"name":"len","nativeSrc":"1543:3:25","nodeType":"YulTypedName","src":"1543:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1551:4:25","nodeType":"YulTypedName","src":"1551:4:25","type":""}],"src":"1475:166:25"},{"body":{"nativeSrc":"1742:1203:25","nodeType":"YulBlock","src":"1742:1203:25","statements":[{"nativeSrc":"1752:24:25","nodeType":"YulVariableDeclaration","src":"1752:24:25","value":{"arguments":[{"name":"src","nativeSrc":"1772:3:25","nodeType":"YulIdentifier","src":"1772:3:25"}],"functionName":{"name":"mload","nativeSrc":"1766:5:25","nodeType":"YulIdentifier","src":"1766:5:25"},"nativeSrc":"1766:10:25","nodeType":"YulFunctionCall","src":"1766:10:25"},"variables":[{"name":"newLen","nativeSrc":"1756:6:25","nodeType":"YulTypedName","src":"1756:6:25","type":""}]},{"body":{"nativeSrc":"1819:22:25","nodeType":"YulBlock","src":"1819:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1821:16:25","nodeType":"YulIdentifier","src":"1821:16:25"},"nativeSrc":"1821:18:25","nodeType":"YulFunctionCall","src":"1821:18:25"},"nativeSrc":"1821:18:25","nodeType":"YulExpressionStatement","src":"1821:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1791:6:25","nodeType":"YulIdentifier","src":"1791:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1807:2:25","nodeType":"YulLiteral","src":"1807:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"1811:1:25","nodeType":"YulLiteral","src":"1811:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1803:3:25","nodeType":"YulIdentifier","src":"1803:3:25"},"nativeSrc":"1803:10:25","nodeType":"YulFunctionCall","src":"1803:10:25"},{"kind":"number","nativeSrc":"1815:1:25","nodeType":"YulLiteral","src":"1815:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1799:3:25","nodeType":"YulIdentifier","src":"1799:3:25"},"nativeSrc":"1799:18:25","nodeType":"YulFunctionCall","src":"1799:18:25"}],"functionName":{"name":"gt","nativeSrc":"1788:2:25","nodeType":"YulIdentifier","src":"1788:2:25"},"nativeSrc":"1788:30:25","nodeType":"YulFunctionCall","src":"1788:30:25"},"nativeSrc":"1785:56:25","nodeType":"YulIf","src":"1785:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1894:4:25","nodeType":"YulIdentifier","src":"1894:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1932:4:25","nodeType":"YulIdentifier","src":"1932:4:25"}],"functionName":{"name":"sload","nativeSrc":"1926:5:25","nodeType":"YulIdentifier","src":"1926:5:25"},"nativeSrc":"1926:11:25","nodeType":"YulFunctionCall","src":"1926:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1900:25:25","nodeType":"YulIdentifier","src":"1900:25:25"},"nativeSrc":"1900:38:25","nodeType":"YulFunctionCall","src":"1900:38:25"},{"name":"newLen","nativeSrc":"1940:6:25","nodeType":"YulIdentifier","src":"1940:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1850:43:25","nodeType":"YulIdentifier","src":"1850:43:25"},"nativeSrc":"1850:97:25","nodeType":"YulFunctionCall","src":"1850:97:25"},"nativeSrc":"1850:97:25","nodeType":"YulExpressionStatement","src":"1850:97:25"},{"nativeSrc":"1956:18:25","nodeType":"YulVariableDeclaration","src":"1956:18:25","value":{"kind":"number","nativeSrc":"1973:1:25","nodeType":"YulLiteral","src":"1973:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1960:9:25","nodeType":"YulTypedName","src":"1960:9:25","type":""}]},{"nativeSrc":"1983:17:25","nodeType":"YulAssignment","src":"1983:17:25","value":{"kind":"number","nativeSrc":"1996:4:25","nodeType":"YulLiteral","src":"1996:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1983:9:25","nodeType":"YulIdentifier","src":"1983:9:25"}]},{"cases":[{"body":{"nativeSrc":"2046:642:25","nodeType":"YulBlock","src":"2046:642:25","statements":[{"nativeSrc":"2060:35:25","nodeType":"YulVariableDeclaration","src":"2060:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"2079:6:25","nodeType":"YulIdentifier","src":"2079:6:25"},{"arguments":[{"kind":"number","nativeSrc":"2091:2:25","nodeType":"YulLiteral","src":"2091:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2087:3:25","nodeType":"YulIdentifier","src":"2087:3:25"},"nativeSrc":"2087:7:25","nodeType":"YulFunctionCall","src":"2087:7:25"}],"functionName":{"name":"and","nativeSrc":"2075:3:25","nodeType":"YulIdentifier","src":"2075:3:25"},"nativeSrc":"2075:20:25","nodeType":"YulFunctionCall","src":"2075:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"2064:7:25","nodeType":"YulTypedName","src":"2064:7:25","type":""}]},{"nativeSrc":"2108:49:25","nodeType":"YulVariableDeclaration","src":"2108:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"2152:4:25","nodeType":"YulIdentifier","src":"2152:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2122:29:25","nodeType":"YulIdentifier","src":"2122:29:25"},"nativeSrc":"2122:35:25","nodeType":"YulFunctionCall","src":"2122:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"2112:6:25","nodeType":"YulTypedName","src":"2112:6:25","type":""}]},{"nativeSrc":"2170:10:25","nodeType":"YulVariableDeclaration","src":"2170:10:25","value":{"kind":"number","nativeSrc":"2179:1:25","nodeType":"YulLiteral","src":"2179:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2174:1:25","nodeType":"YulTypedName","src":"2174:1:25","type":""}]},{"body":{"nativeSrc":"2250:165:25","nodeType":"YulBlock","src":"2250:165:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2275:6:25","nodeType":"YulIdentifier","src":"2275:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2293:3:25","nodeType":"YulIdentifier","src":"2293:3:25"},{"name":"srcOffset","nativeSrc":"2298:9:25","nodeType":"YulIdentifier","src":"2298:9:25"}],"functionName":{"name":"add","nativeSrc":"2289:3:25","nodeType":"YulIdentifier","src":"2289:3:25"},"nativeSrc":"2289:19:25","nodeType":"YulFunctionCall","src":"2289:19:25"}],"functionName":{"name":"mload","nativeSrc":"2283:5:25","nodeType":"YulIdentifier","src":"2283:5:25"},"nativeSrc":"2283:26:25","nodeType":"YulFunctionCall","src":"2283:26:25"}],"functionName":{"name":"sstore","nativeSrc":"2268:6:25","nodeType":"YulIdentifier","src":"2268:6:25"},"nativeSrc":"2268:42:25","nodeType":"YulFunctionCall","src":"2268:42:25"},"nativeSrc":"2268:42:25","nodeType":"YulExpressionStatement","src":"2268:42:25"},{"nativeSrc":"2327:24:25","nodeType":"YulAssignment","src":"2327:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2341:6:25","nodeType":"YulIdentifier","src":"2341:6:25"},{"kind":"number","nativeSrc":"2349:1:25","nodeType":"YulLiteral","src":"2349:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2337:3:25","nodeType":"YulIdentifier","src":"2337:3:25"},"nativeSrc":"2337:14:25","nodeType":"YulFunctionCall","src":"2337:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"2327:6:25","nodeType":"YulIdentifier","src":"2327:6:25"}]},{"nativeSrc":"2368:33:25","nodeType":"YulAssignment","src":"2368:33:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2385:9:25","nodeType":"YulIdentifier","src":"2385:9:25"},{"kind":"number","nativeSrc":"2396:4:25","nodeType":"YulLiteral","src":"2396:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2381:3:25","nodeType":"YulIdentifier","src":"2381:3:25"},"nativeSrc":"2381:20:25","nodeType":"YulFunctionCall","src":"2381:20:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"2368:9:25","nodeType":"YulIdentifier","src":"2368:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2204:1:25","nodeType":"YulIdentifier","src":"2204:1:25"},{"name":"loopEnd","nativeSrc":"2207:7:25","nodeType":"YulIdentifier","src":"2207:7:25"}],"functionName":{"name":"lt","nativeSrc":"2201:2:25","nodeType":"YulIdentifier","src":"2201:2:25"},"nativeSrc":"2201:14:25","nodeType":"YulFunctionCall","src":"2201:14:25"},"nativeSrc":"2193:222:25","nodeType":"YulForLoop","post":{"nativeSrc":"2216:21:25","nodeType":"YulBlock","src":"2216:21:25","statements":[{"nativeSrc":"2218:17:25","nodeType":"YulAssignment","src":"2218:17:25","value":{"arguments":[{"name":"i","nativeSrc":"2227:1:25","nodeType":"YulIdentifier","src":"2227:1:25"},{"kind":"number","nativeSrc":"2230:4:25","nodeType":"YulLiteral","src":"2230:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2223:3:25","nodeType":"YulIdentifier","src":"2223:3:25"},"nativeSrc":"2223:12:25","nodeType":"YulFunctionCall","src":"2223:12:25"},"variableNames":[{"name":"i","nativeSrc":"2218:1:25","nodeType":"YulIdentifier","src":"2218:1:25"}]}]},"pre":{"nativeSrc":"2197:3:25","nodeType":"YulBlock","src":"2197:3:25","statements":[]},"src":"2193:222:25"},{"body":{"nativeSrc":"2463:166:25","nodeType":"YulBlock","src":"2463:166:25","statements":[{"nativeSrc":"2481:43:25","nodeType":"YulVariableDeclaration","src":"2481:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2508:3:25","nodeType":"YulIdentifier","src":"2508:3:25"},{"name":"srcOffset","nativeSrc":"2513:9:25","nodeType":"YulIdentifier","src":"2513:9:25"}],"functionName":{"name":"add","nativeSrc":"2504:3:25","nodeType":"YulIdentifier","src":"2504:3:25"},"nativeSrc":"2504:19:25","nodeType":"YulFunctionCall","src":"2504:19:25"}],"functionName":{"name":"mload","nativeSrc":"2498:5:25","nodeType":"YulIdentifier","src":"2498:5:25"},"nativeSrc":"2498:26:25","nodeType":"YulFunctionCall","src":"2498:26:25"},"variables":[{"name":"lastValue","nativeSrc":"2485:9:25","nodeType":"YulTypedName","src":"2485:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2548:6:25","nodeType":"YulIdentifier","src":"2548:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"2560:9:25","nodeType":"YulIdentifier","src":"2560:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2587:1:25","nodeType":"YulLiteral","src":"2587:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"2590:6:25","nodeType":"YulIdentifier","src":"2590:6:25"}],"functionName":{"name":"shl","nativeSrc":"2583:3:25","nodeType":"YulIdentifier","src":"2583:3:25"},"nativeSrc":"2583:14:25","nodeType":"YulFunctionCall","src":"2583:14:25"},{"kind":"number","nativeSrc":"2599:3:25","nodeType":"YulLiteral","src":"2599:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2579:3:25","nodeType":"YulIdentifier","src":"2579:3:25"},"nativeSrc":"2579:24:25","nodeType":"YulFunctionCall","src":"2579:24:25"},{"arguments":[{"kind":"number","nativeSrc":"2609:1:25","nodeType":"YulLiteral","src":"2609:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2605:3:25","nodeType":"YulIdentifier","src":"2605:3:25"},"nativeSrc":"2605:6:25","nodeType":"YulFunctionCall","src":"2605:6:25"}],"functionName":{"name":"shr","nativeSrc":"2575:3:25","nodeType":"YulIdentifier","src":"2575:3:25"},"nativeSrc":"2575:37:25","nodeType":"YulFunctionCall","src":"2575:37:25"}],"functionName":{"name":"not","nativeSrc":"2571:3:25","nodeType":"YulIdentifier","src":"2571:3:25"},"nativeSrc":"2571:42:25","nodeType":"YulFunctionCall","src":"2571:42:25"}],"functionName":{"name":"and","nativeSrc":"2556:3:25","nodeType":"YulIdentifier","src":"2556:3:25"},"nativeSrc":"2556:58:25","nodeType":"YulFunctionCall","src":"2556:58:25"}],"functionName":{"name":"sstore","nativeSrc":"2541:6:25","nodeType":"YulIdentifier","src":"2541:6:25"},"nativeSrc":"2541:74:25","nodeType":"YulFunctionCall","src":"2541:74:25"},"nativeSrc":"2541:74:25","nodeType":"YulExpressionStatement","src":"2541:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2434:7:25","nodeType":"YulIdentifier","src":"2434:7:25"},{"name":"newLen","nativeSrc":"2443:6:25","nodeType":"YulIdentifier","src":"2443:6:25"}],"functionName":{"name":"lt","nativeSrc":"2431:2:25","nodeType":"YulIdentifier","src":"2431:2:25"},"nativeSrc":"2431:19:25","nodeType":"YulFunctionCall","src":"2431:19:25"},"nativeSrc":"2428:201:25","nodeType":"YulIf","src":"2428:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2649:4:25","nodeType":"YulIdentifier","src":"2649:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2663:1:25","nodeType":"YulLiteral","src":"2663:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"2666:6:25","nodeType":"YulIdentifier","src":"2666:6:25"}],"functionName":{"name":"shl","nativeSrc":"2659:3:25","nodeType":"YulIdentifier","src":"2659:3:25"},"nativeSrc":"2659:14:25","nodeType":"YulFunctionCall","src":"2659:14:25"},{"kind":"number","nativeSrc":"2675:1:25","nodeType":"YulLiteral","src":"2675:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2655:3:25","nodeType":"YulIdentifier","src":"2655:3:25"},"nativeSrc":"2655:22:25","nodeType":"YulFunctionCall","src":"2655:22:25"}],"functionName":{"name":"sstore","nativeSrc":"2642:6:25","nodeType":"YulIdentifier","src":"2642:6:25"},"nativeSrc":"2642:36:25","nodeType":"YulFunctionCall","src":"2642:36:25"},"nativeSrc":"2642:36:25","nodeType":"YulExpressionStatement","src":"2642:36:25"}]},"nativeSrc":"2039:649:25","nodeType":"YulCase","src":"2039:649:25","value":{"kind":"number","nativeSrc":"2044:1:25","nodeType":"YulLiteral","src":"2044:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"2705:234:25","nodeType":"YulBlock","src":"2705:234:25","statements":[{"nativeSrc":"2719:14:25","nodeType":"YulVariableDeclaration","src":"2719:14:25","value":{"kind":"number","nativeSrc":"2732:1:25","nodeType":"YulLiteral","src":"2732:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2723:5:25","nodeType":"YulTypedName","src":"2723:5:25","type":""}]},{"body":{"nativeSrc":"2768:67:25","nodeType":"YulBlock","src":"2768:67:25","statements":[{"nativeSrc":"2786:35:25","nodeType":"YulAssignment","src":"2786:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2805:3:25","nodeType":"YulIdentifier","src":"2805:3:25"},{"name":"srcOffset","nativeSrc":"2810:9:25","nodeType":"YulIdentifier","src":"2810:9:25"}],"functionName":{"name":"add","nativeSrc":"2801:3:25","nodeType":"YulIdentifier","src":"2801:3:25"},"nativeSrc":"2801:19:25","nodeType":"YulFunctionCall","src":"2801:19:25"}],"functionName":{"name":"mload","nativeSrc":"2795:5:25","nodeType":"YulIdentifier","src":"2795:5:25"},"nativeSrc":"2795:26:25","nodeType":"YulFunctionCall","src":"2795:26:25"},"variableNames":[{"name":"value","nativeSrc":"2786:5:25","nodeType":"YulIdentifier","src":"2786:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"2749:6:25","nodeType":"YulIdentifier","src":"2749:6:25"},"nativeSrc":"2746:89:25","nodeType":"YulIf","src":"2746:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2855:4:25","nodeType":"YulIdentifier","src":"2855:4:25"},{"arguments":[{"name":"value","nativeSrc":"2914:5:25","nodeType":"YulIdentifier","src":"2914:5:25"},{"name":"newLen","nativeSrc":"2921:6:25","nodeType":"YulIdentifier","src":"2921:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2861:52:25","nodeType":"YulIdentifier","src":"2861:52:25"},"nativeSrc":"2861:67:25","nodeType":"YulFunctionCall","src":"2861:67:25"}],"functionName":{"name":"sstore","nativeSrc":"2848:6:25","nodeType":"YulIdentifier","src":"2848:6:25"},"nativeSrc":"2848:81:25","nodeType":"YulFunctionCall","src":"2848:81:25"},"nativeSrc":"2848:81:25","nodeType":"YulExpressionStatement","src":"2848:81:25"}]},"nativeSrc":"2697:242:25","nodeType":"YulCase","src":"2697:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2019:6:25","nodeType":"YulIdentifier","src":"2019:6:25"},{"kind":"number","nativeSrc":"2027:2:25","nodeType":"YulLiteral","src":"2027:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2016:2:25","nodeType":"YulIdentifier","src":"2016:2:25"},"nativeSrc":"2016:14:25","nodeType":"YulFunctionCall","src":"2016:14:25"},"nativeSrc":"2009:930:25","nodeType":"YulSwitch","src":"2009:930:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1646:1299:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1727:4:25","nodeType":"YulTypedName","src":"1727:4:25","type":""},{"name":"src","nativeSrc":"1733:3:25","nodeType":"YulTypedName","src":"1733:3:25","type":""}],"src":"1646:1299:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610e7b380380610e7b83398101604081905261002f91610180565b6040518060400160405280600d81526020016c21ac26b83aba32902a37b5b2b760991b8152506040518060400160405280600481526020016310d6141560e21b8152508160039081610081919061024f565b50600461008e828261024f565b5061009e915060009050336100d0565b506100c97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826100d0565b505061030d565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166101765760008381526005602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561012e3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161017a565b5060005b92915050565b60006020828403121561019257600080fd5b81516001600160a01b03811681146101a957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806101da57607f821691505b6020821081036101fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561024a57806000526020600020601f840160051c810160208510156102275750805b601f840160051c820191505b818110156102475760008155600101610233565b50505b505050565b81516001600160401b03811115610268576102686101b0565b61027c8161027684546101c6565b84610200565b6020601f8211600181146102b057600083156102985750848201515b600019600385901b1c1916600184901b178455610247565b600084815260208120601f198516915b828110156102e057878501518255602094850194600190920191016102c0565b50848210156102fe5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610b5f8061031c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806340c10f19116100a2578063a217fddf11610071578063a217fddf14610241578063a9059cbb14610249578063d53913931461025c578063d547741f14610283578063dd62ed3e1461029657600080fd5b806340c10f19146101ea57806370a08231146101fd57806391d148541461022657806395d89b411461023957600080fd5b806323b872dd116100e957806323b872dd1461017d578063248a9ca3146101905780632f2ff15d146101b3578063313ce567146101c857806336568abe146101d757600080fd5b806301ffc9a71461011b57806306fdde0314610143578063095ea7b31461015857806318160ddd1461016b575b600080fd5b61012e610129366004610942565b6102cf565b60405190151581526020015b60405180910390f35b61014b610306565b60405161013a9190610973565b61012e6101663660046109dd565b610398565b6002545b60405190815260200161013a565b61012e61018b366004610a07565b6103b0565b61016f61019e366004610a44565b60009081526005602052604090206001015490565b6101c66101c1366004610a5d565b6103d4565b005b6040516012815260200161013a565b6101c66101e5366004610a5d565b6103ff565b6101c66101f83660046109dd565b610437565b61016f61020b366004610a89565b6001600160a01b031660009081526020819052604090205490565b61012e610234366004610a5d565b61046b565b61014b610496565b61016f600081565b61012e6102573660046109dd565b6104a5565b61016f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6101c6610291366004610a5d565b6104b3565b61016f6102a4366004610aa4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b148061030057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461031590610ace565b80601f016020809104026020016040519081016040528092919081815260200182805461034190610ace565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b6000336103a68185856104d8565b5060019392505050565b6000336103be8582856104e5565b6103c9858585610563565b506001949350505050565b6000828152600560205260409020600101546103ef816105c2565b6103f983836105cf565b50505050565b6001600160a01b03811633146104285760405163334bd91960e11b815260040160405180910390fd5b6104328282610663565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610461816105c2565b61043283836106d0565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461031590610ace565b6000336103a6818585610563565b6000828152600560205260409020600101546104ce816105c2565b6103f98383610663565b610432838383600161070a565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103f9578181101561055457604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103f98484848403600061070a565b6001600160a01b03831661058d57604051634b637e8f60e11b81526000600482015260240161054b565b6001600160a01b0382166105b75760405163ec442f0560e01b81526000600482015260240161054b565b6104328383836107df565b6105cc8133610909565b50565b60006105db838361046b565b61065b5760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556106133390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610300565b506000610300565b600061066f838361046b565b1561065b5760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610300565b6001600160a01b0382166106fa5760405163ec442f0560e01b81526000600482015260240161054b565b610706600083836107df565b5050565b6001600160a01b0384166107345760405163e602df0560e01b81526000600482015260240161054b565b6001600160a01b03831661075e57604051634a1406b160e11b81526000600482015260240161054b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d191815260200190565b60405180910390a350505050565b6001600160a01b03831661080a5780600260008282546107ff9190610b08565b9091555061087c9050565b6001600160a01b0383166000908152602081905260409020548181101561085d5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161054b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610898576002805482900390556108b7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108fc91815260200190565b60405180910390a3505050565b610913828261046b565b6107065760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161054b565b60006020828403121561095457600080fd5b81356001600160e01b03198116811461096c57600080fd5b9392505050565b602081526000825180602084015260005b818110156109a15760208186018101516040868401015201610984565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146109d857600080fd5b919050565b600080604083850312156109f057600080fd5b6109f9836109c1565b946020939093013593505050565b600080600060608486031215610a1c57600080fd5b610a25846109c1565b9250610a33602085016109c1565b929592945050506040919091013590565b600060208284031215610a5657600080fd5b5035919050565b60008060408385031215610a7057600080fd5b82359150610a80602084016109c1565b90509250929050565b600060208284031215610a9b57600080fd5b61096c826109c1565b60008060408385031215610ab757600080fd5b610ac0836109c1565b9150610a80602084016109c1565b600181811c90821680610ae257607f821691505b602082108103610b0257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030057634e487b7160e01b600052601160045260246000fdfea264697066735822122077a9e7c63065340fdfcc44cfcb592571276ae52462a715e15a7f8acad70c759764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE7B CODESIZE SUB DUP1 PUSH2 0xE7B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x21AC26B83ABA32902A37B5B2B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x10D61415 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8E DUP3 DUP3 PUSH2 0x24F JUMP JUMPDEST POP PUSH2 0x9E SWAP2 POP PUSH1 0x0 SWAP1 POP CALLER PUSH2 0xD0 JUMP JUMPDEST POP PUSH2 0xC9 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xD0 JUMP JUMPDEST POP POP PUSH2 0x30D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x176 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x12E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x17A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x24A JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x227 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x233 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x268 JUMPI PUSH2 0x268 PUSH2 0x1B0 JUMP JUMPDEST PUSH2 0x27C DUP2 PUSH2 0x276 DUP5 SLOAD PUSH2 0x1C6 JUMP JUMPDEST DUP5 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x298 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x247 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E0 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2C0 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2FE JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB5F DUP1 PUSH2 0x31C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x496 JUMP JUMPDEST PUSH2 0x16F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x16F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x300 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xACE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0xACE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x363 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x371 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x4D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3BE DUP6 DUP3 DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x3C9 DUP6 DUP6 DUP6 PUSH2 0x563 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EF DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0x5CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x432 DUP3 DUP3 PUSH2 0x663 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x461 DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4CE DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x5CC DUP2 CALLER PUSH2 0x909 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB DUP4 DUP4 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x613 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x300 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66F DUP4 DUP4 PUSH2 0x46B JUMP JUMPDEST ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x706 PUSH1 0x0 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x80A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x87C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x898 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x913 DUP3 DUP3 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x984 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F9 DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA25 DUP5 PUSH2 0x9C1 JUMP JUMPDEST SWAP3 POP PUSH2 0xA33 PUSH1 0x20 DUP6 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA80 PUSH1 0x20 DUP5 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC0 DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA80 PUSH1 0x20 DUP5 ADD PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAE2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x300 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xA9E7C63065340FDFCC44CFCB592571276AE52462A715E15A PUSH32 0x8ACAD70C759764736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"305:390:21:-:0;;;423:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:6;;;;;;;;;;;;;-1:-1:-1;;;1582:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:6;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:6;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;491:42:21::1;::::0;-1:-1:-1;2232:4:0::1;::::0;-1:-1:-1;522:10:21::1;491;:42::i;:::-;-1:-1:-1::0;543:30:21::1;392:24;567:5:::0;543:10:::1;:30::i;:::-;;423:157:::0;305:390;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:290:25:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:25;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:25:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:25;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:25;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:25;;;2795:26;2746:89;-1:-1:-1;;1603:1:25;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:25;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:25;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:25;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:25:o;:::-;305:390:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6891":{"entryPoint":null,"id":6891,"parameterSlots":0,"returnSlots":0},"@_approve_1253":{"entryPoint":1240,"id":1253,"parameterSlots":3,"returnSlots":0},"@_approve_1313":{"entryPoint":1802,"id":1313,"parameterSlots":4,"returnSlots":0},"@_checkRole_114":{"entryPoint":2313,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":1474,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":1487,"id":256,"parameterSlots":2,"returnSlots":1},"@_mint_1202":{"entryPoint":1744,"id":1202,"parameterSlots":2,"returnSlots":0},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":1635,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1361":{"entryPoint":1253,"id":1361,"parameterSlots":3,"returnSlots":0},"@_transfer_1092":{"entryPoint":1379,"id":1092,"parameterSlots":3,"returnSlots":0},"@_update_1169":{"entryPoint":2015,"id":1169,"parameterSlots":3,"returnSlots":0},"@allowance_989":{"entryPoint":null,"id":989,"parameterSlots":2,"returnSlots":1},"@approve_1013":{"entryPoint":920,"id":1013,"parameterSlots":2,"returnSlots":1},"@balanceOf_948":{"entryPoint":null,"id":948,"parameterSlots":1,"returnSlots":1},"@decimals_926":{"entryPoint":null,"id":926,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":980,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1131,"id":80,"parameterSlots":2,"returnSlots":1},"@mint_6928":{"entryPoint":1079,"id":6928,"parameterSlots":2,"returnSlots":0},"@name_908":{"entryPoint":774,"id":908,"parameterSlots":0,"returnSlots":1},"@renounceRole_189":{"entryPoint":1023,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":1203,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2781":{"entryPoint":null,"id":2781,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":719,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_917":{"entryPoint":1174,"id":917,"parameterSlots":0,"returnSlots":1},"@totalSupply_935":{"entryPoint":null,"id":935,"parameterSlots":0,"returnSlots":1},"@transferFrom_1045":{"entryPoint":944,"id":1045,"parameterSlots":3,"returnSlots":1},"@transfer_972":{"entryPoint":1189,"id":972,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2697,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2724,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2567,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2525,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":2628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":2653,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2824,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2766,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:4882:25","nodeType":"YulBlock","src":"0:4882:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"83:217:25","nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nativeSrc":"129:16:25","nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:25","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:25","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:25","nodeType":"YulIdentifier","src":"131:6:25"},"nativeSrc":"131:12:25","nodeType":"YulFunctionCall","src":"131:12:25"},"nativeSrc":"131:12:25","nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:25","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nativeSrc":"113:9:25","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nativeSrc":"100:3:25","nodeType":"YulIdentifier","src":"100:3:25"},"nativeSrc":"100:23:25","nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nativeSrc":"125:2:25","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:25","nodeType":"YulIdentifier","src":"96:3:25"},"nativeSrc":"96:32:25","nodeType":"YulFunctionCall","src":"96:32:25"},"nativeSrc":"93:52:25","nodeType":"YulIf","src":"93:52:25"},{"nativeSrc":"154:36:25","nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:25","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:25","nodeType":"YulIdentifier","src":"167:12:25"},"nativeSrc":"167:23:25","nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nativeSrc":"158:5:25","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nativeSrc":"254:16:25","nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:25","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:25","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:25","nodeType":"YulIdentifier","src":"256:6:25"},"nativeSrc":"256:12:25","nodeType":"YulFunctionCall","src":"256:12:25"},"nativeSrc":"256:12:25","nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:25","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nativeSrc":"223:5:25","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nativeSrc":"234:3:25","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:25","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:25","nodeType":"YulIdentifier","src":"230:3:25"},"nativeSrc":"230:20:25","nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nativeSrc":"219:3:25","nodeType":"YulIdentifier","src":"219:3:25"},"nativeSrc":"219:32:25","nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nativeSrc":"209:2:25","nodeType":"YulIdentifier","src":"209:2:25"},"nativeSrc":"209:43:25","nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nativeSrc":"202:6:25","nodeType":"YulIdentifier","src":"202:6:25"},"nativeSrc":"202:51:25","nodeType":"YulFunctionCall","src":"202:51:25"},"nativeSrc":"199:71:25","nodeType":"YulIf","src":"199:71:25"},{"nativeSrc":"279:15:25","nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nativeSrc":"289:5:25","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nativeSrc":"279:6:25","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:25","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nativeSrc":"60:7:25","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:25","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nativeSrc":"400:92:25","nodeType":"YulBlock","src":"400:92:25","statements":[{"nativeSrc":"410:26:25","nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:25","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nativeSrc":"433:2:25","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:25","nodeType":"YulIdentifier","src":"418:3:25"},"nativeSrc":"418:18:25","nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nativeSrc":"410:4:25","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:25","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:25","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nativeSrc":"470:6:25","nodeType":"YulIdentifier","src":"470:6:25"},"nativeSrc":"470:14:25","nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nativeSrc":"463:6:25","nodeType":"YulIdentifier","src":"463:6:25"},"nativeSrc":"463:22:25","nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nativeSrc":"445:6:25","nodeType":"YulIdentifier","src":"445:6:25"},"nativeSrc":"445:41:25","nodeType":"YulFunctionCall","src":"445:41:25"},"nativeSrc":"445:41:25","nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:25","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nativeSrc":"380:6:25","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:25","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nativeSrc":"618:406:25","nodeType":"YulBlock","src":"618:406:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"635:9:25","nodeType":"YulIdentifier","src":"635:9:25"},{"kind":"number","nativeSrc":"646:2:25","nodeType":"YulLiteral","src":"646:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"628:6:25","nodeType":"YulIdentifier","src":"628:6:25"},"nativeSrc":"628:21:25","nodeType":"YulFunctionCall","src":"628:21:25"},"nativeSrc":"628:21:25","nodeType":"YulExpressionStatement","src":"628:21:25"},{"nativeSrc":"658:27:25","nodeType":"YulVariableDeclaration","src":"658:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"678:6:25","nodeType":"YulIdentifier","src":"678:6:25"}],"functionName":{"name":"mload","nativeSrc":"672:5:25","nodeType":"YulIdentifier","src":"672:5:25"},"nativeSrc":"672:13:25","nodeType":"YulFunctionCall","src":"672:13:25"},"variables":[{"name":"length","nativeSrc":"662:6:25","nodeType":"YulTypedName","src":"662:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"705:9:25","nodeType":"YulIdentifier","src":"705:9:25"},{"kind":"number","nativeSrc":"716:2:25","nodeType":"YulLiteral","src":"716:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"701:3:25","nodeType":"YulIdentifier","src":"701:3:25"},"nativeSrc":"701:18:25","nodeType":"YulFunctionCall","src":"701:18:25"},{"name":"length","nativeSrc":"721:6:25","nodeType":"YulIdentifier","src":"721:6:25"}],"functionName":{"name":"mstore","nativeSrc":"694:6:25","nodeType":"YulIdentifier","src":"694:6:25"},"nativeSrc":"694:34:25","nodeType":"YulFunctionCall","src":"694:34:25"},"nativeSrc":"694:34:25","nodeType":"YulExpressionStatement","src":"694:34:25"},{"nativeSrc":"737:10:25","nodeType":"YulVariableDeclaration","src":"737:10:25","value":{"kind":"number","nativeSrc":"746:1:25","nodeType":"YulLiteral","src":"746:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"741:1:25","nodeType":"YulTypedName","src":"741:1:25","type":""}]},{"body":{"nativeSrc":"806:90:25","nodeType":"YulBlock","src":"806:90:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"835:9:25","nodeType":"YulIdentifier","src":"835:9:25"},{"name":"i","nativeSrc":"846:1:25","nodeType":"YulIdentifier","src":"846:1:25"}],"functionName":{"name":"add","nativeSrc":"831:3:25","nodeType":"YulIdentifier","src":"831:3:25"},"nativeSrc":"831:17:25","nodeType":"YulFunctionCall","src":"831:17:25"},{"kind":"number","nativeSrc":"850:2:25","nodeType":"YulLiteral","src":"850:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"827:3:25","nodeType":"YulIdentifier","src":"827:3:25"},"nativeSrc":"827:26:25","nodeType":"YulFunctionCall","src":"827:26:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"869:6:25","nodeType":"YulIdentifier","src":"869:6:25"},{"name":"i","nativeSrc":"877:1:25","nodeType":"YulIdentifier","src":"877:1:25"}],"functionName":{"name":"add","nativeSrc":"865:3:25","nodeType":"YulIdentifier","src":"865:3:25"},"nativeSrc":"865:14:25","nodeType":"YulFunctionCall","src":"865:14:25"},{"kind":"number","nativeSrc":"881:2:25","nodeType":"YulLiteral","src":"881:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"861:3:25","nodeType":"YulIdentifier","src":"861:3:25"},"nativeSrc":"861:23:25","nodeType":"YulFunctionCall","src":"861:23:25"}],"functionName":{"name":"mload","nativeSrc":"855:5:25","nodeType":"YulIdentifier","src":"855:5:25"},"nativeSrc":"855:30:25","nodeType":"YulFunctionCall","src":"855:30:25"}],"functionName":{"name":"mstore","nativeSrc":"820:6:25","nodeType":"YulIdentifier","src":"820:6:25"},"nativeSrc":"820:66:25","nodeType":"YulFunctionCall","src":"820:66:25"},"nativeSrc":"820:66:25","nodeType":"YulExpressionStatement","src":"820:66:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"767:1:25","nodeType":"YulIdentifier","src":"767:1:25"},{"name":"length","nativeSrc":"770:6:25","nodeType":"YulIdentifier","src":"770:6:25"}],"functionName":{"name":"lt","nativeSrc":"764:2:25","nodeType":"YulIdentifier","src":"764:2:25"},"nativeSrc":"764:13:25","nodeType":"YulFunctionCall","src":"764:13:25"},"nativeSrc":"756:140:25","nodeType":"YulForLoop","post":{"nativeSrc":"778:19:25","nodeType":"YulBlock","src":"778:19:25","statements":[{"nativeSrc":"780:15:25","nodeType":"YulAssignment","src":"780:15:25","value":{"arguments":[{"name":"i","nativeSrc":"789:1:25","nodeType":"YulIdentifier","src":"789:1:25"},{"kind":"number","nativeSrc":"792:2:25","nodeType":"YulLiteral","src":"792:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"785:3:25","nodeType":"YulIdentifier","src":"785:3:25"},"nativeSrc":"785:10:25","nodeType":"YulFunctionCall","src":"785:10:25"},"variableNames":[{"name":"i","nativeSrc":"780:1:25","nodeType":"YulIdentifier","src":"780:1:25"}]}]},"pre":{"nativeSrc":"760:3:25","nodeType":"YulBlock","src":"760:3:25","statements":[]},"src":"756:140:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"920:9:25","nodeType":"YulIdentifier","src":"920:9:25"},{"name":"length","nativeSrc":"931:6:25","nodeType":"YulIdentifier","src":"931:6:25"}],"functionName":{"name":"add","nativeSrc":"916:3:25","nodeType":"YulIdentifier","src":"916:3:25"},"nativeSrc":"916:22:25","nodeType":"YulFunctionCall","src":"916:22:25"},{"kind":"number","nativeSrc":"940:2:25","nodeType":"YulLiteral","src":"940:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"912:3:25","nodeType":"YulIdentifier","src":"912:3:25"},"nativeSrc":"912:31:25","nodeType":"YulFunctionCall","src":"912:31:25"},{"kind":"number","nativeSrc":"945:1:25","nodeType":"YulLiteral","src":"945:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"905:6:25","nodeType":"YulIdentifier","src":"905:6:25"},"nativeSrc":"905:42:25","nodeType":"YulFunctionCall","src":"905:42:25"},"nativeSrc":"905:42:25","nodeType":"YulExpressionStatement","src":"905:42:25"},{"nativeSrc":"956:62:25","nodeType":"YulAssignment","src":"956:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"972:9:25","nodeType":"YulIdentifier","src":"972:9:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"991:6:25","nodeType":"YulIdentifier","src":"991:6:25"},{"kind":"number","nativeSrc":"999:2:25","nodeType":"YulLiteral","src":"999:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"987:3:25","nodeType":"YulIdentifier","src":"987:3:25"},"nativeSrc":"987:15:25","nodeType":"YulFunctionCall","src":"987:15:25"},{"arguments":[{"kind":"number","nativeSrc":"1008:2:25","nodeType":"YulLiteral","src":"1008:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1004:3:25","nodeType":"YulIdentifier","src":"1004:3:25"},"nativeSrc":"1004:7:25","nodeType":"YulFunctionCall","src":"1004:7:25"}],"functionName":{"name":"and","nativeSrc":"983:3:25","nodeType":"YulIdentifier","src":"983:3:25"},"nativeSrc":"983:29:25","nodeType":"YulFunctionCall","src":"983:29:25"}],"functionName":{"name":"add","nativeSrc":"968:3:25","nodeType":"YulIdentifier","src":"968:3:25"},"nativeSrc":"968:45:25","nodeType":"YulFunctionCall","src":"968:45:25"},{"kind":"number","nativeSrc":"1015:2:25","nodeType":"YulLiteral","src":"1015:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"964:3:25","nodeType":"YulIdentifier","src":"964:3:25"},"nativeSrc":"964:54:25","nodeType":"YulFunctionCall","src":"964:54:25"},"variableNames":[{"name":"tail","nativeSrc":"956:4:25","nodeType":"YulIdentifier","src":"956:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"497:527:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"587:9:25","nodeType":"YulTypedName","src":"587:9:25","type":""},{"name":"value0","nativeSrc":"598:6:25","nodeType":"YulTypedName","src":"598:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"609:4:25","nodeType":"YulTypedName","src":"609:4:25","type":""}],"src":"497:527:25"},{"body":{"nativeSrc":"1078:124:25","nodeType":"YulBlock","src":"1078:124:25","statements":[{"nativeSrc":"1088:29:25","nodeType":"YulAssignment","src":"1088:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1110:6:25","nodeType":"YulIdentifier","src":"1110:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1097:12:25","nodeType":"YulIdentifier","src":"1097:12:25"},"nativeSrc":"1097:20:25","nodeType":"YulFunctionCall","src":"1097:20:25"},"variableNames":[{"name":"value","nativeSrc":"1088:5:25","nodeType":"YulIdentifier","src":"1088:5:25"}]},{"body":{"nativeSrc":"1180:16:25","nodeType":"YulBlock","src":"1180:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1189:1:25","nodeType":"YulLiteral","src":"1189:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1192:1:25","nodeType":"YulLiteral","src":"1192:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1182:6:25","nodeType":"YulIdentifier","src":"1182:6:25"},"nativeSrc":"1182:12:25","nodeType":"YulFunctionCall","src":"1182:12:25"},"nativeSrc":"1182:12:25","nodeType":"YulExpressionStatement","src":"1182:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1139:5:25","nodeType":"YulIdentifier","src":"1139:5:25"},{"arguments":[{"name":"value","nativeSrc":"1150:5:25","nodeType":"YulIdentifier","src":"1150:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1165:3:25","nodeType":"YulLiteral","src":"1165:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1170:1:25","nodeType":"YulLiteral","src":"1170:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1161:3:25","nodeType":"YulIdentifier","src":"1161:3:25"},"nativeSrc":"1161:11:25","nodeType":"YulFunctionCall","src":"1161:11:25"},{"kind":"number","nativeSrc":"1174:1:25","nodeType":"YulLiteral","src":"1174:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1157:3:25","nodeType":"YulIdentifier","src":"1157:3:25"},"nativeSrc":"1157:19:25","nodeType":"YulFunctionCall","src":"1157:19:25"}],"functionName":{"name":"and","nativeSrc":"1146:3:25","nodeType":"YulIdentifier","src":"1146:3:25"},"nativeSrc":"1146:31:25","nodeType":"YulFunctionCall","src":"1146:31:25"}],"functionName":{"name":"eq","nativeSrc":"1136:2:25","nodeType":"YulIdentifier","src":"1136:2:25"},"nativeSrc":"1136:42:25","nodeType":"YulFunctionCall","src":"1136:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1129:6:25","nodeType":"YulIdentifier","src":"1129:6:25"},"nativeSrc":"1129:50:25","nodeType":"YulFunctionCall","src":"1129:50:25"},"nativeSrc":"1126:70:25","nodeType":"YulIf","src":"1126:70:25"}]},"name":"abi_decode_address","nativeSrc":"1029:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1057:6:25","nodeType":"YulTypedName","src":"1057:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1068:5:25","nodeType":"YulTypedName","src":"1068:5:25","type":""}],"src":"1029:173:25"},{"body":{"nativeSrc":"1294:213:25","nodeType":"YulBlock","src":"1294:213:25","statements":[{"body":{"nativeSrc":"1340:16:25","nodeType":"YulBlock","src":"1340:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1349:1:25","nodeType":"YulLiteral","src":"1349:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1352:1:25","nodeType":"YulLiteral","src":"1352:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1342:6:25","nodeType":"YulIdentifier","src":"1342:6:25"},"nativeSrc":"1342:12:25","nodeType":"YulFunctionCall","src":"1342:12:25"},"nativeSrc":"1342:12:25","nodeType":"YulExpressionStatement","src":"1342:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1315:7:25","nodeType":"YulIdentifier","src":"1315:7:25"},{"name":"headStart","nativeSrc":"1324:9:25","nodeType":"YulIdentifier","src":"1324:9:25"}],"functionName":{"name":"sub","nativeSrc":"1311:3:25","nodeType":"YulIdentifier","src":"1311:3:25"},"nativeSrc":"1311:23:25","nodeType":"YulFunctionCall","src":"1311:23:25"},{"kind":"number","nativeSrc":"1336:2:25","nodeType":"YulLiteral","src":"1336:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1307:3:25","nodeType":"YulIdentifier","src":"1307:3:25"},"nativeSrc":"1307:32:25","nodeType":"YulFunctionCall","src":"1307:32:25"},"nativeSrc":"1304:52:25","nodeType":"YulIf","src":"1304:52:25"},{"nativeSrc":"1365:39:25","nodeType":"YulAssignment","src":"1365:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1394:9:25","nodeType":"YulIdentifier","src":"1394:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1375:18:25","nodeType":"YulIdentifier","src":"1375:18:25"},"nativeSrc":"1375:29:25","nodeType":"YulFunctionCall","src":"1375:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1365:6:25","nodeType":"YulIdentifier","src":"1365:6:25"}]},{"nativeSrc":"1413:14:25","nodeType":"YulVariableDeclaration","src":"1413:14:25","value":{"kind":"number","nativeSrc":"1426:1:25","nodeType":"YulLiteral","src":"1426:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1417:5:25","nodeType":"YulTypedName","src":"1417:5:25","type":""}]},{"nativeSrc":"1436:41:25","nodeType":"YulAssignment","src":"1436:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1462:9:25","nodeType":"YulIdentifier","src":"1462:9:25"},{"kind":"number","nativeSrc":"1473:2:25","nodeType":"YulLiteral","src":"1473:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1458:3:25","nodeType":"YulIdentifier","src":"1458:3:25"},"nativeSrc":"1458:18:25","nodeType":"YulFunctionCall","src":"1458:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"1445:12:25","nodeType":"YulIdentifier","src":"1445:12:25"},"nativeSrc":"1445:32:25","nodeType":"YulFunctionCall","src":"1445:32:25"},"variableNames":[{"name":"value","nativeSrc":"1436:5:25","nodeType":"YulIdentifier","src":"1436:5:25"}]},{"nativeSrc":"1486:15:25","nodeType":"YulAssignment","src":"1486:15:25","value":{"name":"value","nativeSrc":"1496:5:25","nodeType":"YulIdentifier","src":"1496:5:25"},"variableNames":[{"name":"value1","nativeSrc":"1486:6:25","nodeType":"YulIdentifier","src":"1486:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1207:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1252:9:25","nodeType":"YulTypedName","src":"1252:9:25","type":""},{"name":"dataEnd","nativeSrc":"1263:7:25","nodeType":"YulTypedName","src":"1263:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1275:6:25","nodeType":"YulTypedName","src":"1275:6:25","type":""},{"name":"value1","nativeSrc":"1283:6:25","nodeType":"YulTypedName","src":"1283:6:25","type":""}],"src":"1207:300:25"},{"body":{"nativeSrc":"1613:76:25","nodeType":"YulBlock","src":"1613:76:25","statements":[{"nativeSrc":"1623:26:25","nodeType":"YulAssignment","src":"1623:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1635:9:25","nodeType":"YulIdentifier","src":"1635:9:25"},{"kind":"number","nativeSrc":"1646:2:25","nodeType":"YulLiteral","src":"1646:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1631:3:25","nodeType":"YulIdentifier","src":"1631:3:25"},"nativeSrc":"1631:18:25","nodeType":"YulFunctionCall","src":"1631:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1623:4:25","nodeType":"YulIdentifier","src":"1623:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1665:9:25","nodeType":"YulIdentifier","src":"1665:9:25"},{"name":"value0","nativeSrc":"1676:6:25","nodeType":"YulIdentifier","src":"1676:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1658:6:25","nodeType":"YulIdentifier","src":"1658:6:25"},"nativeSrc":"1658:25:25","nodeType":"YulFunctionCall","src":"1658:25:25"},"nativeSrc":"1658:25:25","nodeType":"YulExpressionStatement","src":"1658:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1512:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1582:9:25","nodeType":"YulTypedName","src":"1582:9:25","type":""},{"name":"value0","nativeSrc":"1593:6:25","nodeType":"YulTypedName","src":"1593:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1604:4:25","nodeType":"YulTypedName","src":"1604:4:25","type":""}],"src":"1512:177:25"},{"body":{"nativeSrc":"1798:270:25","nodeType":"YulBlock","src":"1798:270:25","statements":[{"body":{"nativeSrc":"1844:16:25","nodeType":"YulBlock","src":"1844:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1853:1:25","nodeType":"YulLiteral","src":"1853:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1856:1:25","nodeType":"YulLiteral","src":"1856:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1846:6:25","nodeType":"YulIdentifier","src":"1846:6:25"},"nativeSrc":"1846:12:25","nodeType":"YulFunctionCall","src":"1846:12:25"},"nativeSrc":"1846:12:25","nodeType":"YulExpressionStatement","src":"1846:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1819:7:25","nodeType":"YulIdentifier","src":"1819:7:25"},{"name":"headStart","nativeSrc":"1828:9:25","nodeType":"YulIdentifier","src":"1828:9:25"}],"functionName":{"name":"sub","nativeSrc":"1815:3:25","nodeType":"YulIdentifier","src":"1815:3:25"},"nativeSrc":"1815:23:25","nodeType":"YulFunctionCall","src":"1815:23:25"},{"kind":"number","nativeSrc":"1840:2:25","nodeType":"YulLiteral","src":"1840:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1811:3:25","nodeType":"YulIdentifier","src":"1811:3:25"},"nativeSrc":"1811:32:25","nodeType":"YulFunctionCall","src":"1811:32:25"},"nativeSrc":"1808:52:25","nodeType":"YulIf","src":"1808:52:25"},{"nativeSrc":"1869:39:25","nodeType":"YulAssignment","src":"1869:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1898:9:25","nodeType":"YulIdentifier","src":"1898:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1879:18:25","nodeType":"YulIdentifier","src":"1879:18:25"},"nativeSrc":"1879:29:25","nodeType":"YulFunctionCall","src":"1879:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1869:6:25","nodeType":"YulIdentifier","src":"1869:6:25"}]},{"nativeSrc":"1917:48:25","nodeType":"YulAssignment","src":"1917:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1950:9:25","nodeType":"YulIdentifier","src":"1950:9:25"},{"kind":"number","nativeSrc":"1961:2:25","nodeType":"YulLiteral","src":"1961:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1946:3:25","nodeType":"YulIdentifier","src":"1946:3:25"},"nativeSrc":"1946:18:25","nodeType":"YulFunctionCall","src":"1946:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1927:18:25","nodeType":"YulIdentifier","src":"1927:18:25"},"nativeSrc":"1927:38:25","nodeType":"YulFunctionCall","src":"1927:38:25"},"variableNames":[{"name":"value1","nativeSrc":"1917:6:25","nodeType":"YulIdentifier","src":"1917:6:25"}]},{"nativeSrc":"1974:14:25","nodeType":"YulVariableDeclaration","src":"1974:14:25","value":{"kind":"number","nativeSrc":"1987:1:25","nodeType":"YulLiteral","src":"1987:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1978:5:25","nodeType":"YulTypedName","src":"1978:5:25","type":""}]},{"nativeSrc":"1997:41:25","nodeType":"YulAssignment","src":"1997:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2023:9:25","nodeType":"YulIdentifier","src":"2023:9:25"},{"kind":"number","nativeSrc":"2034:2:25","nodeType":"YulLiteral","src":"2034:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2019:3:25","nodeType":"YulIdentifier","src":"2019:3:25"},"nativeSrc":"2019:18:25","nodeType":"YulFunctionCall","src":"2019:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2006:12:25","nodeType":"YulIdentifier","src":"2006:12:25"},"nativeSrc":"2006:32:25","nodeType":"YulFunctionCall","src":"2006:32:25"},"variableNames":[{"name":"value","nativeSrc":"1997:5:25","nodeType":"YulIdentifier","src":"1997:5:25"}]},{"nativeSrc":"2047:15:25","nodeType":"YulAssignment","src":"2047:15:25","value":{"name":"value","nativeSrc":"2057:5:25","nodeType":"YulIdentifier","src":"2057:5:25"},"variableNames":[{"name":"value2","nativeSrc":"2047:6:25","nodeType":"YulIdentifier","src":"2047:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1694:374:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1748:9:25","nodeType":"YulTypedName","src":"1748:9:25","type":""},{"name":"dataEnd","nativeSrc":"1759:7:25","nodeType":"YulTypedName","src":"1759:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1771:6:25","nodeType":"YulTypedName","src":"1771:6:25","type":""},{"name":"value1","nativeSrc":"1779:6:25","nodeType":"YulTypedName","src":"1779:6:25","type":""},{"name":"value2","nativeSrc":"1787:6:25","nodeType":"YulTypedName","src":"1787:6:25","type":""}],"src":"1694:374:25"},{"body":{"nativeSrc":"2143:156:25","nodeType":"YulBlock","src":"2143:156:25","statements":[{"body":{"nativeSrc":"2189:16:25","nodeType":"YulBlock","src":"2189:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2198:1:25","nodeType":"YulLiteral","src":"2198:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2201:1:25","nodeType":"YulLiteral","src":"2201:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2191:6:25","nodeType":"YulIdentifier","src":"2191:6:25"},"nativeSrc":"2191:12:25","nodeType":"YulFunctionCall","src":"2191:12:25"},"nativeSrc":"2191:12:25","nodeType":"YulExpressionStatement","src":"2191:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2164:7:25","nodeType":"YulIdentifier","src":"2164:7:25"},{"name":"headStart","nativeSrc":"2173:9:25","nodeType":"YulIdentifier","src":"2173:9:25"}],"functionName":{"name":"sub","nativeSrc":"2160:3:25","nodeType":"YulIdentifier","src":"2160:3:25"},"nativeSrc":"2160:23:25","nodeType":"YulFunctionCall","src":"2160:23:25"},{"kind":"number","nativeSrc":"2185:2:25","nodeType":"YulLiteral","src":"2185:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2156:3:25","nodeType":"YulIdentifier","src":"2156:3:25"},"nativeSrc":"2156:32:25","nodeType":"YulFunctionCall","src":"2156:32:25"},"nativeSrc":"2153:52:25","nodeType":"YulIf","src":"2153:52:25"},{"nativeSrc":"2214:14:25","nodeType":"YulVariableDeclaration","src":"2214:14:25","value":{"kind":"number","nativeSrc":"2227:1:25","nodeType":"YulLiteral","src":"2227:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2218:5:25","nodeType":"YulTypedName","src":"2218:5:25","type":""}]},{"nativeSrc":"2237:32:25","nodeType":"YulAssignment","src":"2237:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2259:9:25","nodeType":"YulIdentifier","src":"2259:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2246:12:25","nodeType":"YulIdentifier","src":"2246:12:25"},"nativeSrc":"2246:23:25","nodeType":"YulFunctionCall","src":"2246:23:25"},"variableNames":[{"name":"value","nativeSrc":"2237:5:25","nodeType":"YulIdentifier","src":"2237:5:25"}]},{"nativeSrc":"2278:15:25","nodeType":"YulAssignment","src":"2278:15:25","value":{"name":"value","nativeSrc":"2288:5:25","nodeType":"YulIdentifier","src":"2288:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2278:6:25","nodeType":"YulIdentifier","src":"2278:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2073:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2109:9:25","nodeType":"YulTypedName","src":"2109:9:25","type":""},{"name":"dataEnd","nativeSrc":"2120:7:25","nodeType":"YulTypedName","src":"2120:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2132:6:25","nodeType":"YulTypedName","src":"2132:6:25","type":""}],"src":"2073:226:25"},{"body":{"nativeSrc":"2405:76:25","nodeType":"YulBlock","src":"2405:76:25","statements":[{"nativeSrc":"2415:26:25","nodeType":"YulAssignment","src":"2415:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2427:9:25","nodeType":"YulIdentifier","src":"2427:9:25"},{"kind":"number","nativeSrc":"2438:2:25","nodeType":"YulLiteral","src":"2438:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2423:3:25","nodeType":"YulIdentifier","src":"2423:3:25"},"nativeSrc":"2423:18:25","nodeType":"YulFunctionCall","src":"2423:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2415:4:25","nodeType":"YulIdentifier","src":"2415:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2457:9:25","nodeType":"YulIdentifier","src":"2457:9:25"},{"name":"value0","nativeSrc":"2468:6:25","nodeType":"YulIdentifier","src":"2468:6:25"}],"functionName":{"name":"mstore","nativeSrc":"2450:6:25","nodeType":"YulIdentifier","src":"2450:6:25"},"nativeSrc":"2450:25:25","nodeType":"YulFunctionCall","src":"2450:25:25"},"nativeSrc":"2450:25:25","nodeType":"YulExpressionStatement","src":"2450:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2304:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2374:9:25","nodeType":"YulTypedName","src":"2374:9:25","type":""},{"name":"value0","nativeSrc":"2385:6:25","nodeType":"YulTypedName","src":"2385:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2396:4:25","nodeType":"YulTypedName","src":"2396:4:25","type":""}],"src":"2304:177:25"},{"body":{"nativeSrc":"2573:213:25","nodeType":"YulBlock","src":"2573:213:25","statements":[{"body":{"nativeSrc":"2619:16:25","nodeType":"YulBlock","src":"2619:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2628:1:25","nodeType":"YulLiteral","src":"2628:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2631:1:25","nodeType":"YulLiteral","src":"2631:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2621:6:25","nodeType":"YulIdentifier","src":"2621:6:25"},"nativeSrc":"2621:12:25","nodeType":"YulFunctionCall","src":"2621:12:25"},"nativeSrc":"2621:12:25","nodeType":"YulExpressionStatement","src":"2621:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2594:7:25","nodeType":"YulIdentifier","src":"2594:7:25"},{"name":"headStart","nativeSrc":"2603:9:25","nodeType":"YulIdentifier","src":"2603:9:25"}],"functionName":{"name":"sub","nativeSrc":"2590:3:25","nodeType":"YulIdentifier","src":"2590:3:25"},"nativeSrc":"2590:23:25","nodeType":"YulFunctionCall","src":"2590:23:25"},{"kind":"number","nativeSrc":"2615:2:25","nodeType":"YulLiteral","src":"2615:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2586:3:25","nodeType":"YulIdentifier","src":"2586:3:25"},"nativeSrc":"2586:32:25","nodeType":"YulFunctionCall","src":"2586:32:25"},"nativeSrc":"2583:52:25","nodeType":"YulIf","src":"2583:52:25"},{"nativeSrc":"2644:14:25","nodeType":"YulVariableDeclaration","src":"2644:14:25","value":{"kind":"number","nativeSrc":"2657:1:25","nodeType":"YulLiteral","src":"2657:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2648:5:25","nodeType":"YulTypedName","src":"2648:5:25","type":""}]},{"nativeSrc":"2667:32:25","nodeType":"YulAssignment","src":"2667:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2689:9:25","nodeType":"YulIdentifier","src":"2689:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2676:12:25","nodeType":"YulIdentifier","src":"2676:12:25"},"nativeSrc":"2676:23:25","nodeType":"YulFunctionCall","src":"2676:23:25"},"variableNames":[{"name":"value","nativeSrc":"2667:5:25","nodeType":"YulIdentifier","src":"2667:5:25"}]},{"nativeSrc":"2708:15:25","nodeType":"YulAssignment","src":"2708:15:25","value":{"name":"value","nativeSrc":"2718:5:25","nodeType":"YulIdentifier","src":"2718:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2708:6:25","nodeType":"YulIdentifier","src":"2708:6:25"}]},{"nativeSrc":"2732:48:25","nodeType":"YulAssignment","src":"2732:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2765:9:25","nodeType":"YulIdentifier","src":"2765:9:25"},{"kind":"number","nativeSrc":"2776:2:25","nodeType":"YulLiteral","src":"2776:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2761:3:25","nodeType":"YulIdentifier","src":"2761:3:25"},"nativeSrc":"2761:18:25","nodeType":"YulFunctionCall","src":"2761:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2742:18:25","nodeType":"YulIdentifier","src":"2742:18:25"},"nativeSrc":"2742:38:25","nodeType":"YulFunctionCall","src":"2742:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2732:6:25","nodeType":"YulIdentifier","src":"2732:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2486:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2531:9:25","nodeType":"YulTypedName","src":"2531:9:25","type":""},{"name":"dataEnd","nativeSrc":"2542:7:25","nodeType":"YulTypedName","src":"2542:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2554:6:25","nodeType":"YulTypedName","src":"2554:6:25","type":""},{"name":"value1","nativeSrc":"2562:6:25","nodeType":"YulTypedName","src":"2562:6:25","type":""}],"src":"2486:300:25"},{"body":{"nativeSrc":"2888:87:25","nodeType":"YulBlock","src":"2888:87:25","statements":[{"nativeSrc":"2898:26:25","nodeType":"YulAssignment","src":"2898:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2910:9:25","nodeType":"YulIdentifier","src":"2910:9:25"},{"kind":"number","nativeSrc":"2921:2:25","nodeType":"YulLiteral","src":"2921:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2906:3:25","nodeType":"YulIdentifier","src":"2906:3:25"},"nativeSrc":"2906:18:25","nodeType":"YulFunctionCall","src":"2906:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2898:4:25","nodeType":"YulIdentifier","src":"2898:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2940:9:25","nodeType":"YulIdentifier","src":"2940:9:25"},{"arguments":[{"name":"value0","nativeSrc":"2955:6:25","nodeType":"YulIdentifier","src":"2955:6:25"},{"kind":"number","nativeSrc":"2963:4:25","nodeType":"YulLiteral","src":"2963:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2951:3:25","nodeType":"YulIdentifier","src":"2951:3:25"},"nativeSrc":"2951:17:25","nodeType":"YulFunctionCall","src":"2951:17:25"}],"functionName":{"name":"mstore","nativeSrc":"2933:6:25","nodeType":"YulIdentifier","src":"2933:6:25"},"nativeSrc":"2933:36:25","nodeType":"YulFunctionCall","src":"2933:36:25"},"nativeSrc":"2933:36:25","nodeType":"YulExpressionStatement","src":"2933:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2791:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2857:9:25","nodeType":"YulTypedName","src":"2857:9:25","type":""},{"name":"value0","nativeSrc":"2868:6:25","nodeType":"YulTypedName","src":"2868:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2879:4:25","nodeType":"YulTypedName","src":"2879:4:25","type":""}],"src":"2791:184:25"},{"body":{"nativeSrc":"3050:116:25","nodeType":"YulBlock","src":"3050:116:25","statements":[{"body":{"nativeSrc":"3096:16:25","nodeType":"YulBlock","src":"3096:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3105:1:25","nodeType":"YulLiteral","src":"3105:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3108:1:25","nodeType":"YulLiteral","src":"3108:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3098:6:25","nodeType":"YulIdentifier","src":"3098:6:25"},"nativeSrc":"3098:12:25","nodeType":"YulFunctionCall","src":"3098:12:25"},"nativeSrc":"3098:12:25","nodeType":"YulExpressionStatement","src":"3098:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3071:7:25","nodeType":"YulIdentifier","src":"3071:7:25"},{"name":"headStart","nativeSrc":"3080:9:25","nodeType":"YulIdentifier","src":"3080:9:25"}],"functionName":{"name":"sub","nativeSrc":"3067:3:25","nodeType":"YulIdentifier","src":"3067:3:25"},"nativeSrc":"3067:23:25","nodeType":"YulFunctionCall","src":"3067:23:25"},{"kind":"number","nativeSrc":"3092:2:25","nodeType":"YulLiteral","src":"3092:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3063:3:25","nodeType":"YulIdentifier","src":"3063:3:25"},"nativeSrc":"3063:32:25","nodeType":"YulFunctionCall","src":"3063:32:25"},"nativeSrc":"3060:52:25","nodeType":"YulIf","src":"3060:52:25"},{"nativeSrc":"3121:39:25","nodeType":"YulAssignment","src":"3121:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3150:9:25","nodeType":"YulIdentifier","src":"3150:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3131:18:25","nodeType":"YulIdentifier","src":"3131:18:25"},"nativeSrc":"3131:29:25","nodeType":"YulFunctionCall","src":"3131:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3121:6:25","nodeType":"YulIdentifier","src":"3121:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2980:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3016:9:25","nodeType":"YulTypedName","src":"3016:9:25","type":""},{"name":"dataEnd","nativeSrc":"3027:7:25","nodeType":"YulTypedName","src":"3027:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3039:6:25","nodeType":"YulTypedName","src":"3039:6:25","type":""}],"src":"2980:186:25"},{"body":{"nativeSrc":"3258:173:25","nodeType":"YulBlock","src":"3258:173:25","statements":[{"body":{"nativeSrc":"3304:16:25","nodeType":"YulBlock","src":"3304:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3313:1:25","nodeType":"YulLiteral","src":"3313:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3316:1:25","nodeType":"YulLiteral","src":"3316:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3306:6:25","nodeType":"YulIdentifier","src":"3306:6:25"},"nativeSrc":"3306:12:25","nodeType":"YulFunctionCall","src":"3306:12:25"},"nativeSrc":"3306:12:25","nodeType":"YulExpressionStatement","src":"3306:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3279:7:25","nodeType":"YulIdentifier","src":"3279:7:25"},{"name":"headStart","nativeSrc":"3288:9:25","nodeType":"YulIdentifier","src":"3288:9:25"}],"functionName":{"name":"sub","nativeSrc":"3275:3:25","nodeType":"YulIdentifier","src":"3275:3:25"},"nativeSrc":"3275:23:25","nodeType":"YulFunctionCall","src":"3275:23:25"},{"kind":"number","nativeSrc":"3300:2:25","nodeType":"YulLiteral","src":"3300:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3271:3:25","nodeType":"YulIdentifier","src":"3271:3:25"},"nativeSrc":"3271:32:25","nodeType":"YulFunctionCall","src":"3271:32:25"},"nativeSrc":"3268:52:25","nodeType":"YulIf","src":"3268:52:25"},{"nativeSrc":"3329:39:25","nodeType":"YulAssignment","src":"3329:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3358:9:25","nodeType":"YulIdentifier","src":"3358:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3339:18:25","nodeType":"YulIdentifier","src":"3339:18:25"},"nativeSrc":"3339:29:25","nodeType":"YulFunctionCall","src":"3339:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3329:6:25","nodeType":"YulIdentifier","src":"3329:6:25"}]},{"nativeSrc":"3377:48:25","nodeType":"YulAssignment","src":"3377:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3410:9:25","nodeType":"YulIdentifier","src":"3410:9:25"},{"kind":"number","nativeSrc":"3421:2:25","nodeType":"YulLiteral","src":"3421:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3406:3:25","nodeType":"YulIdentifier","src":"3406:3:25"},"nativeSrc":"3406:18:25","nodeType":"YulFunctionCall","src":"3406:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3387:18:25","nodeType":"YulIdentifier","src":"3387:18:25"},"nativeSrc":"3387:38:25","nodeType":"YulFunctionCall","src":"3387:38:25"},"variableNames":[{"name":"value1","nativeSrc":"3377:6:25","nodeType":"YulIdentifier","src":"3377:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"3171:260:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3216:9:25","nodeType":"YulTypedName","src":"3216:9:25","type":""},{"name":"dataEnd","nativeSrc":"3227:7:25","nodeType":"YulTypedName","src":"3227:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3239:6:25","nodeType":"YulTypedName","src":"3239:6:25","type":""},{"name":"value1","nativeSrc":"3247:6:25","nodeType":"YulTypedName","src":"3247:6:25","type":""}],"src":"3171:260:25"},{"body":{"nativeSrc":"3491:325:25","nodeType":"YulBlock","src":"3491:325:25","statements":[{"nativeSrc":"3501:22:25","nodeType":"YulAssignment","src":"3501:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"3515:1:25","nodeType":"YulLiteral","src":"3515:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"3518:4:25","nodeType":"YulIdentifier","src":"3518:4:25"}],"functionName":{"name":"shr","nativeSrc":"3511:3:25","nodeType":"YulIdentifier","src":"3511:3:25"},"nativeSrc":"3511:12:25","nodeType":"YulFunctionCall","src":"3511:12:25"},"variableNames":[{"name":"length","nativeSrc":"3501:6:25","nodeType":"YulIdentifier","src":"3501:6:25"}]},{"nativeSrc":"3532:38:25","nodeType":"YulVariableDeclaration","src":"3532:38:25","value":{"arguments":[{"name":"data","nativeSrc":"3562:4:25","nodeType":"YulIdentifier","src":"3562:4:25"},{"kind":"number","nativeSrc":"3568:1:25","nodeType":"YulLiteral","src":"3568:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3558:3:25","nodeType":"YulIdentifier","src":"3558:3:25"},"nativeSrc":"3558:12:25","nodeType":"YulFunctionCall","src":"3558:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"3536:18:25","nodeType":"YulTypedName","src":"3536:18:25","type":""}]},{"body":{"nativeSrc":"3609:31:25","nodeType":"YulBlock","src":"3609:31:25","statements":[{"nativeSrc":"3611:27:25","nodeType":"YulAssignment","src":"3611:27:25","value":{"arguments":[{"name":"length","nativeSrc":"3625:6:25","nodeType":"YulIdentifier","src":"3625:6:25"},{"kind":"number","nativeSrc":"3633:4:25","nodeType":"YulLiteral","src":"3633:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"3621:3:25","nodeType":"YulIdentifier","src":"3621:3:25"},"nativeSrc":"3621:17:25","nodeType":"YulFunctionCall","src":"3621:17:25"},"variableNames":[{"name":"length","nativeSrc":"3611:6:25","nodeType":"YulIdentifier","src":"3611:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3589:18:25","nodeType":"YulIdentifier","src":"3589:18:25"}],"functionName":{"name":"iszero","nativeSrc":"3582:6:25","nodeType":"YulIdentifier","src":"3582:6:25"},"nativeSrc":"3582:26:25","nodeType":"YulFunctionCall","src":"3582:26:25"},"nativeSrc":"3579:61:25","nodeType":"YulIf","src":"3579:61:25"},{"body":{"nativeSrc":"3699:111:25","nodeType":"YulBlock","src":"3699:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3720:1:25","nodeType":"YulLiteral","src":"3720:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3727:3:25","nodeType":"YulLiteral","src":"3727:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"3732:10:25","nodeType":"YulLiteral","src":"3732:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3723:3:25","nodeType":"YulIdentifier","src":"3723:3:25"},"nativeSrc":"3723:20:25","nodeType":"YulFunctionCall","src":"3723:20:25"}],"functionName":{"name":"mstore","nativeSrc":"3713:6:25","nodeType":"YulIdentifier","src":"3713:6:25"},"nativeSrc":"3713:31:25","nodeType":"YulFunctionCall","src":"3713:31:25"},"nativeSrc":"3713:31:25","nodeType":"YulExpressionStatement","src":"3713:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3764:1:25","nodeType":"YulLiteral","src":"3764:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"3767:4:25","nodeType":"YulLiteral","src":"3767:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3757:6:25","nodeType":"YulIdentifier","src":"3757:6:25"},"nativeSrc":"3757:15:25","nodeType":"YulFunctionCall","src":"3757:15:25"},"nativeSrc":"3757:15:25","nodeType":"YulExpressionStatement","src":"3757:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3792:1:25","nodeType":"YulLiteral","src":"3792:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3795:4:25","nodeType":"YulLiteral","src":"3795:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3785:6:25","nodeType":"YulIdentifier","src":"3785:6:25"},"nativeSrc":"3785:15:25","nodeType":"YulFunctionCall","src":"3785:15:25"},"nativeSrc":"3785:15:25","nodeType":"YulExpressionStatement","src":"3785:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3655:18:25","nodeType":"YulIdentifier","src":"3655:18:25"},{"arguments":[{"name":"length","nativeSrc":"3678:6:25","nodeType":"YulIdentifier","src":"3678:6:25"},{"kind":"number","nativeSrc":"3686:2:25","nodeType":"YulLiteral","src":"3686:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3675:2:25","nodeType":"YulIdentifier","src":"3675:2:25"},"nativeSrc":"3675:14:25","nodeType":"YulFunctionCall","src":"3675:14:25"}],"functionName":{"name":"eq","nativeSrc":"3652:2:25","nodeType":"YulIdentifier","src":"3652:2:25"},"nativeSrc":"3652:38:25","nodeType":"YulFunctionCall","src":"3652:38:25"},"nativeSrc":"3649:161:25","nodeType":"YulIf","src":"3649:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"3436:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3471:4:25","nodeType":"YulTypedName","src":"3471:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3480:6:25","nodeType":"YulTypedName","src":"3480:6:25","type":""}],"src":"3436:380:25"},{"body":{"nativeSrc":"3978:188:25","nodeType":"YulBlock","src":"3978:188:25","statements":[{"nativeSrc":"3988:26:25","nodeType":"YulAssignment","src":"3988:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4000:9:25","nodeType":"YulIdentifier","src":"4000:9:25"},{"kind":"number","nativeSrc":"4011:2:25","nodeType":"YulLiteral","src":"4011:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3996:3:25","nodeType":"YulIdentifier","src":"3996:3:25"},"nativeSrc":"3996:18:25","nodeType":"YulFunctionCall","src":"3996:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3988:4:25","nodeType":"YulIdentifier","src":"3988:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4030:9:25","nodeType":"YulIdentifier","src":"4030:9:25"},{"arguments":[{"name":"value0","nativeSrc":"4045:6:25","nodeType":"YulIdentifier","src":"4045:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4061:3:25","nodeType":"YulLiteral","src":"4061:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4066:1:25","nodeType":"YulLiteral","src":"4066:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4057:3:25","nodeType":"YulIdentifier","src":"4057:3:25"},"nativeSrc":"4057:11:25","nodeType":"YulFunctionCall","src":"4057:11:25"},{"kind":"number","nativeSrc":"4070:1:25","nodeType":"YulLiteral","src":"4070:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4053:3:25","nodeType":"YulIdentifier","src":"4053:3:25"},"nativeSrc":"4053:19:25","nodeType":"YulFunctionCall","src":"4053:19:25"}],"functionName":{"name":"and","nativeSrc":"4041:3:25","nodeType":"YulIdentifier","src":"4041:3:25"},"nativeSrc":"4041:32:25","nodeType":"YulFunctionCall","src":"4041:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4023:6:25","nodeType":"YulIdentifier","src":"4023:6:25"},"nativeSrc":"4023:51:25","nodeType":"YulFunctionCall","src":"4023:51:25"},"nativeSrc":"4023:51:25","nodeType":"YulExpressionStatement","src":"4023:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4094:9:25","nodeType":"YulIdentifier","src":"4094:9:25"},{"kind":"number","nativeSrc":"4105:2:25","nodeType":"YulLiteral","src":"4105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4090:3:25","nodeType":"YulIdentifier","src":"4090:3:25"},"nativeSrc":"4090:18:25","nodeType":"YulFunctionCall","src":"4090:18:25"},{"name":"value1","nativeSrc":"4110:6:25","nodeType":"YulIdentifier","src":"4110:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4083:6:25","nodeType":"YulIdentifier","src":"4083:6:25"},"nativeSrc":"4083:34:25","nodeType":"YulFunctionCall","src":"4083:34:25"},"nativeSrc":"4083:34:25","nodeType":"YulExpressionStatement","src":"4083:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4137:9:25","nodeType":"YulIdentifier","src":"4137:9:25"},{"kind":"number","nativeSrc":"4148:2:25","nodeType":"YulLiteral","src":"4148:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4133:3:25","nodeType":"YulIdentifier","src":"4133:3:25"},"nativeSrc":"4133:18:25","nodeType":"YulFunctionCall","src":"4133:18:25"},{"name":"value2","nativeSrc":"4153:6:25","nodeType":"YulIdentifier","src":"4153:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4126:6:25","nodeType":"YulIdentifier","src":"4126:6:25"},"nativeSrc":"4126:34:25","nodeType":"YulFunctionCall","src":"4126:34:25"},"nativeSrc":"4126:34:25","nodeType":"YulExpressionStatement","src":"4126:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"3821:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3931:9:25","nodeType":"YulTypedName","src":"3931:9:25","type":""},{"name":"value2","nativeSrc":"3942:6:25","nodeType":"YulTypedName","src":"3942:6:25","type":""},{"name":"value1","nativeSrc":"3950:6:25","nodeType":"YulTypedName","src":"3950:6:25","type":""},{"name":"value0","nativeSrc":"3958:6:25","nodeType":"YulTypedName","src":"3958:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3969:4:25","nodeType":"YulTypedName","src":"3969:4:25","type":""}],"src":"3821:345:25"},{"body":{"nativeSrc":"4272:102:25","nodeType":"YulBlock","src":"4272:102:25","statements":[{"nativeSrc":"4282:26:25","nodeType":"YulAssignment","src":"4282:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4294:9:25","nodeType":"YulIdentifier","src":"4294:9:25"},{"kind":"number","nativeSrc":"4305:2:25","nodeType":"YulLiteral","src":"4305:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4290:3:25","nodeType":"YulIdentifier","src":"4290:3:25"},"nativeSrc":"4290:18:25","nodeType":"YulFunctionCall","src":"4290:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4282:4:25","nodeType":"YulIdentifier","src":"4282:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4324:9:25","nodeType":"YulIdentifier","src":"4324:9:25"},{"arguments":[{"name":"value0","nativeSrc":"4339:6:25","nodeType":"YulIdentifier","src":"4339:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4355:3:25","nodeType":"YulLiteral","src":"4355:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4360:1:25","nodeType":"YulLiteral","src":"4360:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4351:3:25","nodeType":"YulIdentifier","src":"4351:3:25"},"nativeSrc":"4351:11:25","nodeType":"YulFunctionCall","src":"4351:11:25"},{"kind":"number","nativeSrc":"4364:1:25","nodeType":"YulLiteral","src":"4364:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4347:3:25","nodeType":"YulIdentifier","src":"4347:3:25"},"nativeSrc":"4347:19:25","nodeType":"YulFunctionCall","src":"4347:19:25"}],"functionName":{"name":"and","nativeSrc":"4335:3:25","nodeType":"YulIdentifier","src":"4335:3:25"},"nativeSrc":"4335:32:25","nodeType":"YulFunctionCall","src":"4335:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4317:6:25","nodeType":"YulIdentifier","src":"4317:6:25"},"nativeSrc":"4317:51:25","nodeType":"YulFunctionCall","src":"4317:51:25"},"nativeSrc":"4317:51:25","nodeType":"YulExpressionStatement","src":"4317:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4171:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4241:9:25","nodeType":"YulTypedName","src":"4241:9:25","type":""},{"name":"value0","nativeSrc":"4252:6:25","nodeType":"YulTypedName","src":"4252:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4263:4:25","nodeType":"YulTypedName","src":"4263:4:25","type":""}],"src":"4171:203:25"},{"body":{"nativeSrc":"4427:174:25","nodeType":"YulBlock","src":"4427:174:25","statements":[{"nativeSrc":"4437:16:25","nodeType":"YulAssignment","src":"4437:16:25","value":{"arguments":[{"name":"x","nativeSrc":"4448:1:25","nodeType":"YulIdentifier","src":"4448:1:25"},{"name":"y","nativeSrc":"4451:1:25","nodeType":"YulIdentifier","src":"4451:1:25"}],"functionName":{"name":"add","nativeSrc":"4444:3:25","nodeType":"YulIdentifier","src":"4444:3:25"},"nativeSrc":"4444:9:25","nodeType":"YulFunctionCall","src":"4444:9:25"},"variableNames":[{"name":"sum","nativeSrc":"4437:3:25","nodeType":"YulIdentifier","src":"4437:3:25"}]},{"body":{"nativeSrc":"4484:111:25","nodeType":"YulBlock","src":"4484:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4505:1:25","nodeType":"YulLiteral","src":"4505:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4512:3:25","nodeType":"YulLiteral","src":"4512:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"4517:10:25","nodeType":"YulLiteral","src":"4517:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4508:3:25","nodeType":"YulIdentifier","src":"4508:3:25"},"nativeSrc":"4508:20:25","nodeType":"YulFunctionCall","src":"4508:20:25"}],"functionName":{"name":"mstore","nativeSrc":"4498:6:25","nodeType":"YulIdentifier","src":"4498:6:25"},"nativeSrc":"4498:31:25","nodeType":"YulFunctionCall","src":"4498:31:25"},"nativeSrc":"4498:31:25","nodeType":"YulExpressionStatement","src":"4498:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4549:1:25","nodeType":"YulLiteral","src":"4549:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"4552:4:25","nodeType":"YulLiteral","src":"4552:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4542:6:25","nodeType":"YulIdentifier","src":"4542:6:25"},"nativeSrc":"4542:15:25","nodeType":"YulFunctionCall","src":"4542:15:25"},"nativeSrc":"4542:15:25","nodeType":"YulExpressionStatement","src":"4542:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4577:1:25","nodeType":"YulLiteral","src":"4577:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4580:4:25","nodeType":"YulLiteral","src":"4580:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4570:6:25","nodeType":"YulIdentifier","src":"4570:6:25"},"nativeSrc":"4570:15:25","nodeType":"YulFunctionCall","src":"4570:15:25"},"nativeSrc":"4570:15:25","nodeType":"YulExpressionStatement","src":"4570:15:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4468:1:25","nodeType":"YulIdentifier","src":"4468:1:25"},{"name":"sum","nativeSrc":"4471:3:25","nodeType":"YulIdentifier","src":"4471:3:25"}],"functionName":{"name":"gt","nativeSrc":"4465:2:25","nodeType":"YulIdentifier","src":"4465:2:25"},"nativeSrc":"4465:10:25","nodeType":"YulFunctionCall","src":"4465:10:25"},"nativeSrc":"4462:133:25","nodeType":"YulIf","src":"4462:133:25"}]},"name":"checked_add_t_uint256","nativeSrc":"4379:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4410:1:25","nodeType":"YulTypedName","src":"4410:1:25","type":""},{"name":"y","nativeSrc":"4413:1:25","nodeType":"YulTypedName","src":"4413:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4419:3:25","nodeType":"YulTypedName","src":"4419:3:25","type":""}],"src":"4379:222:25"},{"body":{"nativeSrc":"4735:145:25","nodeType":"YulBlock","src":"4735:145:25","statements":[{"nativeSrc":"4745:26:25","nodeType":"YulAssignment","src":"4745:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4757:9:25","nodeType":"YulIdentifier","src":"4757:9:25"},{"kind":"number","nativeSrc":"4768:2:25","nodeType":"YulLiteral","src":"4768:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4753:3:25","nodeType":"YulIdentifier","src":"4753:3:25"},"nativeSrc":"4753:18:25","nodeType":"YulFunctionCall","src":"4753:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4745:4:25","nodeType":"YulIdentifier","src":"4745:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4787:9:25","nodeType":"YulIdentifier","src":"4787:9:25"},{"arguments":[{"name":"value0","nativeSrc":"4802:6:25","nodeType":"YulIdentifier","src":"4802:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4818:3:25","nodeType":"YulLiteral","src":"4818:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4823:1:25","nodeType":"YulLiteral","src":"4823:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4814:3:25","nodeType":"YulIdentifier","src":"4814:3:25"},"nativeSrc":"4814:11:25","nodeType":"YulFunctionCall","src":"4814:11:25"},{"kind":"number","nativeSrc":"4827:1:25","nodeType":"YulLiteral","src":"4827:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4810:3:25","nodeType":"YulIdentifier","src":"4810:3:25"},"nativeSrc":"4810:19:25","nodeType":"YulFunctionCall","src":"4810:19:25"}],"functionName":{"name":"and","nativeSrc":"4798:3:25","nodeType":"YulIdentifier","src":"4798:3:25"},"nativeSrc":"4798:32:25","nodeType":"YulFunctionCall","src":"4798:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4780:6:25","nodeType":"YulIdentifier","src":"4780:6:25"},"nativeSrc":"4780:51:25","nodeType":"YulFunctionCall","src":"4780:51:25"},"nativeSrc":"4780:51:25","nodeType":"YulExpressionStatement","src":"4780:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4851:9:25","nodeType":"YulIdentifier","src":"4851:9:25"},{"kind":"number","nativeSrc":"4862:2:25","nodeType":"YulLiteral","src":"4862:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4847:3:25","nodeType":"YulIdentifier","src":"4847:3:25"},"nativeSrc":"4847:18:25","nodeType":"YulFunctionCall","src":"4847:18:25"},{"name":"value1","nativeSrc":"4867:6:25","nodeType":"YulIdentifier","src":"4867:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4840:6:25","nodeType":"YulIdentifier","src":"4840:6:25"},"nativeSrc":"4840:34:25","nodeType":"YulFunctionCall","src":"4840:34:25"},"nativeSrc":"4840:34:25","nodeType":"YulExpressionStatement","src":"4840:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"4606:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4696:9:25","nodeType":"YulTypedName","src":"4696:9:25","type":""},{"name":"value1","nativeSrc":"4707:6:25","nodeType":"YulTypedName","src":"4707:6:25","type":""},{"name":"value0","nativeSrc":"4715:6:25","nodeType":"YulTypedName","src":"4715:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4726:4:25","nodeType":"YulTypedName","src":"4726:4:25","type":""}],"src":"4606:274:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806340c10f19116100a2578063a217fddf11610071578063a217fddf14610241578063a9059cbb14610249578063d53913931461025c578063d547741f14610283578063dd62ed3e1461029657600080fd5b806340c10f19146101ea57806370a08231146101fd57806391d148541461022657806395d89b411461023957600080fd5b806323b872dd116100e957806323b872dd1461017d578063248a9ca3146101905780632f2ff15d146101b3578063313ce567146101c857806336568abe146101d757600080fd5b806301ffc9a71461011b57806306fdde0314610143578063095ea7b31461015857806318160ddd1461016b575b600080fd5b61012e610129366004610942565b6102cf565b60405190151581526020015b60405180910390f35b61014b610306565b60405161013a9190610973565b61012e6101663660046109dd565b610398565b6002545b60405190815260200161013a565b61012e61018b366004610a07565b6103b0565b61016f61019e366004610a44565b60009081526005602052604090206001015490565b6101c66101c1366004610a5d565b6103d4565b005b6040516012815260200161013a565b6101c66101e5366004610a5d565b6103ff565b6101c66101f83660046109dd565b610437565b61016f61020b366004610a89565b6001600160a01b031660009081526020819052604090205490565b61012e610234366004610a5d565b61046b565b61014b610496565b61016f600081565b61012e6102573660046109dd565b6104a5565b61016f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6101c6610291366004610a5d565b6104b3565b61016f6102a4366004610aa4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216637965db0b60e01b148061030057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461031590610ace565b80601f016020809104026020016040519081016040528092919081815260200182805461034190610ace565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b6000336103a68185856104d8565b5060019392505050565b6000336103be8582856104e5565b6103c9858585610563565b506001949350505050565b6000828152600560205260409020600101546103ef816105c2565b6103f983836105cf565b50505050565b6001600160a01b03811633146104285760405163334bd91960e11b815260040160405180910390fd5b6104328282610663565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610461816105c2565b61043283836106d0565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461031590610ace565b6000336103a6818585610563565b6000828152600560205260409020600101546104ce816105c2565b6103f98383610663565b610432838383600161070a565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103f9578181101561055457604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103f98484848403600061070a565b6001600160a01b03831661058d57604051634b637e8f60e11b81526000600482015260240161054b565b6001600160a01b0382166105b75760405163ec442f0560e01b81526000600482015260240161054b565b6104328383836107df565b6105cc8133610909565b50565b60006105db838361046b565b61065b5760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556106133390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610300565b506000610300565b600061066f838361046b565b1561065b5760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610300565b6001600160a01b0382166106fa5760405163ec442f0560e01b81526000600482015260240161054b565b610706600083836107df565b5050565b6001600160a01b0384166107345760405163e602df0560e01b81526000600482015260240161054b565b6001600160a01b03831661075e57604051634a1406b160e11b81526000600482015260240161054b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103f957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d191815260200190565b60405180910390a350505050565b6001600160a01b03831661080a5780600260008282546107ff9190610b08565b9091555061087c9050565b6001600160a01b0383166000908152602081905260409020548181101561085d5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161054b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610898576002805482900390556108b7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108fc91815260200190565b60405180910390a3505050565b610913828261046b565b6107065760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161054b565b60006020828403121561095457600080fd5b81356001600160e01b03198116811461096c57600080fd5b9392505050565b602081526000825180602084015260005b818110156109a15760208186018101516040868401015201610984565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146109d857600080fd5b919050565b600080604083850312156109f057600080fd5b6109f9836109c1565b946020939093013593505050565b600080600060608486031215610a1c57600080fd5b610a25846109c1565b9250610a33602085016109c1565b929592945050506040919091013590565b600060208284031215610a5657600080fd5b5035919050565b60008060408385031215610a7057600080fd5b82359150610a80602084016109c1565b90509250929050565b600060208284031215610a9b57600080fd5b61096c826109c1565b60008060408385031215610ab757600080fd5b610ac0836109c1565b9150610a80602084016109c1565b600181811c90821680610ae257607f821691505b602082108103610b0257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030057634e487b7160e01b600052601160045260246000fdfea264697066735822122077a9e7c63065340fdfcc44cfcb592571276ae52462a715e15a7f8acad70c759764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x496 JUMP JUMPDEST PUSH2 0x16F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x16F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x300 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xACE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0xACE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x363 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x371 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x4D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3BE DUP6 DUP3 DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x3C9 DUP6 DUP6 DUP6 PUSH2 0x563 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EF DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0x5CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x432 DUP3 DUP3 PUSH2 0x663 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x461 DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4CE DUP2 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x3F9 DUP4 DUP4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x3F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x432 DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x5CC DUP2 CALLER PUSH2 0x909 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB DUP4 DUP4 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x65B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x613 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x300 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66F DUP4 DUP4 PUSH2 0x46B JUMP JUMPDEST ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x706 PUSH1 0x0 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x80A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x87C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x898 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8FC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x913 DUP3 DUP3 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x984 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F9 DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA25 DUP5 PUSH2 0x9C1 JUMP JUMPDEST SWAP3 POP PUSH2 0xA33 PUSH1 0x20 DUP6 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA80 PUSH1 0x20 DUP5 ADD PUSH2 0x9C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC0 DUP4 PUSH2 0x9C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA80 PUSH1 0x20 DUP5 ADD PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAE2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x300 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xA9E7C63065340FDFCC44CFCB592571276AE52462A715E15A PUSH32 0x8ACAD70C759764736F6C634300081C0033000000000000000000000000000000 ","sourceMap":"305:390:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;1760:89:6;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1658:25:25;;;1646:2;1631:18;2830:97:6;1512:177:25;4757:244:6;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;:::-;;2688:82:6;;;2761:2;2933:36:25;;2921:2;2906:18;2688:82:6;2791:184:25;5328:245:0;;;;;;:::i;:::-;;:::i;586:107:21:-;;;;;;:::i;:::-;;:::i;2985:116:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:6;3050:7;3076:18;;;;;;;;;;;;2985:116;2854:136:0;;;;;;:::i;:::-;;:::i;1962:93:6:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;3296:178:6;;;;;;:::i;:::-;;:::i;354:62:21:-;;392:24;354:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:6;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:16;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1760:89:6:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:12;4106:31:6;735:10:12;4122:7:6;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:6;;3979:186;-1:-1:-1;;;3979:186:6:o;4757:244::-;4844:4;735:10:12;4900:37:6;4916:4;735:10:12;4931:5:6;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:6;;4757:244;-1:-1:-1;;;;4757:244:6:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:12;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;586:107:21:-;392:24;2464:16:0;2475:4;2464:10;:16::i;:::-;669:17:21::1;675:2;679:6;669:5;:17::i;2854:136:0:-:0;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1962:93:6:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:12;3419:27:6;735:10:12;3436:2:6;3440:5;3419:9;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8707:128:6:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:6;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:6;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:6;;-1:-1:-1;;;;;4041:32:25;;10668:60:6;;;4023:51:25;4090:18;;;4083:34;;;4133:18;;;4126:34;;;3996:18;;10668:60:6;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:6;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:6;;5525:1;5498:30;;;4317:51:25;4290:18;;5498:30:6;4171:203:25;5453:86:6;-1:-1:-1;;;;;5552:16:6;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:6;;5620:1;5591:32;;;4317:51:25;4290:18;;5591:32:6;4171:203:25;5548:86:6;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3199:103:0:-;3265:30;3276:4;735:10:12;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:12;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;7439:208:6;-1:-1:-1;;;;;7509:21:6;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:6;;7582:1;7553:32;;;4317:51:25;4290:18;;7553:32:6;4171:203:25;7505:91:6;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;-1:-1:-1;;;;;9794:19:6;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:6;;9865:1;9836:32;;;4317:51:25;4290:18;;9836:32:6;4171:203:25;9790:89:6;-1:-1:-1;;;;;9892:21:6;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:6;;9964:1;9936:31;;;4317:51:25;4290:18;;9936:31:6;4171:203:25;9888:90:6;-1:-1:-1;;;;;9987:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:6;10075:5;-1:-1:-1;;;;;10066:31:6;;10091:5;10066:31;;;;1658:25:25;;1646:2;1631:18;;1512:177;10066:31:6;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:6;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:6;;-1:-1:-1;6074:540:6;;-1:-1:-1;;;;;6288:15:6;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:6;;-1:-1:-1;;;;;4041:32:25;;6367:50:6;;;4023:51:25;4090:18;;;4083:34;;;4133:18;;;4126:34;;;3996:18;;6367:50:6;3821:345:25;6317:115:6;-1:-1:-1;;;;;6552:15:6;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:6;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:6;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:6;7073:4;-1:-1:-1;;;;;7064:25:6;;7083:5;7064:25;;;;1658::25;;1646:2;1631:18;;1512:177;7064:25:6;;;;;;;;5989:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;4798:32:25;;3565:47:0;;;4780:51:25;4847:18;;;4840:34;;;4753:18;;3565:47:0;4606:274:25;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:25:o;497:527::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1029:173::-;1097:20;;-1:-1:-1;;;;;1146:31:25;;1136:42;;1126:70;;1192:1;1189;1182:12;1126:70;1029:173;;;:::o;1207:300::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1473:2;1458:18;;;;1445:32;;-1:-1:-1;;;1207:300:25:o;1694:374::-;1771:6;1779;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1879:29;1898:9;1879:29;:::i;:::-;1869:39;;1927:38;1961:2;1950:9;1946:18;1927:38;:::i;:::-;1694:374;;1917:48;;-1:-1:-1;;;2034:2:25;2019:18;;;;2006:32;;1694:374::o;2073:226::-;2132:6;2185:2;2173:9;2164:7;2160:23;2156:32;2153:52;;;2201:1;2198;2191:12;2153:52;-1:-1:-1;2246:23:25;;2073:226;-1:-1:-1;2073:226:25:o;2486:300::-;2554:6;2562;2615:2;2603:9;2594:7;2590:23;2586:32;2583:52;;;2631:1;2628;2621:12;2583:52;2676:23;;;-1:-1:-1;2742:38:25;2776:2;2761:18;;2742:38;:::i;:::-;2732:48;;2486:300;;;;;:::o;2980:186::-;3039:6;3092:2;3080:9;3071:7;3067:23;3063:32;3060:52;;;3108:1;3105;3098:12;3060:52;3131:29;3150:9;3131:29;:::i;3171:260::-;3239:6;3247;3300:2;3288:9;3279:7;3275:23;3271:32;3268:52;;;3316:1;3313;3306:12;3268:52;3339:29;3358:9;3339:29;:::i;:::-;3329:39;;3387:38;3421:2;3410:9;3406:18;3387:38;:::i;3436:380::-;3515:1;3511:12;;;;3558;;;3579:61;;3633:4;3625:6;3621:17;3611:27;;3579:61;3686:2;3678:6;3675:14;3655:18;3652:38;3649:161;;3732:10;3727:3;3723:20;3720:1;3713:31;3767:4;3764:1;3757:15;3795:4;3792:1;3785:15;3649:161;;3436:380;;;:::o;4379:222::-;4444:9;;;4465:10;;;4462:133;;;4517:10;4512:3;4508:20;4505:1;4498:31;4552:4;4549:1;4542:15;4580:4;4577:1;4570:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Governance / rebate token \\u2013\\u202fminted 1\\u202f:\\u202f1 when users withdraw \\u201casCxpt = true\\u201d.  Vault is the sole minter.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CXPTToken.sol\":\"CXPTToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/CXPTToken.sol\":{\"keccak256\":\"0xf7c1cf6f4cd0b1eef4e07975a4837b59056bac28c074135b3b96447db5c5f7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919427838950b573448476b71320ad0d91f3246ccbd41fe333608a77df35c247\",\"dweb:/ipfs/QmUa2z4XdeEzNRWwWytDin9ijMp4pL3WHTpscTHo2JbVzc\"]}},\"version\":1}"}},"contracts/SynthERC20.sol":{"SynthERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"address","name":"initialAdmin","type":"address"},{"internalType":"address","name":"minterAndBurner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"BURNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7009":{"entryPoint":null,"id":7009,"parameterSlots":5,"returnSlots":0},"@_899":{"entryPoint":null,"id":899,"parameterSlots":2,"returnSlots":0},"@_add_6235":{"entryPoint":null,"id":6235,"parameterSlots":2,"returnSlots":1},"@_contains_6381":{"entryPoint":null,"id":6381,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":483,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_651":{"entryPoint":427,"id":651,"parameterSlots":2,"returnSlots":1},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@add_6591":{"entryPoint":657,"id":6591,"parameterSlots":2,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_address_fromMemory":{"entryPoint":957,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_tuple_t_stringliteral_2f7894880915fee4c23e5de34cdb65b061b927752ccc1b307eb1bc8142eec655__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31b9a123421668ab96a3606bf31de15aa3f9201adf8d135afa05f280ae599e7b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1178,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1257,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1120,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":744,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5391:25","nodeType":"YulBlock","src":"0:5391:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"46:95:25","nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:25","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:25","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:25","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:25","nodeType":"YulIdentifier","src":"66:3:25"},"nativeSrc":"66:20:25","nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nativeSrc":"56:6:25","nodeType":"YulIdentifier","src":"56:6:25"},"nativeSrc":"56:31:25","nodeType":"YulFunctionCall","src":"56:31:25"},"nativeSrc":"56:31:25","nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:25","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:25","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:25","nodeType":"YulIdentifier","src":"96:6:25"},"nativeSrc":"96:15:25","nodeType":"YulFunctionCall","src":"96:15:25"},"nativeSrc":"96:15:25","nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:25","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:25","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:25","nodeType":"YulIdentifier","src":"120:6:25"},"nativeSrc":"120:15:25","nodeType":"YulFunctionCall","src":"120:15:25"},"nativeSrc":"120:15:25","nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nativeSrc":"14:127:25","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nativeSrc":"210:770:25","nodeType":"YulBlock","src":"210:770:25","statements":[{"body":{"nativeSrc":"259:16:25","nodeType":"YulBlock","src":"259:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"268:1:25","nodeType":"YulLiteral","src":"268:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"271:1:25","nodeType":"YulLiteral","src":"271:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"261:6:25","nodeType":"YulIdentifier","src":"261:6:25"},"nativeSrc":"261:12:25","nodeType":"YulFunctionCall","src":"261:12:25"},"nativeSrc":"261:12:25","nodeType":"YulExpressionStatement","src":"261:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"238:6:25","nodeType":"YulIdentifier","src":"238:6:25"},{"kind":"number","nativeSrc":"246:4:25","nodeType":"YulLiteral","src":"246:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"234:3:25","nodeType":"YulIdentifier","src":"234:3:25"},"nativeSrc":"234:17:25","nodeType":"YulFunctionCall","src":"234:17:25"},{"name":"end","nativeSrc":"253:3:25","nodeType":"YulIdentifier","src":"253:3:25"}],"functionName":{"name":"slt","nativeSrc":"230:3:25","nodeType":"YulIdentifier","src":"230:3:25"},"nativeSrc":"230:27:25","nodeType":"YulFunctionCall","src":"230:27:25"}],"functionName":{"name":"iszero","nativeSrc":"223:6:25","nodeType":"YulIdentifier","src":"223:6:25"},"nativeSrc":"223:35:25","nodeType":"YulFunctionCall","src":"223:35:25"},"nativeSrc":"220:55:25","nodeType":"YulIf","src":"220:55:25"},{"nativeSrc":"284:27:25","nodeType":"YulVariableDeclaration","src":"284:27:25","value":{"arguments":[{"name":"offset","nativeSrc":"304:6:25","nodeType":"YulIdentifier","src":"304:6:25"}],"functionName":{"name":"mload","nativeSrc":"298:5:25","nodeType":"YulIdentifier","src":"298:5:25"},"nativeSrc":"298:13:25","nodeType":"YulFunctionCall","src":"298:13:25"},"variables":[{"name":"length","nativeSrc":"288:6:25","nodeType":"YulTypedName","src":"288:6:25","type":""}]},{"body":{"nativeSrc":"354:22:25","nodeType":"YulBlock","src":"354:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"356:16:25","nodeType":"YulIdentifier","src":"356:16:25"},"nativeSrc":"356:18:25","nodeType":"YulFunctionCall","src":"356:18:25"},"nativeSrc":"356:18:25","nodeType":"YulExpressionStatement","src":"356:18:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"326:6:25","nodeType":"YulIdentifier","src":"326:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"342:2:25","nodeType":"YulLiteral","src":"342:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"346:1:25","nodeType":"YulLiteral","src":"346:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"338:3:25","nodeType":"YulIdentifier","src":"338:3:25"},"nativeSrc":"338:10:25","nodeType":"YulFunctionCall","src":"338:10:25"},{"kind":"number","nativeSrc":"350:1:25","nodeType":"YulLiteral","src":"350:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"334:3:25","nodeType":"YulIdentifier","src":"334:3:25"},"nativeSrc":"334:18:25","nodeType":"YulFunctionCall","src":"334:18:25"}],"functionName":{"name":"gt","nativeSrc":"323:2:25","nodeType":"YulIdentifier","src":"323:2:25"},"nativeSrc":"323:30:25","nodeType":"YulFunctionCall","src":"323:30:25"},"nativeSrc":"320:56:25","nodeType":"YulIf","src":"320:56:25"},{"nativeSrc":"385:23:25","nodeType":"YulVariableDeclaration","src":"385:23:25","value":{"arguments":[{"kind":"number","nativeSrc":"405:2:25","nodeType":"YulLiteral","src":"405:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"399:5:25","nodeType":"YulIdentifier","src":"399:5:25"},"nativeSrc":"399:9:25","nodeType":"YulFunctionCall","src":"399:9:25"},"variables":[{"name":"memPtr","nativeSrc":"389:6:25","nodeType":"YulTypedName","src":"389:6:25","type":""}]},{"nativeSrc":"417:85:25","nodeType":"YulVariableDeclaration","src":"417:85:25","value":{"arguments":[{"name":"memPtr","nativeSrc":"439:6:25","nodeType":"YulIdentifier","src":"439:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"463:6:25","nodeType":"YulIdentifier","src":"463:6:25"},{"kind":"number","nativeSrc":"471:4:25","nodeType":"YulLiteral","src":"471:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"459:3:25","nodeType":"YulIdentifier","src":"459:3:25"},"nativeSrc":"459:17:25","nodeType":"YulFunctionCall","src":"459:17:25"},{"arguments":[{"kind":"number","nativeSrc":"482:2:25","nodeType":"YulLiteral","src":"482:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"478:3:25","nodeType":"YulIdentifier","src":"478:3:25"},"nativeSrc":"478:7:25","nodeType":"YulFunctionCall","src":"478:7:25"}],"functionName":{"name":"and","nativeSrc":"455:3:25","nodeType":"YulIdentifier","src":"455:3:25"},"nativeSrc":"455:31:25","nodeType":"YulFunctionCall","src":"455:31:25"},{"kind":"number","nativeSrc":"488:2:25","nodeType":"YulLiteral","src":"488:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"451:3:25","nodeType":"YulIdentifier","src":"451:3:25"},"nativeSrc":"451:40:25","nodeType":"YulFunctionCall","src":"451:40:25"},{"arguments":[{"kind":"number","nativeSrc":"497:2:25","nodeType":"YulLiteral","src":"497:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"493:3:25","nodeType":"YulIdentifier","src":"493:3:25"},"nativeSrc":"493:7:25","nodeType":"YulFunctionCall","src":"493:7:25"}],"functionName":{"name":"and","nativeSrc":"447:3:25","nodeType":"YulIdentifier","src":"447:3:25"},"nativeSrc":"447:54:25","nodeType":"YulFunctionCall","src":"447:54:25"}],"functionName":{"name":"add","nativeSrc":"435:3:25","nodeType":"YulIdentifier","src":"435:3:25"},"nativeSrc":"435:67:25","nodeType":"YulFunctionCall","src":"435:67:25"},"variables":[{"name":"newFreePtr","nativeSrc":"421:10:25","nodeType":"YulTypedName","src":"421:10:25","type":""}]},{"body":{"nativeSrc":"577:22:25","nodeType":"YulBlock","src":"577:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"579:16:25","nodeType":"YulIdentifier","src":"579:16:25"},"nativeSrc":"579:18:25","nodeType":"YulFunctionCall","src":"579:18:25"},"nativeSrc":"579:18:25","nodeType":"YulExpressionStatement","src":"579:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"520:10:25","nodeType":"YulIdentifier","src":"520:10:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"540:2:25","nodeType":"YulLiteral","src":"540:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"544:1:25","nodeType":"YulLiteral","src":"544:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"536:3:25","nodeType":"YulIdentifier","src":"536:3:25"},"nativeSrc":"536:10:25","nodeType":"YulFunctionCall","src":"536:10:25"},{"kind":"number","nativeSrc":"548:1:25","nodeType":"YulLiteral","src":"548:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"532:3:25","nodeType":"YulIdentifier","src":"532:3:25"},"nativeSrc":"532:18:25","nodeType":"YulFunctionCall","src":"532:18:25"}],"functionName":{"name":"gt","nativeSrc":"517:2:25","nodeType":"YulIdentifier","src":"517:2:25"},"nativeSrc":"517:34:25","nodeType":"YulFunctionCall","src":"517:34:25"},{"arguments":[{"name":"newFreePtr","nativeSrc":"556:10:25","nodeType":"YulIdentifier","src":"556:10:25"},{"name":"memPtr","nativeSrc":"568:6:25","nodeType":"YulIdentifier","src":"568:6:25"}],"functionName":{"name":"lt","nativeSrc":"553:2:25","nodeType":"YulIdentifier","src":"553:2:25"},"nativeSrc":"553:22:25","nodeType":"YulFunctionCall","src":"553:22:25"}],"functionName":{"name":"or","nativeSrc":"514:2:25","nodeType":"YulIdentifier","src":"514:2:25"},"nativeSrc":"514:62:25","nodeType":"YulFunctionCall","src":"514:62:25"},"nativeSrc":"511:88:25","nodeType":"YulIf","src":"511:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"615:2:25","nodeType":"YulLiteral","src":"615:2:25","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"619:10:25","nodeType":"YulIdentifier","src":"619:10:25"}],"functionName":{"name":"mstore","nativeSrc":"608:6:25","nodeType":"YulIdentifier","src":"608:6:25"},"nativeSrc":"608:22:25","nodeType":"YulFunctionCall","src":"608:22:25"},"nativeSrc":"608:22:25","nodeType":"YulExpressionStatement","src":"608:22:25"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"646:6:25","nodeType":"YulIdentifier","src":"646:6:25"},{"name":"length","nativeSrc":"654:6:25","nodeType":"YulIdentifier","src":"654:6:25"}],"functionName":{"name":"mstore","nativeSrc":"639:6:25","nodeType":"YulIdentifier","src":"639:6:25"},"nativeSrc":"639:22:25","nodeType":"YulFunctionCall","src":"639:22:25"},"nativeSrc":"639:22:25","nodeType":"YulExpressionStatement","src":"639:22:25"},{"body":{"nativeSrc":"713:16:25","nodeType":"YulBlock","src":"713:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"722:1:25","nodeType":"YulLiteral","src":"722:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"725:1:25","nodeType":"YulLiteral","src":"725:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"715:6:25","nodeType":"YulIdentifier","src":"715:6:25"},"nativeSrc":"715:12:25","nodeType":"YulFunctionCall","src":"715:12:25"},"nativeSrc":"715:12:25","nodeType":"YulExpressionStatement","src":"715:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"684:6:25","nodeType":"YulIdentifier","src":"684:6:25"},{"name":"length","nativeSrc":"692:6:25","nodeType":"YulIdentifier","src":"692:6:25"}],"functionName":{"name":"add","nativeSrc":"680:3:25","nodeType":"YulIdentifier","src":"680:3:25"},"nativeSrc":"680:19:25","nodeType":"YulFunctionCall","src":"680:19:25"},{"kind":"number","nativeSrc":"701:4:25","nodeType":"YulLiteral","src":"701:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"676:3:25","nodeType":"YulIdentifier","src":"676:3:25"},"nativeSrc":"676:30:25","nodeType":"YulFunctionCall","src":"676:30:25"},{"name":"end","nativeSrc":"708:3:25","nodeType":"YulIdentifier","src":"708:3:25"}],"functionName":{"name":"gt","nativeSrc":"673:2:25","nodeType":"YulIdentifier","src":"673:2:25"},"nativeSrc":"673:39:25","nodeType":"YulFunctionCall","src":"673:39:25"},"nativeSrc":"670:59:25","nodeType":"YulIf","src":"670:59:25"},{"nativeSrc":"738:10:25","nodeType":"YulVariableDeclaration","src":"738:10:25","value":{"kind":"number","nativeSrc":"747:1:25","nodeType":"YulLiteral","src":"747:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"742:1:25","nodeType":"YulTypedName","src":"742:1:25","type":""}]},{"body":{"nativeSrc":"809:91:25","nodeType":"YulBlock","src":"809:91:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"838:6:25","nodeType":"YulIdentifier","src":"838:6:25"},{"name":"i","nativeSrc":"846:1:25","nodeType":"YulIdentifier","src":"846:1:25"}],"functionName":{"name":"add","nativeSrc":"834:3:25","nodeType":"YulIdentifier","src":"834:3:25"},"nativeSrc":"834:14:25","nodeType":"YulFunctionCall","src":"834:14:25"},{"kind":"number","nativeSrc":"850:4:25","nodeType":"YulLiteral","src":"850:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"830:3:25","nodeType":"YulIdentifier","src":"830:3:25"},"nativeSrc":"830:25:25","nodeType":"YulFunctionCall","src":"830:25:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"871:6:25","nodeType":"YulIdentifier","src":"871:6:25"},{"name":"i","nativeSrc":"879:1:25","nodeType":"YulIdentifier","src":"879:1:25"}],"functionName":{"name":"add","nativeSrc":"867:3:25","nodeType":"YulIdentifier","src":"867:3:25"},"nativeSrc":"867:14:25","nodeType":"YulFunctionCall","src":"867:14:25"},{"kind":"number","nativeSrc":"883:4:25","nodeType":"YulLiteral","src":"883:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"863:3:25","nodeType":"YulIdentifier","src":"863:3:25"},"nativeSrc":"863:25:25","nodeType":"YulFunctionCall","src":"863:25:25"}],"functionName":{"name":"mload","nativeSrc":"857:5:25","nodeType":"YulIdentifier","src":"857:5:25"},"nativeSrc":"857:32:25","nodeType":"YulFunctionCall","src":"857:32:25"}],"functionName":{"name":"mstore","nativeSrc":"823:6:25","nodeType":"YulIdentifier","src":"823:6:25"},"nativeSrc":"823:67:25","nodeType":"YulFunctionCall","src":"823:67:25"},"nativeSrc":"823:67:25","nodeType":"YulExpressionStatement","src":"823:67:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"768:1:25","nodeType":"YulIdentifier","src":"768:1:25"},{"name":"length","nativeSrc":"771:6:25","nodeType":"YulIdentifier","src":"771:6:25"}],"functionName":{"name":"lt","nativeSrc":"765:2:25","nodeType":"YulIdentifier","src":"765:2:25"},"nativeSrc":"765:13:25","nodeType":"YulFunctionCall","src":"765:13:25"},"nativeSrc":"757:143:25","nodeType":"YulForLoop","post":{"nativeSrc":"779:21:25","nodeType":"YulBlock","src":"779:21:25","statements":[{"nativeSrc":"781:17:25","nodeType":"YulAssignment","src":"781:17:25","value":{"arguments":[{"name":"i","nativeSrc":"790:1:25","nodeType":"YulIdentifier","src":"790:1:25"},{"kind":"number","nativeSrc":"793:4:25","nodeType":"YulLiteral","src":"793:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"786:3:25","nodeType":"YulIdentifier","src":"786:3:25"},"nativeSrc":"786:12:25","nodeType":"YulFunctionCall","src":"786:12:25"},"variableNames":[{"name":"i","nativeSrc":"781:1:25","nodeType":"YulIdentifier","src":"781:1:25"}]}]},"pre":{"nativeSrc":"761:3:25","nodeType":"YulBlock","src":"761:3:25","statements":[]},"src":"757:143:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"924:6:25","nodeType":"YulIdentifier","src":"924:6:25"},{"name":"length","nativeSrc":"932:6:25","nodeType":"YulIdentifier","src":"932:6:25"}],"functionName":{"name":"add","nativeSrc":"920:3:25","nodeType":"YulIdentifier","src":"920:3:25"},"nativeSrc":"920:19:25","nodeType":"YulFunctionCall","src":"920:19:25"},{"kind":"number","nativeSrc":"941:4:25","nodeType":"YulLiteral","src":"941:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"916:3:25","nodeType":"YulIdentifier","src":"916:3:25"},"nativeSrc":"916:30:25","nodeType":"YulFunctionCall","src":"916:30:25"},{"kind":"number","nativeSrc":"948:1:25","nodeType":"YulLiteral","src":"948:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"909:6:25","nodeType":"YulIdentifier","src":"909:6:25"},"nativeSrc":"909:41:25","nodeType":"YulFunctionCall","src":"909:41:25"},"nativeSrc":"909:41:25","nodeType":"YulExpressionStatement","src":"909:41:25"},{"nativeSrc":"959:15:25","nodeType":"YulAssignment","src":"959:15:25","value":{"name":"memPtr","nativeSrc":"968:6:25","nodeType":"YulIdentifier","src":"968:6:25"},"variableNames":[{"name":"array","nativeSrc":"959:5:25","nodeType":"YulIdentifier","src":"959:5:25"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"146:834:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"184:6:25","nodeType":"YulTypedName","src":"184:6:25","type":""},{"name":"end","nativeSrc":"192:3:25","nodeType":"YulTypedName","src":"192:3:25","type":""}],"returnVariables":[{"name":"array","nativeSrc":"200:5:25","nodeType":"YulTypedName","src":"200:5:25","type":""}],"src":"146:834:25"},{"body":{"nativeSrc":"1045:117:25","nodeType":"YulBlock","src":"1045:117:25","statements":[{"nativeSrc":"1055:22:25","nodeType":"YulAssignment","src":"1055:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"1070:6:25","nodeType":"YulIdentifier","src":"1070:6:25"}],"functionName":{"name":"mload","nativeSrc":"1064:5:25","nodeType":"YulIdentifier","src":"1064:5:25"},"nativeSrc":"1064:13:25","nodeType":"YulFunctionCall","src":"1064:13:25"},"variableNames":[{"name":"value","nativeSrc":"1055:5:25","nodeType":"YulIdentifier","src":"1055:5:25"}]},{"body":{"nativeSrc":"1140:16:25","nodeType":"YulBlock","src":"1140:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1149:1:25","nodeType":"YulLiteral","src":"1149:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1152:1:25","nodeType":"YulLiteral","src":"1152:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1142:6:25","nodeType":"YulIdentifier","src":"1142:6:25"},"nativeSrc":"1142:12:25","nodeType":"YulFunctionCall","src":"1142:12:25"},"nativeSrc":"1142:12:25","nodeType":"YulExpressionStatement","src":"1142:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1099:5:25","nodeType":"YulIdentifier","src":"1099:5:25"},{"arguments":[{"name":"value","nativeSrc":"1110:5:25","nodeType":"YulIdentifier","src":"1110:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1125:3:25","nodeType":"YulLiteral","src":"1125:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1130:1:25","nodeType":"YulLiteral","src":"1130:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1121:3:25","nodeType":"YulIdentifier","src":"1121:3:25"},"nativeSrc":"1121:11:25","nodeType":"YulFunctionCall","src":"1121:11:25"},{"kind":"number","nativeSrc":"1134:1:25","nodeType":"YulLiteral","src":"1134:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1117:3:25","nodeType":"YulIdentifier","src":"1117:3:25"},"nativeSrc":"1117:19:25","nodeType":"YulFunctionCall","src":"1117:19:25"}],"functionName":{"name":"and","nativeSrc":"1106:3:25","nodeType":"YulIdentifier","src":"1106:3:25"},"nativeSrc":"1106:31:25","nodeType":"YulFunctionCall","src":"1106:31:25"}],"functionName":{"name":"eq","nativeSrc":"1096:2:25","nodeType":"YulIdentifier","src":"1096:2:25"},"nativeSrc":"1096:42:25","nodeType":"YulFunctionCall","src":"1096:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1089:6:25","nodeType":"YulIdentifier","src":"1089:6:25"},"nativeSrc":"1089:50:25","nodeType":"YulFunctionCall","src":"1089:50:25"},"nativeSrc":"1086:70:25","nodeType":"YulIf","src":"1086:70:25"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"985:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1024:6:25","nodeType":"YulTypedName","src":"1024:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1035:5:25","nodeType":"YulTypedName","src":"1035:5:25","type":""}],"src":"985:177:25"},{"body":{"nativeSrc":"1334:712:25","nodeType":"YulBlock","src":"1334:712:25","statements":[{"body":{"nativeSrc":"1381:16:25","nodeType":"YulBlock","src":"1381:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1390:1:25","nodeType":"YulLiteral","src":"1390:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1393:1:25","nodeType":"YulLiteral","src":"1393:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1383:6:25","nodeType":"YulIdentifier","src":"1383:6:25"},"nativeSrc":"1383:12:25","nodeType":"YulFunctionCall","src":"1383:12:25"},"nativeSrc":"1383:12:25","nodeType":"YulExpressionStatement","src":"1383:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1355:7:25","nodeType":"YulIdentifier","src":"1355:7:25"},{"name":"headStart","nativeSrc":"1364:9:25","nodeType":"YulIdentifier","src":"1364:9:25"}],"functionName":{"name":"sub","nativeSrc":"1351:3:25","nodeType":"YulIdentifier","src":"1351:3:25"},"nativeSrc":"1351:23:25","nodeType":"YulFunctionCall","src":"1351:23:25"},{"kind":"number","nativeSrc":"1376:3:25","nodeType":"YulLiteral","src":"1376:3:25","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"1347:3:25","nodeType":"YulIdentifier","src":"1347:3:25"},"nativeSrc":"1347:33:25","nodeType":"YulFunctionCall","src":"1347:33:25"},"nativeSrc":"1344:53:25","nodeType":"YulIf","src":"1344:53:25"},{"nativeSrc":"1406:30:25","nodeType":"YulVariableDeclaration","src":"1406:30:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1426:9:25","nodeType":"YulIdentifier","src":"1426:9:25"}],"functionName":{"name":"mload","nativeSrc":"1420:5:25","nodeType":"YulIdentifier","src":"1420:5:25"},"nativeSrc":"1420:16:25","nodeType":"YulFunctionCall","src":"1420:16:25"},"variables":[{"name":"offset","nativeSrc":"1410:6:25","nodeType":"YulTypedName","src":"1410:6:25","type":""}]},{"body":{"nativeSrc":"1479:16:25","nodeType":"YulBlock","src":"1479:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1488:1:25","nodeType":"YulLiteral","src":"1488:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1491:1:25","nodeType":"YulLiteral","src":"1491:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1481:6:25","nodeType":"YulIdentifier","src":"1481:6:25"},"nativeSrc":"1481:12:25","nodeType":"YulFunctionCall","src":"1481:12:25"},"nativeSrc":"1481:12:25","nodeType":"YulExpressionStatement","src":"1481:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1451:6:25","nodeType":"YulIdentifier","src":"1451:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1467:2:25","nodeType":"YulLiteral","src":"1467:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"1471:1:25","nodeType":"YulLiteral","src":"1471:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1463:3:25","nodeType":"YulIdentifier","src":"1463:3:25"},"nativeSrc":"1463:10:25","nodeType":"YulFunctionCall","src":"1463:10:25"},{"kind":"number","nativeSrc":"1475:1:25","nodeType":"YulLiteral","src":"1475:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1459:3:25","nodeType":"YulIdentifier","src":"1459:3:25"},"nativeSrc":"1459:18:25","nodeType":"YulFunctionCall","src":"1459:18:25"}],"functionName":{"name":"gt","nativeSrc":"1448:2:25","nodeType":"YulIdentifier","src":"1448:2:25"},"nativeSrc":"1448:30:25","nodeType":"YulFunctionCall","src":"1448:30:25"},"nativeSrc":"1445:50:25","nodeType":"YulIf","src":"1445:50:25"},{"nativeSrc":"1504:71:25","nodeType":"YulAssignment","src":"1504:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1547:9:25","nodeType":"YulIdentifier","src":"1547:9:25"},{"name":"offset","nativeSrc":"1558:6:25","nodeType":"YulIdentifier","src":"1558:6:25"}],"functionName":{"name":"add","nativeSrc":"1543:3:25","nodeType":"YulIdentifier","src":"1543:3:25"},"nativeSrc":"1543:22:25","nodeType":"YulFunctionCall","src":"1543:22:25"},{"name":"dataEnd","nativeSrc":"1567:7:25","nodeType":"YulIdentifier","src":"1567:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1514:28:25","nodeType":"YulIdentifier","src":"1514:28:25"},"nativeSrc":"1514:61:25","nodeType":"YulFunctionCall","src":"1514:61:25"},"variableNames":[{"name":"value0","nativeSrc":"1504:6:25","nodeType":"YulIdentifier","src":"1504:6:25"}]},{"nativeSrc":"1584:41:25","nodeType":"YulVariableDeclaration","src":"1584:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1610:9:25","nodeType":"YulIdentifier","src":"1610:9:25"},{"kind":"number","nativeSrc":"1621:2:25","nodeType":"YulLiteral","src":"1621:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1606:3:25","nodeType":"YulIdentifier","src":"1606:3:25"},"nativeSrc":"1606:18:25","nodeType":"YulFunctionCall","src":"1606:18:25"}],"functionName":{"name":"mload","nativeSrc":"1600:5:25","nodeType":"YulIdentifier","src":"1600:5:25"},"nativeSrc":"1600:25:25","nodeType":"YulFunctionCall","src":"1600:25:25"},"variables":[{"name":"offset_1","nativeSrc":"1588:8:25","nodeType":"YulTypedName","src":"1588:8:25","type":""}]},{"body":{"nativeSrc":"1670:16:25","nodeType":"YulBlock","src":"1670:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1679:1:25","nodeType":"YulLiteral","src":"1679:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1682:1:25","nodeType":"YulLiteral","src":"1682:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1672:6:25","nodeType":"YulIdentifier","src":"1672:6:25"},"nativeSrc":"1672:12:25","nodeType":"YulFunctionCall","src":"1672:12:25"},"nativeSrc":"1672:12:25","nodeType":"YulExpressionStatement","src":"1672:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1640:8:25","nodeType":"YulIdentifier","src":"1640:8:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1658:2:25","nodeType":"YulLiteral","src":"1658:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"1662:1:25","nodeType":"YulLiteral","src":"1662:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1654:3:25","nodeType":"YulIdentifier","src":"1654:3:25"},"nativeSrc":"1654:10:25","nodeType":"YulFunctionCall","src":"1654:10:25"},{"kind":"number","nativeSrc":"1666:1:25","nodeType":"YulLiteral","src":"1666:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1650:3:25","nodeType":"YulIdentifier","src":"1650:3:25"},"nativeSrc":"1650:18:25","nodeType":"YulFunctionCall","src":"1650:18:25"}],"functionName":{"name":"gt","nativeSrc":"1637:2:25","nodeType":"YulIdentifier","src":"1637:2:25"},"nativeSrc":"1637:32:25","nodeType":"YulFunctionCall","src":"1637:32:25"},"nativeSrc":"1634:52:25","nodeType":"YulIf","src":"1634:52:25"},{"nativeSrc":"1695:73:25","nodeType":"YulAssignment","src":"1695:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1738:9:25","nodeType":"YulIdentifier","src":"1738:9:25"},{"name":"offset_1","nativeSrc":"1749:8:25","nodeType":"YulIdentifier","src":"1749:8:25"}],"functionName":{"name":"add","nativeSrc":"1734:3:25","nodeType":"YulIdentifier","src":"1734:3:25"},"nativeSrc":"1734:24:25","nodeType":"YulFunctionCall","src":"1734:24:25"},{"name":"dataEnd","nativeSrc":"1760:7:25","nodeType":"YulIdentifier","src":"1760:7:25"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1705:28:25","nodeType":"YulIdentifier","src":"1705:28:25"},"nativeSrc":"1705:63:25","nodeType":"YulFunctionCall","src":"1705:63:25"},"variableNames":[{"name":"value1","nativeSrc":"1695:6:25","nodeType":"YulIdentifier","src":"1695:6:25"}]},{"nativeSrc":"1777:38:25","nodeType":"YulVariableDeclaration","src":"1777:38:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1800:9:25","nodeType":"YulIdentifier","src":"1800:9:25"},{"kind":"number","nativeSrc":"1811:2:25","nodeType":"YulLiteral","src":"1811:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1796:3:25","nodeType":"YulIdentifier","src":"1796:3:25"},"nativeSrc":"1796:18:25","nodeType":"YulFunctionCall","src":"1796:18:25"}],"functionName":{"name":"mload","nativeSrc":"1790:5:25","nodeType":"YulIdentifier","src":"1790:5:25"},"nativeSrc":"1790:25:25","nodeType":"YulFunctionCall","src":"1790:25:25"},"variables":[{"name":"value","nativeSrc":"1781:5:25","nodeType":"YulTypedName","src":"1781:5:25","type":""}]},{"body":{"nativeSrc":"1863:16:25","nodeType":"YulBlock","src":"1863:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1872:1:25","nodeType":"YulLiteral","src":"1872:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1875:1:25","nodeType":"YulLiteral","src":"1875:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1865:6:25","nodeType":"YulIdentifier","src":"1865:6:25"},"nativeSrc":"1865:12:25","nodeType":"YulFunctionCall","src":"1865:12:25"},"nativeSrc":"1865:12:25","nodeType":"YulExpressionStatement","src":"1865:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1837:5:25","nodeType":"YulIdentifier","src":"1837:5:25"},{"arguments":[{"name":"value","nativeSrc":"1848:5:25","nodeType":"YulIdentifier","src":"1848:5:25"},{"kind":"number","nativeSrc":"1855:4:25","nodeType":"YulLiteral","src":"1855:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1844:3:25","nodeType":"YulIdentifier","src":"1844:3:25"},"nativeSrc":"1844:16:25","nodeType":"YulFunctionCall","src":"1844:16:25"}],"functionName":{"name":"eq","nativeSrc":"1834:2:25","nodeType":"YulIdentifier","src":"1834:2:25"},"nativeSrc":"1834:27:25","nodeType":"YulFunctionCall","src":"1834:27:25"}],"functionName":{"name":"iszero","nativeSrc":"1827:6:25","nodeType":"YulIdentifier","src":"1827:6:25"},"nativeSrc":"1827:35:25","nodeType":"YulFunctionCall","src":"1827:35:25"},"nativeSrc":"1824:55:25","nodeType":"YulIf","src":"1824:55:25"},{"nativeSrc":"1888:15:25","nodeType":"YulAssignment","src":"1888:15:25","value":{"name":"value","nativeSrc":"1898:5:25","nodeType":"YulIdentifier","src":"1898:5:25"},"variableNames":[{"name":"value2","nativeSrc":"1888:6:25","nodeType":"YulIdentifier","src":"1888:6:25"}]},{"nativeSrc":"1912:59:25","nodeType":"YulAssignment","src":"1912:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1956:9:25","nodeType":"YulIdentifier","src":"1956:9:25"},{"kind":"number","nativeSrc":"1967:2:25","nodeType":"YulLiteral","src":"1967:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1952:3:25","nodeType":"YulIdentifier","src":"1952:3:25"},"nativeSrc":"1952:18:25","nodeType":"YulFunctionCall","src":"1952:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"1922:29:25","nodeType":"YulIdentifier","src":"1922:29:25"},"nativeSrc":"1922:49:25","nodeType":"YulFunctionCall","src":"1922:49:25"},"variableNames":[{"name":"value3","nativeSrc":"1912:6:25","nodeType":"YulIdentifier","src":"1912:6:25"}]},{"nativeSrc":"1980:60:25","nodeType":"YulAssignment","src":"1980:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2024:9:25","nodeType":"YulIdentifier","src":"2024:9:25"},{"kind":"number","nativeSrc":"2035:3:25","nodeType":"YulLiteral","src":"2035:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2020:3:25","nodeType":"YulIdentifier","src":"2020:3:25"},"nativeSrc":"2020:19:25","nodeType":"YulFunctionCall","src":"2020:19:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"1990:29:25","nodeType":"YulIdentifier","src":"1990:29:25"},"nativeSrc":"1990:50:25","nodeType":"YulFunctionCall","src":"1990:50:25"},"variableNames":[{"name":"value4","nativeSrc":"1980:6:25","nodeType":"YulIdentifier","src":"1980:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_address_fromMemory","nativeSrc":"1167:879:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1268:9:25","nodeType":"YulTypedName","src":"1268:9:25","type":""},{"name":"dataEnd","nativeSrc":"1279:7:25","nodeType":"YulTypedName","src":"1279:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1291:6:25","nodeType":"YulTypedName","src":"1291:6:25","type":""},{"name":"value1","nativeSrc":"1299:6:25","nodeType":"YulTypedName","src":"1299:6:25","type":""},{"name":"value2","nativeSrc":"1307:6:25","nodeType":"YulTypedName","src":"1307:6:25","type":""},{"name":"value3","nativeSrc":"1315:6:25","nodeType":"YulTypedName","src":"1315:6:25","type":""},{"name":"value4","nativeSrc":"1323:6:25","nodeType":"YulTypedName","src":"1323:6:25","type":""}],"src":"1167:879:25"},{"body":{"nativeSrc":"2106:325:25","nodeType":"YulBlock","src":"2106:325:25","statements":[{"nativeSrc":"2116:22:25","nodeType":"YulAssignment","src":"2116:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"2130:1:25","nodeType":"YulLiteral","src":"2130:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"2133:4:25","nodeType":"YulIdentifier","src":"2133:4:25"}],"functionName":{"name":"shr","nativeSrc":"2126:3:25","nodeType":"YulIdentifier","src":"2126:3:25"},"nativeSrc":"2126:12:25","nodeType":"YulFunctionCall","src":"2126:12:25"},"variableNames":[{"name":"length","nativeSrc":"2116:6:25","nodeType":"YulIdentifier","src":"2116:6:25"}]},{"nativeSrc":"2147:38:25","nodeType":"YulVariableDeclaration","src":"2147:38:25","value":{"arguments":[{"name":"data","nativeSrc":"2177:4:25","nodeType":"YulIdentifier","src":"2177:4:25"},{"kind":"number","nativeSrc":"2183:1:25","nodeType":"YulLiteral","src":"2183:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2173:3:25","nodeType":"YulIdentifier","src":"2173:3:25"},"nativeSrc":"2173:12:25","nodeType":"YulFunctionCall","src":"2173:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2151:18:25","nodeType":"YulTypedName","src":"2151:18:25","type":""}]},{"body":{"nativeSrc":"2224:31:25","nodeType":"YulBlock","src":"2224:31:25","statements":[{"nativeSrc":"2226:27:25","nodeType":"YulAssignment","src":"2226:27:25","value":{"arguments":[{"name":"length","nativeSrc":"2240:6:25","nodeType":"YulIdentifier","src":"2240:6:25"},{"kind":"number","nativeSrc":"2248:4:25","nodeType":"YulLiteral","src":"2248:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2236:3:25","nodeType":"YulIdentifier","src":"2236:3:25"},"nativeSrc":"2236:17:25","nodeType":"YulFunctionCall","src":"2236:17:25"},"variableNames":[{"name":"length","nativeSrc":"2226:6:25","nodeType":"YulIdentifier","src":"2226:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2204:18:25","nodeType":"YulIdentifier","src":"2204:18:25"}],"functionName":{"name":"iszero","nativeSrc":"2197:6:25","nodeType":"YulIdentifier","src":"2197:6:25"},"nativeSrc":"2197:26:25","nodeType":"YulFunctionCall","src":"2197:26:25"},"nativeSrc":"2194:61:25","nodeType":"YulIf","src":"2194:61:25"},{"body":{"nativeSrc":"2314:111:25","nodeType":"YulBlock","src":"2314:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2335:1:25","nodeType":"YulLiteral","src":"2335:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2342:3:25","nodeType":"YulLiteral","src":"2342:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"2347:10:25","nodeType":"YulLiteral","src":"2347:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2338:3:25","nodeType":"YulIdentifier","src":"2338:3:25"},"nativeSrc":"2338:20:25","nodeType":"YulFunctionCall","src":"2338:20:25"}],"functionName":{"name":"mstore","nativeSrc":"2328:6:25","nodeType":"YulIdentifier","src":"2328:6:25"},"nativeSrc":"2328:31:25","nodeType":"YulFunctionCall","src":"2328:31:25"},"nativeSrc":"2328:31:25","nodeType":"YulExpressionStatement","src":"2328:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2379:1:25","nodeType":"YulLiteral","src":"2379:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"2382:4:25","nodeType":"YulLiteral","src":"2382:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2372:6:25","nodeType":"YulIdentifier","src":"2372:6:25"},"nativeSrc":"2372:15:25","nodeType":"YulFunctionCall","src":"2372:15:25"},"nativeSrc":"2372:15:25","nodeType":"YulExpressionStatement","src":"2372:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2407:1:25","nodeType":"YulLiteral","src":"2407:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2410:4:25","nodeType":"YulLiteral","src":"2410:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2400:6:25","nodeType":"YulIdentifier","src":"2400:6:25"},"nativeSrc":"2400:15:25","nodeType":"YulFunctionCall","src":"2400:15:25"},"nativeSrc":"2400:15:25","nodeType":"YulExpressionStatement","src":"2400:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2270:18:25","nodeType":"YulIdentifier","src":"2270:18:25"},{"arguments":[{"name":"length","nativeSrc":"2293:6:25","nodeType":"YulIdentifier","src":"2293:6:25"},{"kind":"number","nativeSrc":"2301:2:25","nodeType":"YulLiteral","src":"2301:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2290:2:25","nodeType":"YulIdentifier","src":"2290:2:25"},"nativeSrc":"2290:14:25","nodeType":"YulFunctionCall","src":"2290:14:25"}],"functionName":{"name":"eq","nativeSrc":"2267:2:25","nodeType":"YulIdentifier","src":"2267:2:25"},"nativeSrc":"2267:38:25","nodeType":"YulFunctionCall","src":"2267:38:25"},"nativeSrc":"2264:161:25","nodeType":"YulIf","src":"2264:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"2051:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2086:4:25","nodeType":"YulTypedName","src":"2086:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2095:6:25","nodeType":"YulTypedName","src":"2095:6:25","type":""}],"src":"2051:380:25"},{"body":{"nativeSrc":"2492:65:25","nodeType":"YulBlock","src":"2492:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2509:1:25","nodeType":"YulLiteral","src":"2509:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"2512:3:25","nodeType":"YulIdentifier","src":"2512:3:25"}],"functionName":{"name":"mstore","nativeSrc":"2502:6:25","nodeType":"YulIdentifier","src":"2502:6:25"},"nativeSrc":"2502:14:25","nodeType":"YulFunctionCall","src":"2502:14:25"},"nativeSrc":"2502:14:25","nodeType":"YulExpressionStatement","src":"2502:14:25"},{"nativeSrc":"2525:26:25","nodeType":"YulAssignment","src":"2525:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"2543:1:25","nodeType":"YulLiteral","src":"2543:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2546:4:25","nodeType":"YulLiteral","src":"2546:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2533:9:25","nodeType":"YulIdentifier","src":"2533:9:25"},"nativeSrc":"2533:18:25","nodeType":"YulFunctionCall","src":"2533:18:25"},"variableNames":[{"name":"data","nativeSrc":"2525:4:25","nodeType":"YulIdentifier","src":"2525:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"2436:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2475:3:25","nodeType":"YulTypedName","src":"2475:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2483:4:25","nodeType":"YulTypedName","src":"2483:4:25","type":""}],"src":"2436:121:25"},{"body":{"nativeSrc":"2643:437:25","nodeType":"YulBlock","src":"2643:437:25","statements":[{"body":{"nativeSrc":"2676:398:25","nodeType":"YulBlock","src":"2676:398:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2697:1:25","nodeType":"YulLiteral","src":"2697:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"2700:5:25","nodeType":"YulIdentifier","src":"2700:5:25"}],"functionName":{"name":"mstore","nativeSrc":"2690:6:25","nodeType":"YulIdentifier","src":"2690:6:25"},"nativeSrc":"2690:16:25","nodeType":"YulFunctionCall","src":"2690:16:25"},"nativeSrc":"2690:16:25","nodeType":"YulExpressionStatement","src":"2690:16:25"},{"nativeSrc":"2719:30:25","nodeType":"YulVariableDeclaration","src":"2719:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"2741:1:25","nodeType":"YulLiteral","src":"2741:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2744:4:25","nodeType":"YulLiteral","src":"2744:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2731:9:25","nodeType":"YulIdentifier","src":"2731:9:25"},"nativeSrc":"2731:18:25","nodeType":"YulFunctionCall","src":"2731:18:25"},"variables":[{"name":"data","nativeSrc":"2723:4:25","nodeType":"YulTypedName","src":"2723:4:25","type":""}]},{"nativeSrc":"2762:57:25","nodeType":"YulVariableDeclaration","src":"2762:57:25","value":{"arguments":[{"name":"data","nativeSrc":"2785:4:25","nodeType":"YulIdentifier","src":"2785:4:25"},{"arguments":[{"kind":"number","nativeSrc":"2795:1:25","nodeType":"YulLiteral","src":"2795:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2802:10:25","nodeType":"YulIdentifier","src":"2802:10:25"},{"kind":"number","nativeSrc":"2814:2:25","nodeType":"YulLiteral","src":"2814:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2798:3:25","nodeType":"YulIdentifier","src":"2798:3:25"},"nativeSrc":"2798:19:25","nodeType":"YulFunctionCall","src":"2798:19:25"}],"functionName":{"name":"shr","nativeSrc":"2791:3:25","nodeType":"YulIdentifier","src":"2791:3:25"},"nativeSrc":"2791:27:25","nodeType":"YulFunctionCall","src":"2791:27:25"}],"functionName":{"name":"add","nativeSrc":"2781:3:25","nodeType":"YulIdentifier","src":"2781:3:25"},"nativeSrc":"2781:38:25","nodeType":"YulFunctionCall","src":"2781:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"2766:11:25","nodeType":"YulTypedName","src":"2766:11:25","type":""}]},{"body":{"nativeSrc":"2856:23:25","nodeType":"YulBlock","src":"2856:23:25","statements":[{"nativeSrc":"2858:19:25","nodeType":"YulAssignment","src":"2858:19:25","value":{"name":"data","nativeSrc":"2873:4:25","nodeType":"YulIdentifier","src":"2873:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"2858:11:25","nodeType":"YulIdentifier","src":"2858:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2838:10:25","nodeType":"YulIdentifier","src":"2838:10:25"},{"kind":"number","nativeSrc":"2850:4:25","nodeType":"YulLiteral","src":"2850:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2835:2:25","nodeType":"YulIdentifier","src":"2835:2:25"},"nativeSrc":"2835:20:25","nodeType":"YulFunctionCall","src":"2835:20:25"},"nativeSrc":"2832:47:25","nodeType":"YulIf","src":"2832:47:25"},{"nativeSrc":"2892:41:25","nodeType":"YulVariableDeclaration","src":"2892:41:25","value":{"arguments":[{"name":"data","nativeSrc":"2906:4:25","nodeType":"YulIdentifier","src":"2906:4:25"},{"arguments":[{"kind":"number","nativeSrc":"2916:1:25","nodeType":"YulLiteral","src":"2916:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2923:3:25","nodeType":"YulIdentifier","src":"2923:3:25"},{"kind":"number","nativeSrc":"2928:2:25","nodeType":"YulLiteral","src":"2928:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2919:3:25","nodeType":"YulIdentifier","src":"2919:3:25"},"nativeSrc":"2919:12:25","nodeType":"YulFunctionCall","src":"2919:12:25"}],"functionName":{"name":"shr","nativeSrc":"2912:3:25","nodeType":"YulIdentifier","src":"2912:3:25"},"nativeSrc":"2912:20:25","nodeType":"YulFunctionCall","src":"2912:20:25"}],"functionName":{"name":"add","nativeSrc":"2902:3:25","nodeType":"YulIdentifier","src":"2902:3:25"},"nativeSrc":"2902:31:25","nodeType":"YulFunctionCall","src":"2902:31:25"},"variables":[{"name":"_1","nativeSrc":"2896:2:25","nodeType":"YulTypedName","src":"2896:2:25","type":""}]},{"nativeSrc":"2946:24:25","nodeType":"YulVariableDeclaration","src":"2946:24:25","value":{"name":"deleteStart","nativeSrc":"2959:11:25","nodeType":"YulIdentifier","src":"2959:11:25"},"variables":[{"name":"start","nativeSrc":"2950:5:25","nodeType":"YulTypedName","src":"2950:5:25","type":""}]},{"body":{"nativeSrc":"3044:20:25","nodeType":"YulBlock","src":"3044:20:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3053:5:25","nodeType":"YulIdentifier","src":"3053:5:25"},{"kind":"number","nativeSrc":"3060:1:25","nodeType":"YulLiteral","src":"3060:1:25","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"3046:6:25","nodeType":"YulIdentifier","src":"3046:6:25"},"nativeSrc":"3046:16:25","nodeType":"YulFunctionCall","src":"3046:16:25"},"nativeSrc":"3046:16:25","nodeType":"YulExpressionStatement","src":"3046:16:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2994:5:25","nodeType":"YulIdentifier","src":"2994:5:25"},{"name":"_1","nativeSrc":"3001:2:25","nodeType":"YulIdentifier","src":"3001:2:25"}],"functionName":{"name":"lt","nativeSrc":"2991:2:25","nodeType":"YulIdentifier","src":"2991:2:25"},"nativeSrc":"2991:13:25","nodeType":"YulFunctionCall","src":"2991:13:25"},"nativeSrc":"2983:81:25","nodeType":"YulForLoop","post":{"nativeSrc":"3005:26:25","nodeType":"YulBlock","src":"3005:26:25","statements":[{"nativeSrc":"3007:22:25","nodeType":"YulAssignment","src":"3007:22:25","value":{"arguments":[{"name":"start","nativeSrc":"3020:5:25","nodeType":"YulIdentifier","src":"3020:5:25"},{"kind":"number","nativeSrc":"3027:1:25","nodeType":"YulLiteral","src":"3027:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3016:3:25","nodeType":"YulIdentifier","src":"3016:3:25"},"nativeSrc":"3016:13:25","nodeType":"YulFunctionCall","src":"3016:13:25"},"variableNames":[{"name":"start","nativeSrc":"3007:5:25","nodeType":"YulIdentifier","src":"3007:5:25"}]}]},"pre":{"nativeSrc":"2987:3:25","nodeType":"YulBlock","src":"2987:3:25","statements":[]},"src":"2983:81:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2659:3:25","nodeType":"YulIdentifier","src":"2659:3:25"},{"kind":"number","nativeSrc":"2664:2:25","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2656:2:25","nodeType":"YulIdentifier","src":"2656:2:25"},"nativeSrc":"2656:11:25","nodeType":"YulFunctionCall","src":"2656:11:25"},"nativeSrc":"2653:421:25","nodeType":"YulIf","src":"2653:421:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2562:518:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2615:5:25","nodeType":"YulTypedName","src":"2615:5:25","type":""},{"name":"len","nativeSrc":"2622:3:25","nodeType":"YulTypedName","src":"2622:3:25","type":""},{"name":"startIndex","nativeSrc":"2627:10:25","nodeType":"YulTypedName","src":"2627:10:25","type":""}],"src":"2562:518:25"},{"body":{"nativeSrc":"3170:81:25","nodeType":"YulBlock","src":"3170:81:25","statements":[{"nativeSrc":"3180:65:25","nodeType":"YulAssignment","src":"3180:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"3195:4:25","nodeType":"YulIdentifier","src":"3195:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3213:1:25","nodeType":"YulLiteral","src":"3213:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"3216:3:25","nodeType":"YulIdentifier","src":"3216:3:25"}],"functionName":{"name":"shl","nativeSrc":"3209:3:25","nodeType":"YulIdentifier","src":"3209:3:25"},"nativeSrc":"3209:11:25","nodeType":"YulFunctionCall","src":"3209:11:25"},{"arguments":[{"kind":"number","nativeSrc":"3226:1:25","nodeType":"YulLiteral","src":"3226:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3222:3:25","nodeType":"YulIdentifier","src":"3222:3:25"},"nativeSrc":"3222:6:25","nodeType":"YulFunctionCall","src":"3222:6:25"}],"functionName":{"name":"shr","nativeSrc":"3205:3:25","nodeType":"YulIdentifier","src":"3205:3:25"},"nativeSrc":"3205:24:25","nodeType":"YulFunctionCall","src":"3205:24:25"}],"functionName":{"name":"not","nativeSrc":"3201:3:25","nodeType":"YulIdentifier","src":"3201:3:25"},"nativeSrc":"3201:29:25","nodeType":"YulFunctionCall","src":"3201:29:25"}],"functionName":{"name":"and","nativeSrc":"3191:3:25","nodeType":"YulIdentifier","src":"3191:3:25"},"nativeSrc":"3191:40:25","nodeType":"YulFunctionCall","src":"3191:40:25"},{"arguments":[{"kind":"number","nativeSrc":"3237:1:25","nodeType":"YulLiteral","src":"3237:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"3240:3:25","nodeType":"YulIdentifier","src":"3240:3:25"}],"functionName":{"name":"shl","nativeSrc":"3233:3:25","nodeType":"YulIdentifier","src":"3233:3:25"},"nativeSrc":"3233:11:25","nodeType":"YulFunctionCall","src":"3233:11:25"}],"functionName":{"name":"or","nativeSrc":"3188:2:25","nodeType":"YulIdentifier","src":"3188:2:25"},"nativeSrc":"3188:57:25","nodeType":"YulFunctionCall","src":"3188:57:25"},"variableNames":[{"name":"used","nativeSrc":"3180:4:25","nodeType":"YulIdentifier","src":"3180:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3085:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3147:4:25","nodeType":"YulTypedName","src":"3147:4:25","type":""},{"name":"len","nativeSrc":"3153:3:25","nodeType":"YulTypedName","src":"3153:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3161:4:25","nodeType":"YulTypedName","src":"3161:4:25","type":""}],"src":"3085:166:25"},{"body":{"nativeSrc":"3352:1203:25","nodeType":"YulBlock","src":"3352:1203:25","statements":[{"nativeSrc":"3362:24:25","nodeType":"YulVariableDeclaration","src":"3362:24:25","value":{"arguments":[{"name":"src","nativeSrc":"3382:3:25","nodeType":"YulIdentifier","src":"3382:3:25"}],"functionName":{"name":"mload","nativeSrc":"3376:5:25","nodeType":"YulIdentifier","src":"3376:5:25"},"nativeSrc":"3376:10:25","nodeType":"YulFunctionCall","src":"3376:10:25"},"variables":[{"name":"newLen","nativeSrc":"3366:6:25","nodeType":"YulTypedName","src":"3366:6:25","type":""}]},{"body":{"nativeSrc":"3429:22:25","nodeType":"YulBlock","src":"3429:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3431:16:25","nodeType":"YulIdentifier","src":"3431:16:25"},"nativeSrc":"3431:18:25","nodeType":"YulFunctionCall","src":"3431:18:25"},"nativeSrc":"3431:18:25","nodeType":"YulExpressionStatement","src":"3431:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"3401:6:25","nodeType":"YulIdentifier","src":"3401:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3417:2:25","nodeType":"YulLiteral","src":"3417:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"3421:1:25","nodeType":"YulLiteral","src":"3421:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3413:3:25","nodeType":"YulIdentifier","src":"3413:3:25"},"nativeSrc":"3413:10:25","nodeType":"YulFunctionCall","src":"3413:10:25"},{"kind":"number","nativeSrc":"3425:1:25","nodeType":"YulLiteral","src":"3425:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3409:3:25","nodeType":"YulIdentifier","src":"3409:3:25"},"nativeSrc":"3409:18:25","nodeType":"YulFunctionCall","src":"3409:18:25"}],"functionName":{"name":"gt","nativeSrc":"3398:2:25","nodeType":"YulIdentifier","src":"3398:2:25"},"nativeSrc":"3398:30:25","nodeType":"YulFunctionCall","src":"3398:30:25"},"nativeSrc":"3395:56:25","nodeType":"YulIf","src":"3395:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3504:4:25","nodeType":"YulIdentifier","src":"3504:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3542:4:25","nodeType":"YulIdentifier","src":"3542:4:25"}],"functionName":{"name":"sload","nativeSrc":"3536:5:25","nodeType":"YulIdentifier","src":"3536:5:25"},"nativeSrc":"3536:11:25","nodeType":"YulFunctionCall","src":"3536:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3510:25:25","nodeType":"YulIdentifier","src":"3510:25:25"},"nativeSrc":"3510:38:25","nodeType":"YulFunctionCall","src":"3510:38:25"},{"name":"newLen","nativeSrc":"3550:6:25","nodeType":"YulIdentifier","src":"3550:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"3460:43:25","nodeType":"YulIdentifier","src":"3460:43:25"},"nativeSrc":"3460:97:25","nodeType":"YulFunctionCall","src":"3460:97:25"},"nativeSrc":"3460:97:25","nodeType":"YulExpressionStatement","src":"3460:97:25"},{"nativeSrc":"3566:18:25","nodeType":"YulVariableDeclaration","src":"3566:18:25","value":{"kind":"number","nativeSrc":"3583:1:25","nodeType":"YulLiteral","src":"3583:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3570:9:25","nodeType":"YulTypedName","src":"3570:9:25","type":""}]},{"nativeSrc":"3593:17:25","nodeType":"YulAssignment","src":"3593:17:25","value":{"kind":"number","nativeSrc":"3606:4:25","nodeType":"YulLiteral","src":"3606:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3593:9:25","nodeType":"YulIdentifier","src":"3593:9:25"}]},{"cases":[{"body":{"nativeSrc":"3656:642:25","nodeType":"YulBlock","src":"3656:642:25","statements":[{"nativeSrc":"3670:35:25","nodeType":"YulVariableDeclaration","src":"3670:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"3689:6:25","nodeType":"YulIdentifier","src":"3689:6:25"},{"arguments":[{"kind":"number","nativeSrc":"3701:2:25","nodeType":"YulLiteral","src":"3701:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3697:3:25","nodeType":"YulIdentifier","src":"3697:3:25"},"nativeSrc":"3697:7:25","nodeType":"YulFunctionCall","src":"3697:7:25"}],"functionName":{"name":"and","nativeSrc":"3685:3:25","nodeType":"YulIdentifier","src":"3685:3:25"},"nativeSrc":"3685:20:25","nodeType":"YulFunctionCall","src":"3685:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"3674:7:25","nodeType":"YulTypedName","src":"3674:7:25","type":""}]},{"nativeSrc":"3718:49:25","nodeType":"YulVariableDeclaration","src":"3718:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"3762:4:25","nodeType":"YulIdentifier","src":"3762:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3732:29:25","nodeType":"YulIdentifier","src":"3732:29:25"},"nativeSrc":"3732:35:25","nodeType":"YulFunctionCall","src":"3732:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"3722:6:25","nodeType":"YulTypedName","src":"3722:6:25","type":""}]},{"nativeSrc":"3780:10:25","nodeType":"YulVariableDeclaration","src":"3780:10:25","value":{"kind":"number","nativeSrc":"3789:1:25","nodeType":"YulLiteral","src":"3789:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3784:1:25","nodeType":"YulTypedName","src":"3784:1:25","type":""}]},{"body":{"nativeSrc":"3860:165:25","nodeType":"YulBlock","src":"3860:165:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3885:6:25","nodeType":"YulIdentifier","src":"3885:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3903:3:25","nodeType":"YulIdentifier","src":"3903:3:25"},{"name":"srcOffset","nativeSrc":"3908:9:25","nodeType":"YulIdentifier","src":"3908:9:25"}],"functionName":{"name":"add","nativeSrc":"3899:3:25","nodeType":"YulIdentifier","src":"3899:3:25"},"nativeSrc":"3899:19:25","nodeType":"YulFunctionCall","src":"3899:19:25"}],"functionName":{"name":"mload","nativeSrc":"3893:5:25","nodeType":"YulIdentifier","src":"3893:5:25"},"nativeSrc":"3893:26:25","nodeType":"YulFunctionCall","src":"3893:26:25"}],"functionName":{"name":"sstore","nativeSrc":"3878:6:25","nodeType":"YulIdentifier","src":"3878:6:25"},"nativeSrc":"3878:42:25","nodeType":"YulFunctionCall","src":"3878:42:25"},"nativeSrc":"3878:42:25","nodeType":"YulExpressionStatement","src":"3878:42:25"},{"nativeSrc":"3937:24:25","nodeType":"YulAssignment","src":"3937:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3951:6:25","nodeType":"YulIdentifier","src":"3951:6:25"},{"kind":"number","nativeSrc":"3959:1:25","nodeType":"YulLiteral","src":"3959:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3947:3:25","nodeType":"YulIdentifier","src":"3947:3:25"},"nativeSrc":"3947:14:25","nodeType":"YulFunctionCall","src":"3947:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"3937:6:25","nodeType":"YulIdentifier","src":"3937:6:25"}]},{"nativeSrc":"3978:33:25","nodeType":"YulAssignment","src":"3978:33:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3995:9:25","nodeType":"YulIdentifier","src":"3995:9:25"},{"kind":"number","nativeSrc":"4006:4:25","nodeType":"YulLiteral","src":"4006:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3991:3:25","nodeType":"YulIdentifier","src":"3991:3:25"},"nativeSrc":"3991:20:25","nodeType":"YulFunctionCall","src":"3991:20:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"3978:9:25","nodeType":"YulIdentifier","src":"3978:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3814:1:25","nodeType":"YulIdentifier","src":"3814:1:25"},{"name":"loopEnd","nativeSrc":"3817:7:25","nodeType":"YulIdentifier","src":"3817:7:25"}],"functionName":{"name":"lt","nativeSrc":"3811:2:25","nodeType":"YulIdentifier","src":"3811:2:25"},"nativeSrc":"3811:14:25","nodeType":"YulFunctionCall","src":"3811:14:25"},"nativeSrc":"3803:222:25","nodeType":"YulForLoop","post":{"nativeSrc":"3826:21:25","nodeType":"YulBlock","src":"3826:21:25","statements":[{"nativeSrc":"3828:17:25","nodeType":"YulAssignment","src":"3828:17:25","value":{"arguments":[{"name":"i","nativeSrc":"3837:1:25","nodeType":"YulIdentifier","src":"3837:1:25"},{"kind":"number","nativeSrc":"3840:4:25","nodeType":"YulLiteral","src":"3840:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3833:3:25","nodeType":"YulIdentifier","src":"3833:3:25"},"nativeSrc":"3833:12:25","nodeType":"YulFunctionCall","src":"3833:12:25"},"variableNames":[{"name":"i","nativeSrc":"3828:1:25","nodeType":"YulIdentifier","src":"3828:1:25"}]}]},"pre":{"nativeSrc":"3807:3:25","nodeType":"YulBlock","src":"3807:3:25","statements":[]},"src":"3803:222:25"},{"body":{"nativeSrc":"4073:166:25","nodeType":"YulBlock","src":"4073:166:25","statements":[{"nativeSrc":"4091:43:25","nodeType":"YulVariableDeclaration","src":"4091:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4118:3:25","nodeType":"YulIdentifier","src":"4118:3:25"},{"name":"srcOffset","nativeSrc":"4123:9:25","nodeType":"YulIdentifier","src":"4123:9:25"}],"functionName":{"name":"add","nativeSrc":"4114:3:25","nodeType":"YulIdentifier","src":"4114:3:25"},"nativeSrc":"4114:19:25","nodeType":"YulFunctionCall","src":"4114:19:25"}],"functionName":{"name":"mload","nativeSrc":"4108:5:25","nodeType":"YulIdentifier","src":"4108:5:25"},"nativeSrc":"4108:26:25","nodeType":"YulFunctionCall","src":"4108:26:25"},"variables":[{"name":"lastValue","nativeSrc":"4095:9:25","nodeType":"YulTypedName","src":"4095:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4158:6:25","nodeType":"YulIdentifier","src":"4158:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"4170:9:25","nodeType":"YulIdentifier","src":"4170:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4197:1:25","nodeType":"YulLiteral","src":"4197:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"4200:6:25","nodeType":"YulIdentifier","src":"4200:6:25"}],"functionName":{"name":"shl","nativeSrc":"4193:3:25","nodeType":"YulIdentifier","src":"4193:3:25"},"nativeSrc":"4193:14:25","nodeType":"YulFunctionCall","src":"4193:14:25"},{"kind":"number","nativeSrc":"4209:3:25","nodeType":"YulLiteral","src":"4209:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"4189:3:25","nodeType":"YulIdentifier","src":"4189:3:25"},"nativeSrc":"4189:24:25","nodeType":"YulFunctionCall","src":"4189:24:25"},{"arguments":[{"kind":"number","nativeSrc":"4219:1:25","nodeType":"YulLiteral","src":"4219:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4215:3:25","nodeType":"YulIdentifier","src":"4215:3:25"},"nativeSrc":"4215:6:25","nodeType":"YulFunctionCall","src":"4215:6:25"}],"functionName":{"name":"shr","nativeSrc":"4185:3:25","nodeType":"YulIdentifier","src":"4185:3:25"},"nativeSrc":"4185:37:25","nodeType":"YulFunctionCall","src":"4185:37:25"}],"functionName":{"name":"not","nativeSrc":"4181:3:25","nodeType":"YulIdentifier","src":"4181:3:25"},"nativeSrc":"4181:42:25","nodeType":"YulFunctionCall","src":"4181:42:25"}],"functionName":{"name":"and","nativeSrc":"4166:3:25","nodeType":"YulIdentifier","src":"4166:3:25"},"nativeSrc":"4166:58:25","nodeType":"YulFunctionCall","src":"4166:58:25"}],"functionName":{"name":"sstore","nativeSrc":"4151:6:25","nodeType":"YulIdentifier","src":"4151:6:25"},"nativeSrc":"4151:74:25","nodeType":"YulFunctionCall","src":"4151:74:25"},"nativeSrc":"4151:74:25","nodeType":"YulExpressionStatement","src":"4151:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4044:7:25","nodeType":"YulIdentifier","src":"4044:7:25"},{"name":"newLen","nativeSrc":"4053:6:25","nodeType":"YulIdentifier","src":"4053:6:25"}],"functionName":{"name":"lt","nativeSrc":"4041:2:25","nodeType":"YulIdentifier","src":"4041:2:25"},"nativeSrc":"4041:19:25","nodeType":"YulFunctionCall","src":"4041:19:25"},"nativeSrc":"4038:201:25","nodeType":"YulIf","src":"4038:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4259:4:25","nodeType":"YulIdentifier","src":"4259:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4273:1:25","nodeType":"YulLiteral","src":"4273:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"4276:6:25","nodeType":"YulIdentifier","src":"4276:6:25"}],"functionName":{"name":"shl","nativeSrc":"4269:3:25","nodeType":"YulIdentifier","src":"4269:3:25"},"nativeSrc":"4269:14:25","nodeType":"YulFunctionCall","src":"4269:14:25"},{"kind":"number","nativeSrc":"4285:1:25","nodeType":"YulLiteral","src":"4285:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4265:3:25","nodeType":"YulIdentifier","src":"4265:3:25"},"nativeSrc":"4265:22:25","nodeType":"YulFunctionCall","src":"4265:22:25"}],"functionName":{"name":"sstore","nativeSrc":"4252:6:25","nodeType":"YulIdentifier","src":"4252:6:25"},"nativeSrc":"4252:36:25","nodeType":"YulFunctionCall","src":"4252:36:25"},"nativeSrc":"4252:36:25","nodeType":"YulExpressionStatement","src":"4252:36:25"}]},"nativeSrc":"3649:649:25","nodeType":"YulCase","src":"3649:649:25","value":{"kind":"number","nativeSrc":"3654:1:25","nodeType":"YulLiteral","src":"3654:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"4315:234:25","nodeType":"YulBlock","src":"4315:234:25","statements":[{"nativeSrc":"4329:14:25","nodeType":"YulVariableDeclaration","src":"4329:14:25","value":{"kind":"number","nativeSrc":"4342:1:25","nodeType":"YulLiteral","src":"4342:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4333:5:25","nodeType":"YulTypedName","src":"4333:5:25","type":""}]},{"body":{"nativeSrc":"4378:67:25","nodeType":"YulBlock","src":"4378:67:25","statements":[{"nativeSrc":"4396:35:25","nodeType":"YulAssignment","src":"4396:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4415:3:25","nodeType":"YulIdentifier","src":"4415:3:25"},{"name":"srcOffset","nativeSrc":"4420:9:25","nodeType":"YulIdentifier","src":"4420:9:25"}],"functionName":{"name":"add","nativeSrc":"4411:3:25","nodeType":"YulIdentifier","src":"4411:3:25"},"nativeSrc":"4411:19:25","nodeType":"YulFunctionCall","src":"4411:19:25"}],"functionName":{"name":"mload","nativeSrc":"4405:5:25","nodeType":"YulIdentifier","src":"4405:5:25"},"nativeSrc":"4405:26:25","nodeType":"YulFunctionCall","src":"4405:26:25"},"variableNames":[{"name":"value","nativeSrc":"4396:5:25","nodeType":"YulIdentifier","src":"4396:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"4359:6:25","nodeType":"YulIdentifier","src":"4359:6:25"},"nativeSrc":"4356:89:25","nodeType":"YulIf","src":"4356:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4465:4:25","nodeType":"YulIdentifier","src":"4465:4:25"},{"arguments":[{"name":"value","nativeSrc":"4524:5:25","nodeType":"YulIdentifier","src":"4524:5:25"},{"name":"newLen","nativeSrc":"4531:6:25","nodeType":"YulIdentifier","src":"4531:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4471:52:25","nodeType":"YulIdentifier","src":"4471:52:25"},"nativeSrc":"4471:67:25","nodeType":"YulFunctionCall","src":"4471:67:25"}],"functionName":{"name":"sstore","nativeSrc":"4458:6:25","nodeType":"YulIdentifier","src":"4458:6:25"},"nativeSrc":"4458:81:25","nodeType":"YulFunctionCall","src":"4458:81:25"},"nativeSrc":"4458:81:25","nodeType":"YulExpressionStatement","src":"4458:81:25"}]},"nativeSrc":"4307:242:25","nodeType":"YulCase","src":"4307:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3629:6:25","nodeType":"YulIdentifier","src":"3629:6:25"},{"kind":"number","nativeSrc":"3637:2:25","nodeType":"YulLiteral","src":"3637:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3626:2:25","nodeType":"YulIdentifier","src":"3626:2:25"},"nativeSrc":"3626:14:25","nodeType":"YulFunctionCall","src":"3626:14:25"},"nativeSrc":"3619:930:25","nodeType":"YulSwitch","src":"3619:930:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3256:1299:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3337:4:25","nodeType":"YulTypedName","src":"3337:4:25","type":""},{"name":"src","nativeSrc":"3343:3:25","nodeType":"YulTypedName","src":"3343:3:25","type":""}],"src":"3256:1299:25"},{"body":{"nativeSrc":"4734:238:25","nodeType":"YulBlock","src":"4734:238:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:25","nodeType":"YulIdentifier","src":"4751:9:25"},{"kind":"number","nativeSrc":"4762:2:25","nodeType":"YulLiteral","src":"4762:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4744:6:25","nodeType":"YulIdentifier","src":"4744:6:25"},"nativeSrc":"4744:21:25","nodeType":"YulFunctionCall","src":"4744:21:25"},"nativeSrc":"4744:21:25","nodeType":"YulExpressionStatement","src":"4744:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4785:9:25","nodeType":"YulIdentifier","src":"4785:9:25"},{"kind":"number","nativeSrc":"4796:2:25","nodeType":"YulLiteral","src":"4796:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4781:3:25","nodeType":"YulIdentifier","src":"4781:3:25"},"nativeSrc":"4781:18:25","nodeType":"YulFunctionCall","src":"4781:18:25"},{"kind":"number","nativeSrc":"4801:2:25","nodeType":"YulLiteral","src":"4801:2:25","type":"","value":"48"}],"functionName":{"name":"mstore","nativeSrc":"4774:6:25","nodeType":"YulIdentifier","src":"4774:6:25"},"nativeSrc":"4774:30:25","nodeType":"YulFunctionCall","src":"4774:30:25"},"nativeSrc":"4774:30:25","nodeType":"YulExpressionStatement","src":"4774:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4824:9:25","nodeType":"YulIdentifier","src":"4824:9:25"},{"kind":"number","nativeSrc":"4835:2:25","nodeType":"YulLiteral","src":"4835:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4820:3:25","nodeType":"YulIdentifier","src":"4820:3:25"},"nativeSrc":"4820:18:25","nodeType":"YulFunctionCall","src":"4820:18:25"},{"hexValue":"53796e746845524332303a20496e697469616c2061646d696e2063616e6e6f74","kind":"string","nativeSrc":"4840:34:25","nodeType":"YulLiteral","src":"4840:34:25","type":"","value":"SynthERC20: Initial admin cannot"}],"functionName":{"name":"mstore","nativeSrc":"4813:6:25","nodeType":"YulIdentifier","src":"4813:6:25"},"nativeSrc":"4813:62:25","nodeType":"YulFunctionCall","src":"4813:62:25"},"nativeSrc":"4813:62:25","nodeType":"YulExpressionStatement","src":"4813:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4895:9:25","nodeType":"YulIdentifier","src":"4895:9:25"},{"kind":"number","nativeSrc":"4906:2:25","nodeType":"YulLiteral","src":"4906:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4891:3:25","nodeType":"YulIdentifier","src":"4891:3:25"},"nativeSrc":"4891:18:25","nodeType":"YulFunctionCall","src":"4891:18:25"},{"hexValue":"206265207a65726f2061646472657373","kind":"string","nativeSrc":"4911:18:25","nodeType":"YulLiteral","src":"4911:18:25","type":"","value":" be zero address"}],"functionName":{"name":"mstore","nativeSrc":"4884:6:25","nodeType":"YulIdentifier","src":"4884:6:25"},"nativeSrc":"4884:46:25","nodeType":"YulFunctionCall","src":"4884:46:25"},"nativeSrc":"4884:46:25","nodeType":"YulExpressionStatement","src":"4884:46:25"},{"nativeSrc":"4939:27:25","nodeType":"YulAssignment","src":"4939:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4951:9:25","nodeType":"YulIdentifier","src":"4951:9:25"},{"kind":"number","nativeSrc":"4962:3:25","nodeType":"YulLiteral","src":"4962:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4947:3:25","nodeType":"YulIdentifier","src":"4947:3:25"},"nativeSrc":"4947:19:25","nodeType":"YulFunctionCall","src":"4947:19:25"},"variableNames":[{"name":"tail","nativeSrc":"4939:4:25","nodeType":"YulIdentifier","src":"4939:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_31b9a123421668ab96a3606bf31de15aa3f9201adf8d135afa05f280ae599e7b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4560:412:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4711:9:25","nodeType":"YulTypedName","src":"4711:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4725:4:25","nodeType":"YulTypedName","src":"4725:4:25","type":""}],"src":"4560:412:25"},{"body":{"nativeSrc":"5151:238:25","nodeType":"YulBlock","src":"5151:238:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5168:9:25","nodeType":"YulIdentifier","src":"5168:9:25"},{"kind":"number","nativeSrc":"5179:2:25","nodeType":"YulLiteral","src":"5179:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5161:6:25","nodeType":"YulIdentifier","src":"5161:6:25"},"nativeSrc":"5161:21:25","nodeType":"YulFunctionCall","src":"5161:21:25"},"nativeSrc":"5161:21:25","nodeType":"YulExpressionStatement","src":"5161:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5202:9:25","nodeType":"YulIdentifier","src":"5202:9:25"},{"kind":"number","nativeSrc":"5213:2:25","nodeType":"YulLiteral","src":"5213:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5198:3:25","nodeType":"YulIdentifier","src":"5198:3:25"},"nativeSrc":"5198:18:25","nodeType":"YulFunctionCall","src":"5198:18:25"},{"kind":"number","nativeSrc":"5218:2:25","nodeType":"YulLiteral","src":"5218:2:25","type":"","value":"48"}],"functionName":{"name":"mstore","nativeSrc":"5191:6:25","nodeType":"YulIdentifier","src":"5191:6:25"},"nativeSrc":"5191:30:25","nodeType":"YulFunctionCall","src":"5191:30:25"},"nativeSrc":"5191:30:25","nodeType":"YulExpressionStatement","src":"5191:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5241:9:25","nodeType":"YulIdentifier","src":"5241:9:25"},{"kind":"number","nativeSrc":"5252:2:25","nodeType":"YulLiteral","src":"5252:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5237:3:25","nodeType":"YulIdentifier","src":"5237:3:25"},"nativeSrc":"5237:18:25","nodeType":"YulFunctionCall","src":"5237:18:25"},{"hexValue":"53796e746845524332303a204d696e7465722f4275726e65722063616e6e6f74","kind":"string","nativeSrc":"5257:34:25","nodeType":"YulLiteral","src":"5257:34:25","type":"","value":"SynthERC20: Minter/Burner cannot"}],"functionName":{"name":"mstore","nativeSrc":"5230:6:25","nodeType":"YulIdentifier","src":"5230:6:25"},"nativeSrc":"5230:62:25","nodeType":"YulFunctionCall","src":"5230:62:25"},"nativeSrc":"5230:62:25","nodeType":"YulExpressionStatement","src":"5230:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5312:9:25","nodeType":"YulIdentifier","src":"5312:9:25"},{"kind":"number","nativeSrc":"5323:2:25","nodeType":"YulLiteral","src":"5323:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5308:3:25","nodeType":"YulIdentifier","src":"5308:3:25"},"nativeSrc":"5308:18:25","nodeType":"YulFunctionCall","src":"5308:18:25"},{"hexValue":"206265207a65726f2061646472657373","kind":"string","nativeSrc":"5328:18:25","nodeType":"YulLiteral","src":"5328:18:25","type":"","value":" be zero address"}],"functionName":{"name":"mstore","nativeSrc":"5301:6:25","nodeType":"YulIdentifier","src":"5301:6:25"},"nativeSrc":"5301:46:25","nodeType":"YulFunctionCall","src":"5301:46:25"},"nativeSrc":"5301:46:25","nodeType":"YulExpressionStatement","src":"5301:46:25"},{"nativeSrc":"5356:27:25","nodeType":"YulAssignment","src":"5356:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5368:9:25","nodeType":"YulIdentifier","src":"5368:9:25"},{"kind":"number","nativeSrc":"5379:3:25","nodeType":"YulLiteral","src":"5379:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5364:3:25","nodeType":"YulIdentifier","src":"5364:3:25"},"nativeSrc":"5364:19:25","nodeType":"YulFunctionCall","src":"5364:19:25"},"variableNames":[{"name":"tail","nativeSrc":"5356:4:25","nodeType":"YulIdentifier","src":"5356:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f7894880915fee4c23e5de34cdb65b061b927752ccc1b307eb1bc8142eec655__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4977:412:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5128:9:25","nodeType":"YulTypedName","src":"5128:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5142:4:25","nodeType":"YulTypedName","src":"5142:4:25","type":""}],"src":"4977:412:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_31b9a123421668ab96a3606bf31de15aa3f9201adf8d135afa05f280ae599e7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"SynthERC20: Initial admin cannot\")\n        mstore(add(headStart, 96), \" be zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2f7894880915fee4c23e5de34cdb65b061b927752ccc1b307eb1bc8142eec655__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"SynthERC20: Minter/Burner cannot\")\n        mstore(add(headStart, 96), \" be zero address\")\n        tail := add(headStart, 128)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161162738038061162783398101604081905261002f916103bd565b8484600361003d83826104e9565b50600461004a82826104e9565b5050506001600160a01b0382166100c15760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a20496e697469616c2061646d696e2063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084015b60405180910390fd5b6001600160a01b0381166101305760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a204d696e7465722f4275726e65722063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084016100b8565b6007805460ff191660ff851617905561014a6000836101ab565b506101757f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826101ab565b506101a07f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826101ab565b5050505050506105a7565b6000806101b884846101e3565b905080156101da5760008481526006602052604090206101d89084610291565b505b90505b92915050565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166102895760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556102413390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101dd565b5060006101dd565b60006101da836001600160a01b0384166000818152600183016020526040812054610289575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101dd565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261030f57600080fd5b81516001600160401b03811115610328576103286102e8565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610356576103566102e8565b60405281815283820160200185101561036e57600080fd5b60005b8281101561038d57602081860181015183830182015201610371565b506000918101602001919091529392505050565b80516001600160a01b03811681146103b857600080fd5b919050565b600080600080600060a086880312156103d557600080fd5b85516001600160401b038111156103eb57600080fd5b6103f7888289016102fe565b602088015190965090506001600160401b0381111561041557600080fd5b610421888289016102fe565b945050604086015160ff8116811461043857600080fd5b9250610446606087016103a1565b9150610454608087016103a1565b90509295509295909350565b600181811c9082168061047457607f821691505b60208210810361049457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104e457806000526020600020601f840160051c810160208510156104c15750805b601f840160051c820191505b818110156104e157600081556001016104cd565b50505b505050565b81516001600160401b03811115610502576105026102e8565b610516816105108454610460565b8461049a565b6020601f82116001811461054a57600083156105325750848201515b600019600385901b1c1916600184901b1784556104e1565b600084815260208120601f198516915b8281101561057a578785015182556020948501946001909201910161055a565b50848210156105985786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611071806105b66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a3246ad31161007c578063a3246ad314610309578063a9059cbb14610329578063ca15c8731461033c578063d53913931461034f578063d547741f14610376578063dd62ed3e1461038957600080fd5b806370a082311461027f57806379cc6790146102a85780639010d07c146102bb57806391d14854146102e657806395d89b41146102f9578063a217fddf1461030157600080fd5b8063282c51f311610115578063282c51f3146101f55780632f2ff15d1461021c578063313ce5671461023157806336568abe1461024657806340c10f191461025957806342966c681461026c57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063095ea7b31461019a57806318160ddd146101ad57806323b872dd146101bf578063248a9ca3146101d2575b600080fd5b61017061016b366004610da6565b6103c2565b60405190151581526020015b60405180910390f35b61018d6103ed565b60405161017c9190610dd0565b6101706101a8366004610e3a565b61047f565b6002545b60405190815260200161017c565b6101706101cd366004610e64565b610497565b6101b16101e0366004610ea1565b60009081526005602052604090206001015490565b6101b17f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61022f61022a366004610eba565b6104bb565b005b60075460405160ff909116815260200161017c565b61022f610254366004610eba565b6104e6565b61022f610267366004610e3a565b61051e565b61022f61027a366004610ea1565b610552565b6101b161028d366004610ee6565b6001600160a01b031660009081526020819052604090205490565b61022f6102b6366004610e3a565b61055f565b6102ce6102c9366004610f01565b610593565b6040516001600160a01b03909116815260200161017c565b6101706102f4366004610eba565b6105b2565b61018d6105dd565b6101b1600081565b61031c610317366004610ea1565b6105ec565b60405161017c9190610f23565b610170610337366004610e3a565b610606565b6101b161034a366004610ea1565b610614565b6101b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61022f610384366004610eba565b61062b565b6101b1610397366004610f6f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216635a05180f60e01b14806103e757506103e782610650565b92915050565b6060600380546103fc90610f99565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f99565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60003361048d818585610685565b5060019392505050565b6000336104a5858285610692565b6104b0858585610710565b506001949350505050565b6000828152600560205260409020600101546104d68161076f565b6104e08383610779565b50505050565b6001600160a01b038116331461050f5760405163334bd91960e11b815260040160405180910390fd5b61051982826107ae565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105488161076f565b61051983836107db565b61055c3382610815565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486105898161076f565b610519838361084b565b60008281526006602052604081206105ab9083610860565b9392505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103fc90610f99565b60008181526006602052604090206060906103e79061086c565b60003361048d818585610710565b60008181526006602052604081206103e790610879565b6000828152600560205260409020600101546106468161076f565b6104e083836107ae565b60006001600160e01b03198216637965db0b60e01b14806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b6105198383836001610883565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156104e0578181101561070157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104e084848484036000610883565b6001600160a01b03831661073a57604051634b637e8f60e11b8152600060048201526024016106f8565b6001600160a01b0382166107645760405163ec442f0560e01b8152600060048201526024016106f8565b610519838383610958565b61055c8133610a82565b6000806107868484610abb565b905080156105ab5760008481526006602052604090206107a69084610b4f565b509392505050565b6000806107bb8484610b64565b905080156105ab5760008481526006602052604090206107a69084610bd1565b6001600160a01b0382166108055760405163ec442f0560e01b8152600060048201526024016106f8565b61081160008383610958565b5050565b6001600160a01b03821661083f57604051634b637e8f60e11b8152600060048201526024016106f8565b61081182600083610958565b610856823383610692565b6108118282610815565b60006105ab8383610be6565b606060006105ab83610c10565b60006103e7825490565b6001600160a01b0384166108ad5760405163e602df0560e01b8152600060048201526024016106f8565b6001600160a01b0383166108d757604051634a1406b160e11b8152600060048201526024016106f8565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104e057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161094a91815260200190565b60405180910390a350505050565b6001600160a01b0383166109835780600260008282546109789190610fe9565b909155506109f59050565b6001600160a01b038316600090815260208190526040902054818110156109d65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106f8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1157600280548290039055610a30565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7591815260200190565b60405180910390a3505050565b610a8c82826105b2565b6108115760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106f8565b6000610ac783836105b2565b610b475760008381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610aff3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103e7565b5060006103e7565b60006105ab836001600160a01b038416610c6c565b6000610b7083836105b2565b15610b475760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103e7565b60006105ab836001600160a01b038416610cb3565b6000826000018281548110610bfd57610bfd610ffc565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c6057602002820191906000526020600020905b815481526020019060010190808311610c4c575b50505050509050919050565b6000818152600183016020526040812054610b47575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e7565b60008181526001830160205260408120548015610d9c576000610cd7600183611012565b8554909150600090610ceb90600190611012565b9050808214610d50576000866000018281548110610d0b57610d0b610ffc565b9060005260206000200154905080876000018481548110610d2e57610d2e610ffc565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6157610d61611025565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103e7565b60009150506103e7565b600060208284031215610db857600080fd5b81356001600160e01b0319811681146105ab57600080fd5b602081526000825180602084015260005b81811015610dfe5760208186018101516040868401015201610de1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e3557600080fd5b919050565b60008060408385031215610e4d57600080fd5b610e5683610e1e565b946020939093013593505050565b600080600060608486031215610e7957600080fd5b610e8284610e1e565b9250610e9060208501610e1e565b929592945050506040919091013590565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b82359150610edd60208401610e1e565b90509250929050565b600060208284031215610ef857600080fd5b6105ab82610e1e565b60008060408385031215610f1457600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015610f645783516001600160a01b0316835260209384019390920191600101610f3d565b509095945050505050565b60008060408385031215610f8257600080fd5b610f8b83610e1e565b9150610edd60208401610e1e565b600181811c90821680610fad57607f821691505b602082108103610fcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103e7576103e7610fd3565b634e487b7160e01b600052603260045260246000fd5b818103818111156103e7576103e7610fd3565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d355b8f192c5d82ea003a2bd0ea99dd16d5c2e7b93b60cf8d1aa85b68840a4d564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1627 CODESIZE SUB DUP1 PUSH2 0x1627 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A20496E697469616C2061646D696E2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A204D696E7465722F4275726E65722063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH2 0x14A PUSH1 0x0 DUP4 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x175 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x1A0 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B8 DUP5 DUP5 PUSH2 0x1E3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1D8 SWAP1 DUP5 PUSH2 0x291 JUMP JUMPDEST POP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x289 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x241 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1DD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x289 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH2 0x328 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F7 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x421 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x446 PUSH1 0x60 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x454 PUSH1 0x80 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x474 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4C1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x502 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x510 DUP5 SLOAD PUSH2 0x460 JUMP JUMPDEST DUP5 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54A JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x532 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x57A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x55A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x598 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1071 DUP1 PUSH2 0x5B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x22F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x22F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH2 0x3E7 DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4A5 DUP6 DUP3 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x4B0 DUP6 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4D6 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x7AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x548 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x55C CALLER DUP3 PUSH2 0x815 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x589 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5AB SWAP1 DUP4 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x3E7 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E7 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x646 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x55C DUP2 CALLER PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x786 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xB4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7BB DUP5 DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x0 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 DUP3 PUSH1 0x0 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x811 DUP3 DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 DUP4 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x983 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x9F5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA8C DUP3 DUP3 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAFF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST ISZERO PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBFD JUMPI PUSH2 0xBFD PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC4C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB47 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 PUSH2 0xCD7 PUSH1 0x1 DUP4 PUSH2 0x1012 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xCEB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xD50 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0B PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD61 JUMPI PUSH2 0xD61 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xDE1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE90 PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SSTORE 0xB8 CALL SWAP3 0xC5 0xD8 0x2E LOG0 SUB LOG2 0xBD 0xE 0xA9 SWAP14 0xD1 PUSH14 0x5C2E7B93B60CF8D1AA85B68840A4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"300:2660:22:-:0;;;575:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;841:4;847:6;1648:5:6;:13;841:4:22;1648:5:6;:13;:::i;:::-;-1:-1:-1;1671:7:6;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;873:26:22;::::1;865:87;;;::::0;-1:-1:-1;;;865:87:22;;4762:2:25;865:87:22::1;::::0;::::1;4744:21:25::0;4801:2;4781:18;;;4774:30;4840:34;4820:18;;;4813:62;-1:-1:-1;;;4891:18:25;;;4884:46;4947:19;;865:87:22::1;;;;;;;;;-1:-1:-1::0;;;;;970:29:22;::::1;962:90;;;::::0;-1:-1:-1;;;962:90:22;;5179:2:25;962:90:22::1;::::0;::::1;5161:21:25::0;5218:2;5198:18;;;5191:30;5257:34;5237:18;;;5230:62;-1:-1:-1;;;5308:18:25;;;5301:46;5364:19;;962:90:22::1;4977:412:25::0;962:90:22::1;1071:9;:21:::0;;-1:-1:-1;;1071:21:22::1;;::::0;::::1;;::::0;;1103:44:::1;-1:-1:-1::0;1134:12:22;1103:10:::1;:44::i;:::-;-1:-1:-1::0;1157:40:22::1;413:24;1181:15:::0;1157:10:::1;:40::i;:::-;-1:-1:-1::0;1207:40:22::1;481:24;1231:15:::0;1207:10:::1;:40::i;:::-;;575:712:::0;;;;;300:2660;;2748:257:3;2834:4;;2865:31;2882:4;2888:7;2865:16;:31::i;:::-;2850:46;;2910:7;2906:69;;;2933:18;;;;:12;:18;;;;;:31;;2956:7;2933:22;:31::i;:::-;;2906:69;2991:7;-1:-1:-1;2748:257:3;;;;;:::o;6179:316:0:-;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;9332:150:20;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:20;;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;14:127:25;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:25;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:25;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:25;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:25;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:25;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:25:o;985:177::-;1064:13;;-1:-1:-1;;;;;1106:31:25;;1096:42;;1086:70;;1152:1;1149;1142:12;1086:70;985:177;;;:::o;1167:879::-;1291:6;1299;1307;1315;1323;1376:3;1364:9;1355:7;1351:23;1347:33;1344:53;;;1393:1;1390;1383:12;1344:53;1420:16;;-1:-1:-1;;;;;1448:30:25;;1445:50;;;1491:1;1488;1481:12;1445:50;1514:61;1567:7;1558:6;1547:9;1543:22;1514:61;:::i;:::-;1621:2;1606:18;;1600:25;1504:71;;-1:-1:-1;1600:25:25;-1:-1:-1;;;;;;1637:32:25;;1634:52;;;1682:1;1679;1672:12;1634:52;1705:63;1760:7;1749:8;1738:9;1734:24;1705:63;:::i;:::-;1695:73;;;1811:2;1800:9;1796:18;1790:25;1855:4;1848:5;1844:16;1837:5;1834:27;1824:55;;1875:1;1872;1865:12;1824:55;1898:5;-1:-1:-1;1922:49:25;1967:2;1952:18;;1922:49;:::i;:::-;1912:59;;1990:50;2035:3;2024:9;2020:19;1990:50;:::i;:::-;1980:60;;1167:879;;;;;;;;:::o;2051:380::-;2130:1;2126:12;;;;2173;;;2194:61;;2248:4;2240:6;2236:17;2226:27;;2194:61;2301:2;2293:6;2290:14;2270:18;2267:38;2264:161;;2347:10;2342:3;2338:20;2335:1;2328:31;2382:4;2379:1;2372:15;2410:4;2407:1;2400:15;2264:161;;2051:380;;;:::o;2562:518::-;2664:2;2659:3;2656:11;2653:421;;;2700:5;2697:1;2690:16;2744:4;2741:1;2731:18;2814:2;2802:10;2798:19;2795:1;2791:27;2785:4;2781:38;2850:4;2838:10;2835:20;2832:47;;;-1:-1:-1;2873:4:25;2832:47;2928:2;2923:3;2919:12;2916:1;2912:20;2906:4;2902:31;2892:41;;2983:81;3001:2;2994:5;2991:13;2983:81;;;3060:1;3046:16;;3027:1;3016:13;2983:81;;;2987:3;;2653:421;2562:518;;;:::o;3256:1299::-;3376:10;;-1:-1:-1;;;;;3398:30:25;;3395:56;;;3431:18;;:::i;:::-;3460:97;3550:6;3510:38;3542:4;3536:11;3510:38;:::i;:::-;3504:4;3460:97;:::i;:::-;3606:4;3637:2;3626:14;;3654:1;3649:649;;;;4342:1;4359:6;4356:89;;;-1:-1:-1;4411:19:25;;;4405:26;4356:89;-1:-1:-1;;3213:1:25;3209:11;;;3205:24;3201:29;3191:40;3237:1;3233:11;;;3188:57;4458:81;;3619:930;;3649:649;2509:1;2502:14;;;2546:4;2533:18;;-1:-1:-1;;3685:20:25;;;3803:222;3817:7;3814:1;3811:14;3803:222;;;3899:19;;;3893:26;3878:42;;4006:4;3991:20;;;;3959:1;3947:14;;;;3833:12;3803:222;;;3807:3;4053:6;4044:7;4041:19;4038:201;;;4114:19;;;4108:26;-1:-1:-1;;4197:1:25;4193:14;;;4209:3;4189:24;4185:37;4181:42;4166:58;4151:74;;4038:201;-1:-1:-1;;;;4285:1:25;4269:14;;;4265:22;4252:36;;-1:-1:-1;3256:1299:25:o;4977:412::-;300:2660:22;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BURNER_ROLE_6950":{"entryPoint":null,"id":6950,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6945":{"entryPoint":null,"id":6945,"parameterSlots":0,"returnSlots":0},"@_add_6235":{"entryPoint":3180,"id":6235,"parameterSlots":2,"returnSlots":1},"@_approve_1253":{"entryPoint":1669,"id":1253,"parameterSlots":3,"returnSlots":0},"@_approve_1313":{"entryPoint":2179,"id":1313,"parameterSlots":4,"returnSlots":0},"@_at_6412":{"entryPoint":3046,"id":6412,"parameterSlots":2,"returnSlots":1},"@_burn_1235":{"entryPoint":2069,"id":1235,"parameterSlots":2,"returnSlots":0},"@_checkRole_114":{"entryPoint":2690,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":1903,"id":93,"parameterSlots":1,"returnSlots":0},"@_contains_6381":{"entryPoint":null,"id":6381,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":2747,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_651":{"entryPoint":1913,"id":651,"parameterSlots":2,"returnSlots":1},"@_length_6395":{"entryPoint":null,"id":6395,"parameterSlots":1,"returnSlots":1},"@_mint_1202":{"entryPoint":2011,"id":1202,"parameterSlots":2,"returnSlots":0},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@_remove_6319":{"entryPoint":3251,"id":6319,"parameterSlots":2,"returnSlots":1},"@_revokeRole_294":{"entryPoint":2916,"id":294,"parameterSlots":2,"returnSlots":1},"@_revokeRole_683":{"entryPoint":1966,"id":683,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1361":{"entryPoint":1682,"id":1361,"parameterSlots":3,"returnSlots":0},"@_transfer_1092":{"entryPoint":1808,"id":1092,"parameterSlots":3,"returnSlots":0},"@_update_1169":{"entryPoint":2392,"id":1169,"parameterSlots":3,"returnSlots":0},"@_values_6426":{"entryPoint":3088,"id":6426,"parameterSlots":1,"returnSlots":1},"@add_6591":{"entryPoint":2895,"id":6591,"parameterSlots":2,"returnSlots":1},"@allowance_989":{"entryPoint":null,"id":989,"parameterSlots":2,"returnSlots":1},"@approve_1013":{"entryPoint":1151,"id":1013,"parameterSlots":2,"returnSlots":1},"@at_6700":{"entryPoint":2144,"id":6700,"parameterSlots":2,"returnSlots":1},"@balanceOf_948":{"entryPoint":null,"id":948,"parameterSlots":1,"returnSlots":1},"@burnFrom_1485":{"entryPoint":2123,"id":1485,"parameterSlots":2,"returnSlots":0},"@burnFrom_7056":{"entryPoint":1375,"id":7056,"parameterSlots":2,"returnSlots":0},"@burn_1464":{"entryPoint":1362,"id":1464,"parameterSlots":1,"returnSlots":0},"@decimals_7019":{"entryPoint":null,"id":7019,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_603":{"entryPoint":1556,"id":603,"parameterSlots":1,"returnSlots":1},"@getRoleMember_588":{"entryPoint":1427,"id":588,"parameterSlots":2,"returnSlots":1},"@getRoleMembers_619":{"entryPoint":1516,"id":619,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1211,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1458,"id":80,"parameterSlots":2,"returnSlots":1},"@length_6673":{"entryPoint":2169,"id":6673,"parameterSlots":1,"returnSlots":1},"@mint_7036":{"entryPoint":1310,"id":7036,"parameterSlots":2,"returnSlots":0},"@name_908":{"entryPoint":1005,"id":908,"parameterSlots":0,"returnSlots":1},"@remove_6618":{"entryPoint":3025,"id":6618,"parameterSlots":2,"returnSlots":1},"@renounceRole_189":{"entryPoint":1254,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":1579,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2781":{"entryPoint":null,"id":2781,"parameterSlots":1,"returnSlots":1},"@supportsInterface_570":{"entryPoint":962,"id":570,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1616,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_917":{"entryPoint":1501,"id":917,"parameterSlots":0,"returnSlots":1},"@totalSupply_935":{"entryPoint":null,"id":935,"parameterSlots":0,"returnSlots":1},"@transferFrom_1045":{"entryPoint":1175,"id":1045,"parameterSlots":3,"returnSlots":1},"@transfer_972":{"entryPoint":1542,"id":972,"parameterSlots":2,"returnSlots":1},"@values_6730":{"entryPoint":2156,"id":6730,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":3614,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3814,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3951,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3684,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3642,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":3745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3770,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":3841,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4073,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4114,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3993,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4051,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":4133,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4092,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6538:25","nodeType":"YulBlock","src":"0:6538:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"83:217:25","nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nativeSrc":"129:16:25","nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:25","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:25","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:25","nodeType":"YulIdentifier","src":"131:6:25"},"nativeSrc":"131:12:25","nodeType":"YulFunctionCall","src":"131:12:25"},"nativeSrc":"131:12:25","nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:25","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nativeSrc":"113:9:25","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nativeSrc":"100:3:25","nodeType":"YulIdentifier","src":"100:3:25"},"nativeSrc":"100:23:25","nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nativeSrc":"125:2:25","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:25","nodeType":"YulIdentifier","src":"96:3:25"},"nativeSrc":"96:32:25","nodeType":"YulFunctionCall","src":"96:32:25"},"nativeSrc":"93:52:25","nodeType":"YulIf","src":"93:52:25"},{"nativeSrc":"154:36:25","nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:25","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:25","nodeType":"YulIdentifier","src":"167:12:25"},"nativeSrc":"167:23:25","nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nativeSrc":"158:5:25","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nativeSrc":"254:16:25","nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:25","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:25","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:25","nodeType":"YulIdentifier","src":"256:6:25"},"nativeSrc":"256:12:25","nodeType":"YulFunctionCall","src":"256:12:25"},"nativeSrc":"256:12:25","nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:25","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nativeSrc":"223:5:25","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nativeSrc":"234:3:25","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:25","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:25","nodeType":"YulIdentifier","src":"230:3:25"},"nativeSrc":"230:20:25","nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nativeSrc":"219:3:25","nodeType":"YulIdentifier","src":"219:3:25"},"nativeSrc":"219:32:25","nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nativeSrc":"209:2:25","nodeType":"YulIdentifier","src":"209:2:25"},"nativeSrc":"209:43:25","nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nativeSrc":"202:6:25","nodeType":"YulIdentifier","src":"202:6:25"},"nativeSrc":"202:51:25","nodeType":"YulFunctionCall","src":"202:51:25"},"nativeSrc":"199:71:25","nodeType":"YulIf","src":"199:71:25"},{"nativeSrc":"279:15:25","nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nativeSrc":"289:5:25","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nativeSrc":"279:6:25","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:25","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nativeSrc":"60:7:25","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:25","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nativeSrc":"400:92:25","nodeType":"YulBlock","src":"400:92:25","statements":[{"nativeSrc":"410:26:25","nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:25","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nativeSrc":"433:2:25","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:25","nodeType":"YulIdentifier","src":"418:3:25"},"nativeSrc":"418:18:25","nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nativeSrc":"410:4:25","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:25","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:25","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nativeSrc":"470:6:25","nodeType":"YulIdentifier","src":"470:6:25"},"nativeSrc":"470:14:25","nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nativeSrc":"463:6:25","nodeType":"YulIdentifier","src":"463:6:25"},"nativeSrc":"463:22:25","nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nativeSrc":"445:6:25","nodeType":"YulIdentifier","src":"445:6:25"},"nativeSrc":"445:41:25","nodeType":"YulFunctionCall","src":"445:41:25"},"nativeSrc":"445:41:25","nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:25","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nativeSrc":"380:6:25","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:25","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nativeSrc":"618:406:25","nodeType":"YulBlock","src":"618:406:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"635:9:25","nodeType":"YulIdentifier","src":"635:9:25"},{"kind":"number","nativeSrc":"646:2:25","nodeType":"YulLiteral","src":"646:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"628:6:25","nodeType":"YulIdentifier","src":"628:6:25"},"nativeSrc":"628:21:25","nodeType":"YulFunctionCall","src":"628:21:25"},"nativeSrc":"628:21:25","nodeType":"YulExpressionStatement","src":"628:21:25"},{"nativeSrc":"658:27:25","nodeType":"YulVariableDeclaration","src":"658:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"678:6:25","nodeType":"YulIdentifier","src":"678:6:25"}],"functionName":{"name":"mload","nativeSrc":"672:5:25","nodeType":"YulIdentifier","src":"672:5:25"},"nativeSrc":"672:13:25","nodeType":"YulFunctionCall","src":"672:13:25"},"variables":[{"name":"length","nativeSrc":"662:6:25","nodeType":"YulTypedName","src":"662:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"705:9:25","nodeType":"YulIdentifier","src":"705:9:25"},{"kind":"number","nativeSrc":"716:2:25","nodeType":"YulLiteral","src":"716:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"701:3:25","nodeType":"YulIdentifier","src":"701:3:25"},"nativeSrc":"701:18:25","nodeType":"YulFunctionCall","src":"701:18:25"},{"name":"length","nativeSrc":"721:6:25","nodeType":"YulIdentifier","src":"721:6:25"}],"functionName":{"name":"mstore","nativeSrc":"694:6:25","nodeType":"YulIdentifier","src":"694:6:25"},"nativeSrc":"694:34:25","nodeType":"YulFunctionCall","src":"694:34:25"},"nativeSrc":"694:34:25","nodeType":"YulExpressionStatement","src":"694:34:25"},{"nativeSrc":"737:10:25","nodeType":"YulVariableDeclaration","src":"737:10:25","value":{"kind":"number","nativeSrc":"746:1:25","nodeType":"YulLiteral","src":"746:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"741:1:25","nodeType":"YulTypedName","src":"741:1:25","type":""}]},{"body":{"nativeSrc":"806:90:25","nodeType":"YulBlock","src":"806:90:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"835:9:25","nodeType":"YulIdentifier","src":"835:9:25"},{"name":"i","nativeSrc":"846:1:25","nodeType":"YulIdentifier","src":"846:1:25"}],"functionName":{"name":"add","nativeSrc":"831:3:25","nodeType":"YulIdentifier","src":"831:3:25"},"nativeSrc":"831:17:25","nodeType":"YulFunctionCall","src":"831:17:25"},{"kind":"number","nativeSrc":"850:2:25","nodeType":"YulLiteral","src":"850:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"827:3:25","nodeType":"YulIdentifier","src":"827:3:25"},"nativeSrc":"827:26:25","nodeType":"YulFunctionCall","src":"827:26:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"869:6:25","nodeType":"YulIdentifier","src":"869:6:25"},{"name":"i","nativeSrc":"877:1:25","nodeType":"YulIdentifier","src":"877:1:25"}],"functionName":{"name":"add","nativeSrc":"865:3:25","nodeType":"YulIdentifier","src":"865:3:25"},"nativeSrc":"865:14:25","nodeType":"YulFunctionCall","src":"865:14:25"},{"kind":"number","nativeSrc":"881:2:25","nodeType":"YulLiteral","src":"881:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"861:3:25","nodeType":"YulIdentifier","src":"861:3:25"},"nativeSrc":"861:23:25","nodeType":"YulFunctionCall","src":"861:23:25"}],"functionName":{"name":"mload","nativeSrc":"855:5:25","nodeType":"YulIdentifier","src":"855:5:25"},"nativeSrc":"855:30:25","nodeType":"YulFunctionCall","src":"855:30:25"}],"functionName":{"name":"mstore","nativeSrc":"820:6:25","nodeType":"YulIdentifier","src":"820:6:25"},"nativeSrc":"820:66:25","nodeType":"YulFunctionCall","src":"820:66:25"},"nativeSrc":"820:66:25","nodeType":"YulExpressionStatement","src":"820:66:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"767:1:25","nodeType":"YulIdentifier","src":"767:1:25"},{"name":"length","nativeSrc":"770:6:25","nodeType":"YulIdentifier","src":"770:6:25"}],"functionName":{"name":"lt","nativeSrc":"764:2:25","nodeType":"YulIdentifier","src":"764:2:25"},"nativeSrc":"764:13:25","nodeType":"YulFunctionCall","src":"764:13:25"},"nativeSrc":"756:140:25","nodeType":"YulForLoop","post":{"nativeSrc":"778:19:25","nodeType":"YulBlock","src":"778:19:25","statements":[{"nativeSrc":"780:15:25","nodeType":"YulAssignment","src":"780:15:25","value":{"arguments":[{"name":"i","nativeSrc":"789:1:25","nodeType":"YulIdentifier","src":"789:1:25"},{"kind":"number","nativeSrc":"792:2:25","nodeType":"YulLiteral","src":"792:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"785:3:25","nodeType":"YulIdentifier","src":"785:3:25"},"nativeSrc":"785:10:25","nodeType":"YulFunctionCall","src":"785:10:25"},"variableNames":[{"name":"i","nativeSrc":"780:1:25","nodeType":"YulIdentifier","src":"780:1:25"}]}]},"pre":{"nativeSrc":"760:3:25","nodeType":"YulBlock","src":"760:3:25","statements":[]},"src":"756:140:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"920:9:25","nodeType":"YulIdentifier","src":"920:9:25"},{"name":"length","nativeSrc":"931:6:25","nodeType":"YulIdentifier","src":"931:6:25"}],"functionName":{"name":"add","nativeSrc":"916:3:25","nodeType":"YulIdentifier","src":"916:3:25"},"nativeSrc":"916:22:25","nodeType":"YulFunctionCall","src":"916:22:25"},{"kind":"number","nativeSrc":"940:2:25","nodeType":"YulLiteral","src":"940:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"912:3:25","nodeType":"YulIdentifier","src":"912:3:25"},"nativeSrc":"912:31:25","nodeType":"YulFunctionCall","src":"912:31:25"},{"kind":"number","nativeSrc":"945:1:25","nodeType":"YulLiteral","src":"945:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"905:6:25","nodeType":"YulIdentifier","src":"905:6:25"},"nativeSrc":"905:42:25","nodeType":"YulFunctionCall","src":"905:42:25"},"nativeSrc":"905:42:25","nodeType":"YulExpressionStatement","src":"905:42:25"},{"nativeSrc":"956:62:25","nodeType":"YulAssignment","src":"956:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"972:9:25","nodeType":"YulIdentifier","src":"972:9:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"991:6:25","nodeType":"YulIdentifier","src":"991:6:25"},{"kind":"number","nativeSrc":"999:2:25","nodeType":"YulLiteral","src":"999:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"987:3:25","nodeType":"YulIdentifier","src":"987:3:25"},"nativeSrc":"987:15:25","nodeType":"YulFunctionCall","src":"987:15:25"},{"arguments":[{"kind":"number","nativeSrc":"1008:2:25","nodeType":"YulLiteral","src":"1008:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1004:3:25","nodeType":"YulIdentifier","src":"1004:3:25"},"nativeSrc":"1004:7:25","nodeType":"YulFunctionCall","src":"1004:7:25"}],"functionName":{"name":"and","nativeSrc":"983:3:25","nodeType":"YulIdentifier","src":"983:3:25"},"nativeSrc":"983:29:25","nodeType":"YulFunctionCall","src":"983:29:25"}],"functionName":{"name":"add","nativeSrc":"968:3:25","nodeType":"YulIdentifier","src":"968:3:25"},"nativeSrc":"968:45:25","nodeType":"YulFunctionCall","src":"968:45:25"},{"kind":"number","nativeSrc":"1015:2:25","nodeType":"YulLiteral","src":"1015:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"964:3:25","nodeType":"YulIdentifier","src":"964:3:25"},"nativeSrc":"964:54:25","nodeType":"YulFunctionCall","src":"964:54:25"},"variableNames":[{"name":"tail","nativeSrc":"956:4:25","nodeType":"YulIdentifier","src":"956:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"497:527:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"587:9:25","nodeType":"YulTypedName","src":"587:9:25","type":""},{"name":"value0","nativeSrc":"598:6:25","nodeType":"YulTypedName","src":"598:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"609:4:25","nodeType":"YulTypedName","src":"609:4:25","type":""}],"src":"497:527:25"},{"body":{"nativeSrc":"1078:124:25","nodeType":"YulBlock","src":"1078:124:25","statements":[{"nativeSrc":"1088:29:25","nodeType":"YulAssignment","src":"1088:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1110:6:25","nodeType":"YulIdentifier","src":"1110:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1097:12:25","nodeType":"YulIdentifier","src":"1097:12:25"},"nativeSrc":"1097:20:25","nodeType":"YulFunctionCall","src":"1097:20:25"},"variableNames":[{"name":"value","nativeSrc":"1088:5:25","nodeType":"YulIdentifier","src":"1088:5:25"}]},{"body":{"nativeSrc":"1180:16:25","nodeType":"YulBlock","src":"1180:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1189:1:25","nodeType":"YulLiteral","src":"1189:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1192:1:25","nodeType":"YulLiteral","src":"1192:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1182:6:25","nodeType":"YulIdentifier","src":"1182:6:25"},"nativeSrc":"1182:12:25","nodeType":"YulFunctionCall","src":"1182:12:25"},"nativeSrc":"1182:12:25","nodeType":"YulExpressionStatement","src":"1182:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1139:5:25","nodeType":"YulIdentifier","src":"1139:5:25"},{"arguments":[{"name":"value","nativeSrc":"1150:5:25","nodeType":"YulIdentifier","src":"1150:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1165:3:25","nodeType":"YulLiteral","src":"1165:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1170:1:25","nodeType":"YulLiteral","src":"1170:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1161:3:25","nodeType":"YulIdentifier","src":"1161:3:25"},"nativeSrc":"1161:11:25","nodeType":"YulFunctionCall","src":"1161:11:25"},{"kind":"number","nativeSrc":"1174:1:25","nodeType":"YulLiteral","src":"1174:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1157:3:25","nodeType":"YulIdentifier","src":"1157:3:25"},"nativeSrc":"1157:19:25","nodeType":"YulFunctionCall","src":"1157:19:25"}],"functionName":{"name":"and","nativeSrc":"1146:3:25","nodeType":"YulIdentifier","src":"1146:3:25"},"nativeSrc":"1146:31:25","nodeType":"YulFunctionCall","src":"1146:31:25"}],"functionName":{"name":"eq","nativeSrc":"1136:2:25","nodeType":"YulIdentifier","src":"1136:2:25"},"nativeSrc":"1136:42:25","nodeType":"YulFunctionCall","src":"1136:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1129:6:25","nodeType":"YulIdentifier","src":"1129:6:25"},"nativeSrc":"1129:50:25","nodeType":"YulFunctionCall","src":"1129:50:25"},"nativeSrc":"1126:70:25","nodeType":"YulIf","src":"1126:70:25"}]},"name":"abi_decode_address","nativeSrc":"1029:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1057:6:25","nodeType":"YulTypedName","src":"1057:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1068:5:25","nodeType":"YulTypedName","src":"1068:5:25","type":""}],"src":"1029:173:25"},{"body":{"nativeSrc":"1294:213:25","nodeType":"YulBlock","src":"1294:213:25","statements":[{"body":{"nativeSrc":"1340:16:25","nodeType":"YulBlock","src":"1340:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1349:1:25","nodeType":"YulLiteral","src":"1349:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1352:1:25","nodeType":"YulLiteral","src":"1352:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1342:6:25","nodeType":"YulIdentifier","src":"1342:6:25"},"nativeSrc":"1342:12:25","nodeType":"YulFunctionCall","src":"1342:12:25"},"nativeSrc":"1342:12:25","nodeType":"YulExpressionStatement","src":"1342:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1315:7:25","nodeType":"YulIdentifier","src":"1315:7:25"},{"name":"headStart","nativeSrc":"1324:9:25","nodeType":"YulIdentifier","src":"1324:9:25"}],"functionName":{"name":"sub","nativeSrc":"1311:3:25","nodeType":"YulIdentifier","src":"1311:3:25"},"nativeSrc":"1311:23:25","nodeType":"YulFunctionCall","src":"1311:23:25"},{"kind":"number","nativeSrc":"1336:2:25","nodeType":"YulLiteral","src":"1336:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1307:3:25","nodeType":"YulIdentifier","src":"1307:3:25"},"nativeSrc":"1307:32:25","nodeType":"YulFunctionCall","src":"1307:32:25"},"nativeSrc":"1304:52:25","nodeType":"YulIf","src":"1304:52:25"},{"nativeSrc":"1365:39:25","nodeType":"YulAssignment","src":"1365:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1394:9:25","nodeType":"YulIdentifier","src":"1394:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1375:18:25","nodeType":"YulIdentifier","src":"1375:18:25"},"nativeSrc":"1375:29:25","nodeType":"YulFunctionCall","src":"1375:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1365:6:25","nodeType":"YulIdentifier","src":"1365:6:25"}]},{"nativeSrc":"1413:14:25","nodeType":"YulVariableDeclaration","src":"1413:14:25","value":{"kind":"number","nativeSrc":"1426:1:25","nodeType":"YulLiteral","src":"1426:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1417:5:25","nodeType":"YulTypedName","src":"1417:5:25","type":""}]},{"nativeSrc":"1436:41:25","nodeType":"YulAssignment","src":"1436:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1462:9:25","nodeType":"YulIdentifier","src":"1462:9:25"},{"kind":"number","nativeSrc":"1473:2:25","nodeType":"YulLiteral","src":"1473:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1458:3:25","nodeType":"YulIdentifier","src":"1458:3:25"},"nativeSrc":"1458:18:25","nodeType":"YulFunctionCall","src":"1458:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"1445:12:25","nodeType":"YulIdentifier","src":"1445:12:25"},"nativeSrc":"1445:32:25","nodeType":"YulFunctionCall","src":"1445:32:25"},"variableNames":[{"name":"value","nativeSrc":"1436:5:25","nodeType":"YulIdentifier","src":"1436:5:25"}]},{"nativeSrc":"1486:15:25","nodeType":"YulAssignment","src":"1486:15:25","value":{"name":"value","nativeSrc":"1496:5:25","nodeType":"YulIdentifier","src":"1496:5:25"},"variableNames":[{"name":"value1","nativeSrc":"1486:6:25","nodeType":"YulIdentifier","src":"1486:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1207:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1252:9:25","nodeType":"YulTypedName","src":"1252:9:25","type":""},{"name":"dataEnd","nativeSrc":"1263:7:25","nodeType":"YulTypedName","src":"1263:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1275:6:25","nodeType":"YulTypedName","src":"1275:6:25","type":""},{"name":"value1","nativeSrc":"1283:6:25","nodeType":"YulTypedName","src":"1283:6:25","type":""}],"src":"1207:300:25"},{"body":{"nativeSrc":"1613:76:25","nodeType":"YulBlock","src":"1613:76:25","statements":[{"nativeSrc":"1623:26:25","nodeType":"YulAssignment","src":"1623:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1635:9:25","nodeType":"YulIdentifier","src":"1635:9:25"},{"kind":"number","nativeSrc":"1646:2:25","nodeType":"YulLiteral","src":"1646:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1631:3:25","nodeType":"YulIdentifier","src":"1631:3:25"},"nativeSrc":"1631:18:25","nodeType":"YulFunctionCall","src":"1631:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1623:4:25","nodeType":"YulIdentifier","src":"1623:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1665:9:25","nodeType":"YulIdentifier","src":"1665:9:25"},{"name":"value0","nativeSrc":"1676:6:25","nodeType":"YulIdentifier","src":"1676:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1658:6:25","nodeType":"YulIdentifier","src":"1658:6:25"},"nativeSrc":"1658:25:25","nodeType":"YulFunctionCall","src":"1658:25:25"},"nativeSrc":"1658:25:25","nodeType":"YulExpressionStatement","src":"1658:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1512:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1582:9:25","nodeType":"YulTypedName","src":"1582:9:25","type":""},{"name":"value0","nativeSrc":"1593:6:25","nodeType":"YulTypedName","src":"1593:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1604:4:25","nodeType":"YulTypedName","src":"1604:4:25","type":""}],"src":"1512:177:25"},{"body":{"nativeSrc":"1798:270:25","nodeType":"YulBlock","src":"1798:270:25","statements":[{"body":{"nativeSrc":"1844:16:25","nodeType":"YulBlock","src":"1844:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1853:1:25","nodeType":"YulLiteral","src":"1853:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1856:1:25","nodeType":"YulLiteral","src":"1856:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1846:6:25","nodeType":"YulIdentifier","src":"1846:6:25"},"nativeSrc":"1846:12:25","nodeType":"YulFunctionCall","src":"1846:12:25"},"nativeSrc":"1846:12:25","nodeType":"YulExpressionStatement","src":"1846:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1819:7:25","nodeType":"YulIdentifier","src":"1819:7:25"},{"name":"headStart","nativeSrc":"1828:9:25","nodeType":"YulIdentifier","src":"1828:9:25"}],"functionName":{"name":"sub","nativeSrc":"1815:3:25","nodeType":"YulIdentifier","src":"1815:3:25"},"nativeSrc":"1815:23:25","nodeType":"YulFunctionCall","src":"1815:23:25"},{"kind":"number","nativeSrc":"1840:2:25","nodeType":"YulLiteral","src":"1840:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1811:3:25","nodeType":"YulIdentifier","src":"1811:3:25"},"nativeSrc":"1811:32:25","nodeType":"YulFunctionCall","src":"1811:32:25"},"nativeSrc":"1808:52:25","nodeType":"YulIf","src":"1808:52:25"},{"nativeSrc":"1869:39:25","nodeType":"YulAssignment","src":"1869:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1898:9:25","nodeType":"YulIdentifier","src":"1898:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1879:18:25","nodeType":"YulIdentifier","src":"1879:18:25"},"nativeSrc":"1879:29:25","nodeType":"YulFunctionCall","src":"1879:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1869:6:25","nodeType":"YulIdentifier","src":"1869:6:25"}]},{"nativeSrc":"1917:48:25","nodeType":"YulAssignment","src":"1917:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1950:9:25","nodeType":"YulIdentifier","src":"1950:9:25"},{"kind":"number","nativeSrc":"1961:2:25","nodeType":"YulLiteral","src":"1961:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1946:3:25","nodeType":"YulIdentifier","src":"1946:3:25"},"nativeSrc":"1946:18:25","nodeType":"YulFunctionCall","src":"1946:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1927:18:25","nodeType":"YulIdentifier","src":"1927:18:25"},"nativeSrc":"1927:38:25","nodeType":"YulFunctionCall","src":"1927:38:25"},"variableNames":[{"name":"value1","nativeSrc":"1917:6:25","nodeType":"YulIdentifier","src":"1917:6:25"}]},{"nativeSrc":"1974:14:25","nodeType":"YulVariableDeclaration","src":"1974:14:25","value":{"kind":"number","nativeSrc":"1987:1:25","nodeType":"YulLiteral","src":"1987:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1978:5:25","nodeType":"YulTypedName","src":"1978:5:25","type":""}]},{"nativeSrc":"1997:41:25","nodeType":"YulAssignment","src":"1997:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2023:9:25","nodeType":"YulIdentifier","src":"2023:9:25"},{"kind":"number","nativeSrc":"2034:2:25","nodeType":"YulLiteral","src":"2034:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2019:3:25","nodeType":"YulIdentifier","src":"2019:3:25"},"nativeSrc":"2019:18:25","nodeType":"YulFunctionCall","src":"2019:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2006:12:25","nodeType":"YulIdentifier","src":"2006:12:25"},"nativeSrc":"2006:32:25","nodeType":"YulFunctionCall","src":"2006:32:25"},"variableNames":[{"name":"value","nativeSrc":"1997:5:25","nodeType":"YulIdentifier","src":"1997:5:25"}]},{"nativeSrc":"2047:15:25","nodeType":"YulAssignment","src":"2047:15:25","value":{"name":"value","nativeSrc":"2057:5:25","nodeType":"YulIdentifier","src":"2057:5:25"},"variableNames":[{"name":"value2","nativeSrc":"2047:6:25","nodeType":"YulIdentifier","src":"2047:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1694:374:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1748:9:25","nodeType":"YulTypedName","src":"1748:9:25","type":""},{"name":"dataEnd","nativeSrc":"1759:7:25","nodeType":"YulTypedName","src":"1759:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1771:6:25","nodeType":"YulTypedName","src":"1771:6:25","type":""},{"name":"value1","nativeSrc":"1779:6:25","nodeType":"YulTypedName","src":"1779:6:25","type":""},{"name":"value2","nativeSrc":"1787:6:25","nodeType":"YulTypedName","src":"1787:6:25","type":""}],"src":"1694:374:25"},{"body":{"nativeSrc":"2143:156:25","nodeType":"YulBlock","src":"2143:156:25","statements":[{"body":{"nativeSrc":"2189:16:25","nodeType":"YulBlock","src":"2189:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2198:1:25","nodeType":"YulLiteral","src":"2198:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2201:1:25","nodeType":"YulLiteral","src":"2201:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2191:6:25","nodeType":"YulIdentifier","src":"2191:6:25"},"nativeSrc":"2191:12:25","nodeType":"YulFunctionCall","src":"2191:12:25"},"nativeSrc":"2191:12:25","nodeType":"YulExpressionStatement","src":"2191:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2164:7:25","nodeType":"YulIdentifier","src":"2164:7:25"},{"name":"headStart","nativeSrc":"2173:9:25","nodeType":"YulIdentifier","src":"2173:9:25"}],"functionName":{"name":"sub","nativeSrc":"2160:3:25","nodeType":"YulIdentifier","src":"2160:3:25"},"nativeSrc":"2160:23:25","nodeType":"YulFunctionCall","src":"2160:23:25"},{"kind":"number","nativeSrc":"2185:2:25","nodeType":"YulLiteral","src":"2185:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2156:3:25","nodeType":"YulIdentifier","src":"2156:3:25"},"nativeSrc":"2156:32:25","nodeType":"YulFunctionCall","src":"2156:32:25"},"nativeSrc":"2153:52:25","nodeType":"YulIf","src":"2153:52:25"},{"nativeSrc":"2214:14:25","nodeType":"YulVariableDeclaration","src":"2214:14:25","value":{"kind":"number","nativeSrc":"2227:1:25","nodeType":"YulLiteral","src":"2227:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2218:5:25","nodeType":"YulTypedName","src":"2218:5:25","type":""}]},{"nativeSrc":"2237:32:25","nodeType":"YulAssignment","src":"2237:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2259:9:25","nodeType":"YulIdentifier","src":"2259:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2246:12:25","nodeType":"YulIdentifier","src":"2246:12:25"},"nativeSrc":"2246:23:25","nodeType":"YulFunctionCall","src":"2246:23:25"},"variableNames":[{"name":"value","nativeSrc":"2237:5:25","nodeType":"YulIdentifier","src":"2237:5:25"}]},{"nativeSrc":"2278:15:25","nodeType":"YulAssignment","src":"2278:15:25","value":{"name":"value","nativeSrc":"2288:5:25","nodeType":"YulIdentifier","src":"2288:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2278:6:25","nodeType":"YulIdentifier","src":"2278:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2073:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2109:9:25","nodeType":"YulTypedName","src":"2109:9:25","type":""},{"name":"dataEnd","nativeSrc":"2120:7:25","nodeType":"YulTypedName","src":"2120:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2132:6:25","nodeType":"YulTypedName","src":"2132:6:25","type":""}],"src":"2073:226:25"},{"body":{"nativeSrc":"2405:76:25","nodeType":"YulBlock","src":"2405:76:25","statements":[{"nativeSrc":"2415:26:25","nodeType":"YulAssignment","src":"2415:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2427:9:25","nodeType":"YulIdentifier","src":"2427:9:25"},{"kind":"number","nativeSrc":"2438:2:25","nodeType":"YulLiteral","src":"2438:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2423:3:25","nodeType":"YulIdentifier","src":"2423:3:25"},"nativeSrc":"2423:18:25","nodeType":"YulFunctionCall","src":"2423:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2415:4:25","nodeType":"YulIdentifier","src":"2415:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2457:9:25","nodeType":"YulIdentifier","src":"2457:9:25"},{"name":"value0","nativeSrc":"2468:6:25","nodeType":"YulIdentifier","src":"2468:6:25"}],"functionName":{"name":"mstore","nativeSrc":"2450:6:25","nodeType":"YulIdentifier","src":"2450:6:25"},"nativeSrc":"2450:25:25","nodeType":"YulFunctionCall","src":"2450:25:25"},"nativeSrc":"2450:25:25","nodeType":"YulExpressionStatement","src":"2450:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2304:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2374:9:25","nodeType":"YulTypedName","src":"2374:9:25","type":""},{"name":"value0","nativeSrc":"2385:6:25","nodeType":"YulTypedName","src":"2385:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2396:4:25","nodeType":"YulTypedName","src":"2396:4:25","type":""}],"src":"2304:177:25"},{"body":{"nativeSrc":"2573:213:25","nodeType":"YulBlock","src":"2573:213:25","statements":[{"body":{"nativeSrc":"2619:16:25","nodeType":"YulBlock","src":"2619:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2628:1:25","nodeType":"YulLiteral","src":"2628:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2631:1:25","nodeType":"YulLiteral","src":"2631:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2621:6:25","nodeType":"YulIdentifier","src":"2621:6:25"},"nativeSrc":"2621:12:25","nodeType":"YulFunctionCall","src":"2621:12:25"},"nativeSrc":"2621:12:25","nodeType":"YulExpressionStatement","src":"2621:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2594:7:25","nodeType":"YulIdentifier","src":"2594:7:25"},{"name":"headStart","nativeSrc":"2603:9:25","nodeType":"YulIdentifier","src":"2603:9:25"}],"functionName":{"name":"sub","nativeSrc":"2590:3:25","nodeType":"YulIdentifier","src":"2590:3:25"},"nativeSrc":"2590:23:25","nodeType":"YulFunctionCall","src":"2590:23:25"},{"kind":"number","nativeSrc":"2615:2:25","nodeType":"YulLiteral","src":"2615:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2586:3:25","nodeType":"YulIdentifier","src":"2586:3:25"},"nativeSrc":"2586:32:25","nodeType":"YulFunctionCall","src":"2586:32:25"},"nativeSrc":"2583:52:25","nodeType":"YulIf","src":"2583:52:25"},{"nativeSrc":"2644:14:25","nodeType":"YulVariableDeclaration","src":"2644:14:25","value":{"kind":"number","nativeSrc":"2657:1:25","nodeType":"YulLiteral","src":"2657:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2648:5:25","nodeType":"YulTypedName","src":"2648:5:25","type":""}]},{"nativeSrc":"2667:32:25","nodeType":"YulAssignment","src":"2667:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2689:9:25","nodeType":"YulIdentifier","src":"2689:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2676:12:25","nodeType":"YulIdentifier","src":"2676:12:25"},"nativeSrc":"2676:23:25","nodeType":"YulFunctionCall","src":"2676:23:25"},"variableNames":[{"name":"value","nativeSrc":"2667:5:25","nodeType":"YulIdentifier","src":"2667:5:25"}]},{"nativeSrc":"2708:15:25","nodeType":"YulAssignment","src":"2708:15:25","value":{"name":"value","nativeSrc":"2718:5:25","nodeType":"YulIdentifier","src":"2718:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2708:6:25","nodeType":"YulIdentifier","src":"2708:6:25"}]},{"nativeSrc":"2732:48:25","nodeType":"YulAssignment","src":"2732:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2765:9:25","nodeType":"YulIdentifier","src":"2765:9:25"},{"kind":"number","nativeSrc":"2776:2:25","nodeType":"YulLiteral","src":"2776:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2761:3:25","nodeType":"YulIdentifier","src":"2761:3:25"},"nativeSrc":"2761:18:25","nodeType":"YulFunctionCall","src":"2761:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2742:18:25","nodeType":"YulIdentifier","src":"2742:18:25"},"nativeSrc":"2742:38:25","nodeType":"YulFunctionCall","src":"2742:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2732:6:25","nodeType":"YulIdentifier","src":"2732:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2486:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2531:9:25","nodeType":"YulTypedName","src":"2531:9:25","type":""},{"name":"dataEnd","nativeSrc":"2542:7:25","nodeType":"YulTypedName","src":"2542:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2554:6:25","nodeType":"YulTypedName","src":"2554:6:25","type":""},{"name":"value1","nativeSrc":"2562:6:25","nodeType":"YulTypedName","src":"2562:6:25","type":""}],"src":"2486:300:25"},{"body":{"nativeSrc":"2888:87:25","nodeType":"YulBlock","src":"2888:87:25","statements":[{"nativeSrc":"2898:26:25","nodeType":"YulAssignment","src":"2898:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2910:9:25","nodeType":"YulIdentifier","src":"2910:9:25"},{"kind":"number","nativeSrc":"2921:2:25","nodeType":"YulLiteral","src":"2921:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2906:3:25","nodeType":"YulIdentifier","src":"2906:3:25"},"nativeSrc":"2906:18:25","nodeType":"YulFunctionCall","src":"2906:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2898:4:25","nodeType":"YulIdentifier","src":"2898:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2940:9:25","nodeType":"YulIdentifier","src":"2940:9:25"},{"arguments":[{"name":"value0","nativeSrc":"2955:6:25","nodeType":"YulIdentifier","src":"2955:6:25"},{"kind":"number","nativeSrc":"2963:4:25","nodeType":"YulLiteral","src":"2963:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2951:3:25","nodeType":"YulIdentifier","src":"2951:3:25"},"nativeSrc":"2951:17:25","nodeType":"YulFunctionCall","src":"2951:17:25"}],"functionName":{"name":"mstore","nativeSrc":"2933:6:25","nodeType":"YulIdentifier","src":"2933:6:25"},"nativeSrc":"2933:36:25","nodeType":"YulFunctionCall","src":"2933:36:25"},"nativeSrc":"2933:36:25","nodeType":"YulExpressionStatement","src":"2933:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2791:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2857:9:25","nodeType":"YulTypedName","src":"2857:9:25","type":""},{"name":"value0","nativeSrc":"2868:6:25","nodeType":"YulTypedName","src":"2868:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2879:4:25","nodeType":"YulTypedName","src":"2879:4:25","type":""}],"src":"2791:184:25"},{"body":{"nativeSrc":"3050:156:25","nodeType":"YulBlock","src":"3050:156:25","statements":[{"body":{"nativeSrc":"3096:16:25","nodeType":"YulBlock","src":"3096:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3105:1:25","nodeType":"YulLiteral","src":"3105:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3108:1:25","nodeType":"YulLiteral","src":"3108:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3098:6:25","nodeType":"YulIdentifier","src":"3098:6:25"},"nativeSrc":"3098:12:25","nodeType":"YulFunctionCall","src":"3098:12:25"},"nativeSrc":"3098:12:25","nodeType":"YulExpressionStatement","src":"3098:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3071:7:25","nodeType":"YulIdentifier","src":"3071:7:25"},{"name":"headStart","nativeSrc":"3080:9:25","nodeType":"YulIdentifier","src":"3080:9:25"}],"functionName":{"name":"sub","nativeSrc":"3067:3:25","nodeType":"YulIdentifier","src":"3067:3:25"},"nativeSrc":"3067:23:25","nodeType":"YulFunctionCall","src":"3067:23:25"},{"kind":"number","nativeSrc":"3092:2:25","nodeType":"YulLiteral","src":"3092:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3063:3:25","nodeType":"YulIdentifier","src":"3063:3:25"},"nativeSrc":"3063:32:25","nodeType":"YulFunctionCall","src":"3063:32:25"},"nativeSrc":"3060:52:25","nodeType":"YulIf","src":"3060:52:25"},{"nativeSrc":"3121:14:25","nodeType":"YulVariableDeclaration","src":"3121:14:25","value":{"kind":"number","nativeSrc":"3134:1:25","nodeType":"YulLiteral","src":"3134:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3125:5:25","nodeType":"YulTypedName","src":"3125:5:25","type":""}]},{"nativeSrc":"3144:32:25","nodeType":"YulAssignment","src":"3144:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3166:9:25","nodeType":"YulIdentifier","src":"3166:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3153:12:25","nodeType":"YulIdentifier","src":"3153:12:25"},"nativeSrc":"3153:23:25","nodeType":"YulFunctionCall","src":"3153:23:25"},"variableNames":[{"name":"value","nativeSrc":"3144:5:25","nodeType":"YulIdentifier","src":"3144:5:25"}]},{"nativeSrc":"3185:15:25","nodeType":"YulAssignment","src":"3185:15:25","value":{"name":"value","nativeSrc":"3195:5:25","nodeType":"YulIdentifier","src":"3195:5:25"},"variableNames":[{"name":"value0","nativeSrc":"3185:6:25","nodeType":"YulIdentifier","src":"3185:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2980:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3016:9:25","nodeType":"YulTypedName","src":"3016:9:25","type":""},{"name":"dataEnd","nativeSrc":"3027:7:25","nodeType":"YulTypedName","src":"3027:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3039:6:25","nodeType":"YulTypedName","src":"3039:6:25","type":""}],"src":"2980:226:25"},{"body":{"nativeSrc":"3281:116:25","nodeType":"YulBlock","src":"3281:116:25","statements":[{"body":{"nativeSrc":"3327:16:25","nodeType":"YulBlock","src":"3327:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3336:1:25","nodeType":"YulLiteral","src":"3336:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3339:1:25","nodeType":"YulLiteral","src":"3339:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3329:6:25","nodeType":"YulIdentifier","src":"3329:6:25"},"nativeSrc":"3329:12:25","nodeType":"YulFunctionCall","src":"3329:12:25"},"nativeSrc":"3329:12:25","nodeType":"YulExpressionStatement","src":"3329:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3302:7:25","nodeType":"YulIdentifier","src":"3302:7:25"},{"name":"headStart","nativeSrc":"3311:9:25","nodeType":"YulIdentifier","src":"3311:9:25"}],"functionName":{"name":"sub","nativeSrc":"3298:3:25","nodeType":"YulIdentifier","src":"3298:3:25"},"nativeSrc":"3298:23:25","nodeType":"YulFunctionCall","src":"3298:23:25"},{"kind":"number","nativeSrc":"3323:2:25","nodeType":"YulLiteral","src":"3323:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3294:3:25","nodeType":"YulIdentifier","src":"3294:3:25"},"nativeSrc":"3294:32:25","nodeType":"YulFunctionCall","src":"3294:32:25"},"nativeSrc":"3291:52:25","nodeType":"YulIf","src":"3291:52:25"},{"nativeSrc":"3352:39:25","nodeType":"YulAssignment","src":"3352:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3381:9:25","nodeType":"YulIdentifier","src":"3381:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3362:18:25","nodeType":"YulIdentifier","src":"3362:18:25"},"nativeSrc":"3362:29:25","nodeType":"YulFunctionCall","src":"3362:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3352:6:25","nodeType":"YulIdentifier","src":"3352:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3211:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3247:9:25","nodeType":"YulTypedName","src":"3247:9:25","type":""},{"name":"dataEnd","nativeSrc":"3258:7:25","nodeType":"YulTypedName","src":"3258:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3270:6:25","nodeType":"YulTypedName","src":"3270:6:25","type":""}],"src":"3211:186:25"},{"body":{"nativeSrc":"3489:259:25","nodeType":"YulBlock","src":"3489:259:25","statements":[{"body":{"nativeSrc":"3535:16:25","nodeType":"YulBlock","src":"3535:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3544:1:25","nodeType":"YulLiteral","src":"3544:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3547:1:25","nodeType":"YulLiteral","src":"3547:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3537:6:25","nodeType":"YulIdentifier","src":"3537:6:25"},"nativeSrc":"3537:12:25","nodeType":"YulFunctionCall","src":"3537:12:25"},"nativeSrc":"3537:12:25","nodeType":"YulExpressionStatement","src":"3537:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3510:7:25","nodeType":"YulIdentifier","src":"3510:7:25"},{"name":"headStart","nativeSrc":"3519:9:25","nodeType":"YulIdentifier","src":"3519:9:25"}],"functionName":{"name":"sub","nativeSrc":"3506:3:25","nodeType":"YulIdentifier","src":"3506:3:25"},"nativeSrc":"3506:23:25","nodeType":"YulFunctionCall","src":"3506:23:25"},{"kind":"number","nativeSrc":"3531:2:25","nodeType":"YulLiteral","src":"3531:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3502:3:25","nodeType":"YulIdentifier","src":"3502:3:25"},"nativeSrc":"3502:32:25","nodeType":"YulFunctionCall","src":"3502:32:25"},"nativeSrc":"3499:52:25","nodeType":"YulIf","src":"3499:52:25"},{"nativeSrc":"3560:14:25","nodeType":"YulVariableDeclaration","src":"3560:14:25","value":{"kind":"number","nativeSrc":"3573:1:25","nodeType":"YulLiteral","src":"3573:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3564:5:25","nodeType":"YulTypedName","src":"3564:5:25","type":""}]},{"nativeSrc":"3583:32:25","nodeType":"YulAssignment","src":"3583:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3605:9:25","nodeType":"YulIdentifier","src":"3605:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3592:12:25","nodeType":"YulIdentifier","src":"3592:12:25"},"nativeSrc":"3592:23:25","nodeType":"YulFunctionCall","src":"3592:23:25"},"variableNames":[{"name":"value","nativeSrc":"3583:5:25","nodeType":"YulIdentifier","src":"3583:5:25"}]},{"nativeSrc":"3624:15:25","nodeType":"YulAssignment","src":"3624:15:25","value":{"name":"value","nativeSrc":"3634:5:25","nodeType":"YulIdentifier","src":"3634:5:25"},"variableNames":[{"name":"value0","nativeSrc":"3624:6:25","nodeType":"YulIdentifier","src":"3624:6:25"}]},{"nativeSrc":"3648:16:25","nodeType":"YulVariableDeclaration","src":"3648:16:25","value":{"kind":"number","nativeSrc":"3663:1:25","nodeType":"YulLiteral","src":"3663:1:25","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"3652:7:25","nodeType":"YulTypedName","src":"3652:7:25","type":""}]},{"nativeSrc":"3673:43:25","nodeType":"YulAssignment","src":"3673:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3701:9:25","nodeType":"YulIdentifier","src":"3701:9:25"},{"kind":"number","nativeSrc":"3712:2:25","nodeType":"YulLiteral","src":"3712:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3697:3:25","nodeType":"YulIdentifier","src":"3697:3:25"},"nativeSrc":"3697:18:25","nodeType":"YulFunctionCall","src":"3697:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"3684:12:25","nodeType":"YulIdentifier","src":"3684:12:25"},"nativeSrc":"3684:32:25","nodeType":"YulFunctionCall","src":"3684:32:25"},"variableNames":[{"name":"value_1","nativeSrc":"3673:7:25","nodeType":"YulIdentifier","src":"3673:7:25"}]},{"nativeSrc":"3725:17:25","nodeType":"YulAssignment","src":"3725:17:25","value":{"name":"value_1","nativeSrc":"3735:7:25","nodeType":"YulIdentifier","src":"3735:7:25"},"variableNames":[{"name":"value1","nativeSrc":"3725:6:25","nodeType":"YulIdentifier","src":"3725:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"3402:346:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3447:9:25","nodeType":"YulTypedName","src":"3447:9:25","type":""},{"name":"dataEnd","nativeSrc":"3458:7:25","nodeType":"YulTypedName","src":"3458:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3470:6:25","nodeType":"YulTypedName","src":"3470:6:25","type":""},{"name":"value1","nativeSrc":"3478:6:25","nodeType":"YulTypedName","src":"3478:6:25","type":""}],"src":"3402:346:25"},{"body":{"nativeSrc":"3854:102:25","nodeType":"YulBlock","src":"3854:102:25","statements":[{"nativeSrc":"3864:26:25","nodeType":"YulAssignment","src":"3864:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3876:9:25","nodeType":"YulIdentifier","src":"3876:9:25"},{"kind":"number","nativeSrc":"3887:2:25","nodeType":"YulLiteral","src":"3887:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3872:3:25","nodeType":"YulIdentifier","src":"3872:3:25"},"nativeSrc":"3872:18:25","nodeType":"YulFunctionCall","src":"3872:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3864:4:25","nodeType":"YulIdentifier","src":"3864:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3906:9:25","nodeType":"YulIdentifier","src":"3906:9:25"},{"arguments":[{"name":"value0","nativeSrc":"3921:6:25","nodeType":"YulIdentifier","src":"3921:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3937:3:25","nodeType":"YulLiteral","src":"3937:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"3942:1:25","nodeType":"YulLiteral","src":"3942:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3933:3:25","nodeType":"YulIdentifier","src":"3933:3:25"},"nativeSrc":"3933:11:25","nodeType":"YulFunctionCall","src":"3933:11:25"},{"kind":"number","nativeSrc":"3946:1:25","nodeType":"YulLiteral","src":"3946:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3929:3:25","nodeType":"YulIdentifier","src":"3929:3:25"},"nativeSrc":"3929:19:25","nodeType":"YulFunctionCall","src":"3929:19:25"}],"functionName":{"name":"and","nativeSrc":"3917:3:25","nodeType":"YulIdentifier","src":"3917:3:25"},"nativeSrc":"3917:32:25","nodeType":"YulFunctionCall","src":"3917:32:25"}],"functionName":{"name":"mstore","nativeSrc":"3899:6:25","nodeType":"YulIdentifier","src":"3899:6:25"},"nativeSrc":"3899:51:25","nodeType":"YulFunctionCall","src":"3899:51:25"},"nativeSrc":"3899:51:25","nodeType":"YulExpressionStatement","src":"3899:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3753:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3823:9:25","nodeType":"YulTypedName","src":"3823:9:25","type":""},{"name":"value0","nativeSrc":"3834:6:25","nodeType":"YulTypedName","src":"3834:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3845:4:25","nodeType":"YulTypedName","src":"3845:4:25","type":""}],"src":"3753:203:25"},{"body":{"nativeSrc":"4112:486:25","nodeType":"YulBlock","src":"4112:486:25","statements":[{"nativeSrc":"4122:32:25","nodeType":"YulVariableDeclaration","src":"4122:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4140:9:25","nodeType":"YulIdentifier","src":"4140:9:25"},{"kind":"number","nativeSrc":"4151:2:25","nodeType":"YulLiteral","src":"4151:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4136:3:25","nodeType":"YulIdentifier","src":"4136:3:25"},"nativeSrc":"4136:18:25","nodeType":"YulFunctionCall","src":"4136:18:25"},"variables":[{"name":"tail_1","nativeSrc":"4126:6:25","nodeType":"YulTypedName","src":"4126:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4170:9:25","nodeType":"YulIdentifier","src":"4170:9:25"},{"kind":"number","nativeSrc":"4181:2:25","nodeType":"YulLiteral","src":"4181:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4163:6:25","nodeType":"YulIdentifier","src":"4163:6:25"},"nativeSrc":"4163:21:25","nodeType":"YulFunctionCall","src":"4163:21:25"},"nativeSrc":"4163:21:25","nodeType":"YulExpressionStatement","src":"4163:21:25"},{"nativeSrc":"4193:17:25","nodeType":"YulVariableDeclaration","src":"4193:17:25","value":{"name":"tail_1","nativeSrc":"4204:6:25","nodeType":"YulIdentifier","src":"4204:6:25"},"variables":[{"name":"pos","nativeSrc":"4197:3:25","nodeType":"YulTypedName","src":"4197:3:25","type":""}]},{"nativeSrc":"4219:27:25","nodeType":"YulVariableDeclaration","src":"4219:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"4239:6:25","nodeType":"YulIdentifier","src":"4239:6:25"}],"functionName":{"name":"mload","nativeSrc":"4233:5:25","nodeType":"YulIdentifier","src":"4233:5:25"},"nativeSrc":"4233:13:25","nodeType":"YulFunctionCall","src":"4233:13:25"},"variables":[{"name":"length","nativeSrc":"4223:6:25","nodeType":"YulTypedName","src":"4223:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"4262:6:25","nodeType":"YulIdentifier","src":"4262:6:25"},{"name":"length","nativeSrc":"4270:6:25","nodeType":"YulIdentifier","src":"4270:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4255:6:25","nodeType":"YulIdentifier","src":"4255:6:25"},"nativeSrc":"4255:22:25","nodeType":"YulFunctionCall","src":"4255:22:25"},"nativeSrc":"4255:22:25","nodeType":"YulExpressionStatement","src":"4255:22:25"},{"nativeSrc":"4286:25:25","nodeType":"YulAssignment","src":"4286:25:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4297:9:25","nodeType":"YulIdentifier","src":"4297:9:25"},{"kind":"number","nativeSrc":"4308:2:25","nodeType":"YulLiteral","src":"4308:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4293:3:25","nodeType":"YulIdentifier","src":"4293:3:25"},"nativeSrc":"4293:18:25","nodeType":"YulFunctionCall","src":"4293:18:25"},"variableNames":[{"name":"pos","nativeSrc":"4286:3:25","nodeType":"YulIdentifier","src":"4286:3:25"}]},{"nativeSrc":"4320:29:25","nodeType":"YulVariableDeclaration","src":"4320:29:25","value":{"arguments":[{"name":"value0","nativeSrc":"4338:6:25","nodeType":"YulIdentifier","src":"4338:6:25"},{"kind":"number","nativeSrc":"4346:2:25","nodeType":"YulLiteral","src":"4346:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4334:3:25","nodeType":"YulIdentifier","src":"4334:3:25"},"nativeSrc":"4334:15:25","nodeType":"YulFunctionCall","src":"4334:15:25"},"variables":[{"name":"srcPtr","nativeSrc":"4324:6:25","nodeType":"YulTypedName","src":"4324:6:25","type":""}]},{"nativeSrc":"4358:10:25","nodeType":"YulVariableDeclaration","src":"4358:10:25","value":{"kind":"number","nativeSrc":"4367:1:25","nodeType":"YulLiteral","src":"4367:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4362:1:25","nodeType":"YulTypedName","src":"4362:1:25","type":""}]},{"body":{"nativeSrc":"4426:146:25","nodeType":"YulBlock","src":"4426:146:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4447:3:25","nodeType":"YulIdentifier","src":"4447:3:25"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"4462:6:25","nodeType":"YulIdentifier","src":"4462:6:25"}],"functionName":{"name":"mload","nativeSrc":"4456:5:25","nodeType":"YulIdentifier","src":"4456:5:25"},"nativeSrc":"4456:13:25","nodeType":"YulFunctionCall","src":"4456:13:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4479:3:25","nodeType":"YulLiteral","src":"4479:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4484:1:25","nodeType":"YulLiteral","src":"4484:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4475:3:25","nodeType":"YulIdentifier","src":"4475:3:25"},"nativeSrc":"4475:11:25","nodeType":"YulFunctionCall","src":"4475:11:25"},{"kind":"number","nativeSrc":"4488:1:25","nodeType":"YulLiteral","src":"4488:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4471:3:25","nodeType":"YulIdentifier","src":"4471:3:25"},"nativeSrc":"4471:19:25","nodeType":"YulFunctionCall","src":"4471:19:25"}],"functionName":{"name":"and","nativeSrc":"4452:3:25","nodeType":"YulIdentifier","src":"4452:3:25"},"nativeSrc":"4452:39:25","nodeType":"YulFunctionCall","src":"4452:39:25"}],"functionName":{"name":"mstore","nativeSrc":"4440:6:25","nodeType":"YulIdentifier","src":"4440:6:25"},"nativeSrc":"4440:52:25","nodeType":"YulFunctionCall","src":"4440:52:25"},"nativeSrc":"4440:52:25","nodeType":"YulExpressionStatement","src":"4440:52:25"},{"nativeSrc":"4505:19:25","nodeType":"YulAssignment","src":"4505:19:25","value":{"arguments":[{"name":"pos","nativeSrc":"4516:3:25","nodeType":"YulIdentifier","src":"4516:3:25"},{"kind":"number","nativeSrc":"4521:2:25","nodeType":"YulLiteral","src":"4521:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4512:3:25","nodeType":"YulIdentifier","src":"4512:3:25"},"nativeSrc":"4512:12:25","nodeType":"YulFunctionCall","src":"4512:12:25"},"variableNames":[{"name":"pos","nativeSrc":"4505:3:25","nodeType":"YulIdentifier","src":"4505:3:25"}]},{"nativeSrc":"4537:25:25","nodeType":"YulAssignment","src":"4537:25:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4551:6:25","nodeType":"YulIdentifier","src":"4551:6:25"},{"kind":"number","nativeSrc":"4559:2:25","nodeType":"YulLiteral","src":"4559:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4547:3:25","nodeType":"YulIdentifier","src":"4547:3:25"},"nativeSrc":"4547:15:25","nodeType":"YulFunctionCall","src":"4547:15:25"},"variableNames":[{"name":"srcPtr","nativeSrc":"4537:6:25","nodeType":"YulIdentifier","src":"4537:6:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4388:1:25","nodeType":"YulIdentifier","src":"4388:1:25"},{"name":"length","nativeSrc":"4391:6:25","nodeType":"YulIdentifier","src":"4391:6:25"}],"functionName":{"name":"lt","nativeSrc":"4385:2:25","nodeType":"YulIdentifier","src":"4385:2:25"},"nativeSrc":"4385:13:25","nodeType":"YulFunctionCall","src":"4385:13:25"},"nativeSrc":"4377:195:25","nodeType":"YulForLoop","post":{"nativeSrc":"4399:18:25","nodeType":"YulBlock","src":"4399:18:25","statements":[{"nativeSrc":"4401:14:25","nodeType":"YulAssignment","src":"4401:14:25","value":{"arguments":[{"name":"i","nativeSrc":"4410:1:25","nodeType":"YulIdentifier","src":"4410:1:25"},{"kind":"number","nativeSrc":"4413:1:25","nodeType":"YulLiteral","src":"4413:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4406:3:25","nodeType":"YulIdentifier","src":"4406:3:25"},"nativeSrc":"4406:9:25","nodeType":"YulFunctionCall","src":"4406:9:25"},"variableNames":[{"name":"i","nativeSrc":"4401:1:25","nodeType":"YulIdentifier","src":"4401:1:25"}]}]},"pre":{"nativeSrc":"4381:3:25","nodeType":"YulBlock","src":"4381:3:25","statements":[]},"src":"4377:195:25"},{"nativeSrc":"4581:11:25","nodeType":"YulAssignment","src":"4581:11:25","value":{"name":"pos","nativeSrc":"4589:3:25","nodeType":"YulIdentifier","src":"4589:3:25"},"variableNames":[{"name":"tail","nativeSrc":"4581:4:25","nodeType":"YulIdentifier","src":"4581:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3961:637:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4081:9:25","nodeType":"YulTypedName","src":"4081:9:25","type":""},{"name":"value0","nativeSrc":"4092:6:25","nodeType":"YulTypedName","src":"4092:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4103:4:25","nodeType":"YulTypedName","src":"4103:4:25","type":""}],"src":"3961:637:25"},{"body":{"nativeSrc":"4690:173:25","nodeType":"YulBlock","src":"4690:173:25","statements":[{"body":{"nativeSrc":"4736:16:25","nodeType":"YulBlock","src":"4736:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4745:1:25","nodeType":"YulLiteral","src":"4745:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4748:1:25","nodeType":"YulLiteral","src":"4748:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4738:6:25","nodeType":"YulIdentifier","src":"4738:6:25"},"nativeSrc":"4738:12:25","nodeType":"YulFunctionCall","src":"4738:12:25"},"nativeSrc":"4738:12:25","nodeType":"YulExpressionStatement","src":"4738:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4711:7:25","nodeType":"YulIdentifier","src":"4711:7:25"},{"name":"headStart","nativeSrc":"4720:9:25","nodeType":"YulIdentifier","src":"4720:9:25"}],"functionName":{"name":"sub","nativeSrc":"4707:3:25","nodeType":"YulIdentifier","src":"4707:3:25"},"nativeSrc":"4707:23:25","nodeType":"YulFunctionCall","src":"4707:23:25"},{"kind":"number","nativeSrc":"4732:2:25","nodeType":"YulLiteral","src":"4732:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4703:3:25","nodeType":"YulIdentifier","src":"4703:3:25"},"nativeSrc":"4703:32:25","nodeType":"YulFunctionCall","src":"4703:32:25"},"nativeSrc":"4700:52:25","nodeType":"YulIf","src":"4700:52:25"},{"nativeSrc":"4761:39:25","nodeType":"YulAssignment","src":"4761:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4790:9:25","nodeType":"YulIdentifier","src":"4790:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4771:18:25","nodeType":"YulIdentifier","src":"4771:18:25"},"nativeSrc":"4771:29:25","nodeType":"YulFunctionCall","src":"4771:29:25"},"variableNames":[{"name":"value0","nativeSrc":"4761:6:25","nodeType":"YulIdentifier","src":"4761:6:25"}]},{"nativeSrc":"4809:48:25","nodeType":"YulAssignment","src":"4809:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4842:9:25","nodeType":"YulIdentifier","src":"4842:9:25"},{"kind":"number","nativeSrc":"4853:2:25","nodeType":"YulLiteral","src":"4853:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4838:3:25","nodeType":"YulIdentifier","src":"4838:3:25"},"nativeSrc":"4838:18:25","nodeType":"YulFunctionCall","src":"4838:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4819:18:25","nodeType":"YulIdentifier","src":"4819:18:25"},"nativeSrc":"4819:38:25","nodeType":"YulFunctionCall","src":"4819:38:25"},"variableNames":[{"name":"value1","nativeSrc":"4809:6:25","nodeType":"YulIdentifier","src":"4809:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4603:260:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4648:9:25","nodeType":"YulTypedName","src":"4648:9:25","type":""},{"name":"dataEnd","nativeSrc":"4659:7:25","nodeType":"YulTypedName","src":"4659:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4671:6:25","nodeType":"YulTypedName","src":"4671:6:25","type":""},{"name":"value1","nativeSrc":"4679:6:25","nodeType":"YulTypedName","src":"4679:6:25","type":""}],"src":"4603:260:25"},{"body":{"nativeSrc":"4923:325:25","nodeType":"YulBlock","src":"4923:325:25","statements":[{"nativeSrc":"4933:22:25","nodeType":"YulAssignment","src":"4933:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"4947:1:25","nodeType":"YulLiteral","src":"4947:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"4950:4:25","nodeType":"YulIdentifier","src":"4950:4:25"}],"functionName":{"name":"shr","nativeSrc":"4943:3:25","nodeType":"YulIdentifier","src":"4943:3:25"},"nativeSrc":"4943:12:25","nodeType":"YulFunctionCall","src":"4943:12:25"},"variableNames":[{"name":"length","nativeSrc":"4933:6:25","nodeType":"YulIdentifier","src":"4933:6:25"}]},{"nativeSrc":"4964:38:25","nodeType":"YulVariableDeclaration","src":"4964:38:25","value":{"arguments":[{"name":"data","nativeSrc":"4994:4:25","nodeType":"YulIdentifier","src":"4994:4:25"},{"kind":"number","nativeSrc":"5000:1:25","nodeType":"YulLiteral","src":"5000:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4990:3:25","nodeType":"YulIdentifier","src":"4990:3:25"},"nativeSrc":"4990:12:25","nodeType":"YulFunctionCall","src":"4990:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4968:18:25","nodeType":"YulTypedName","src":"4968:18:25","type":""}]},{"body":{"nativeSrc":"5041:31:25","nodeType":"YulBlock","src":"5041:31:25","statements":[{"nativeSrc":"5043:27:25","nodeType":"YulAssignment","src":"5043:27:25","value":{"arguments":[{"name":"length","nativeSrc":"5057:6:25","nodeType":"YulIdentifier","src":"5057:6:25"},{"kind":"number","nativeSrc":"5065:4:25","nodeType":"YulLiteral","src":"5065:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5053:3:25","nodeType":"YulIdentifier","src":"5053:3:25"},"nativeSrc":"5053:17:25","nodeType":"YulFunctionCall","src":"5053:17:25"},"variableNames":[{"name":"length","nativeSrc":"5043:6:25","nodeType":"YulIdentifier","src":"5043:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5021:18:25","nodeType":"YulIdentifier","src":"5021:18:25"}],"functionName":{"name":"iszero","nativeSrc":"5014:6:25","nodeType":"YulIdentifier","src":"5014:6:25"},"nativeSrc":"5014:26:25","nodeType":"YulFunctionCall","src":"5014:26:25"},"nativeSrc":"5011:61:25","nodeType":"YulIf","src":"5011:61:25"},{"body":{"nativeSrc":"5131:111:25","nodeType":"YulBlock","src":"5131:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5152:1:25","nodeType":"YulLiteral","src":"5152:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5159:3:25","nodeType":"YulLiteral","src":"5159:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"5164:10:25","nodeType":"YulLiteral","src":"5164:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5155:3:25","nodeType":"YulIdentifier","src":"5155:3:25"},"nativeSrc":"5155:20:25","nodeType":"YulFunctionCall","src":"5155:20:25"}],"functionName":{"name":"mstore","nativeSrc":"5145:6:25","nodeType":"YulIdentifier","src":"5145:6:25"},"nativeSrc":"5145:31:25","nodeType":"YulFunctionCall","src":"5145:31:25"},"nativeSrc":"5145:31:25","nodeType":"YulExpressionStatement","src":"5145:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5196:1:25","nodeType":"YulLiteral","src":"5196:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"5199:4:25","nodeType":"YulLiteral","src":"5199:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5189:6:25","nodeType":"YulIdentifier","src":"5189:6:25"},"nativeSrc":"5189:15:25","nodeType":"YulFunctionCall","src":"5189:15:25"},"nativeSrc":"5189:15:25","nodeType":"YulExpressionStatement","src":"5189:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5224:1:25","nodeType":"YulLiteral","src":"5224:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5227:4:25","nodeType":"YulLiteral","src":"5227:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5217:6:25","nodeType":"YulIdentifier","src":"5217:6:25"},"nativeSrc":"5217:15:25","nodeType":"YulFunctionCall","src":"5217:15:25"},"nativeSrc":"5217:15:25","nodeType":"YulExpressionStatement","src":"5217:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5087:18:25","nodeType":"YulIdentifier","src":"5087:18:25"},{"arguments":[{"name":"length","nativeSrc":"5110:6:25","nodeType":"YulIdentifier","src":"5110:6:25"},{"kind":"number","nativeSrc":"5118:2:25","nodeType":"YulLiteral","src":"5118:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5107:2:25","nodeType":"YulIdentifier","src":"5107:2:25"},"nativeSrc":"5107:14:25","nodeType":"YulFunctionCall","src":"5107:14:25"}],"functionName":{"name":"eq","nativeSrc":"5084:2:25","nodeType":"YulIdentifier","src":"5084:2:25"},"nativeSrc":"5084:38:25","nodeType":"YulFunctionCall","src":"5084:38:25"},"nativeSrc":"5081:161:25","nodeType":"YulIf","src":"5081:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"4868:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4903:4:25","nodeType":"YulTypedName","src":"4903:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4912:6:25","nodeType":"YulTypedName","src":"4912:6:25","type":""}],"src":"4868:380:25"},{"body":{"nativeSrc":"5410:188:25","nodeType":"YulBlock","src":"5410:188:25","statements":[{"nativeSrc":"5420:26:25","nodeType":"YulAssignment","src":"5420:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5432:9:25","nodeType":"YulIdentifier","src":"5432:9:25"},{"kind":"number","nativeSrc":"5443:2:25","nodeType":"YulLiteral","src":"5443:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5428:3:25","nodeType":"YulIdentifier","src":"5428:3:25"},"nativeSrc":"5428:18:25","nodeType":"YulFunctionCall","src":"5428:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5420:4:25","nodeType":"YulIdentifier","src":"5420:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5462:9:25","nodeType":"YulIdentifier","src":"5462:9:25"},{"arguments":[{"name":"value0","nativeSrc":"5477:6:25","nodeType":"YulIdentifier","src":"5477:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5493:3:25","nodeType":"YulLiteral","src":"5493:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"5498:1:25","nodeType":"YulLiteral","src":"5498:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5489:3:25","nodeType":"YulIdentifier","src":"5489:3:25"},"nativeSrc":"5489:11:25","nodeType":"YulFunctionCall","src":"5489:11:25"},{"kind":"number","nativeSrc":"5502:1:25","nodeType":"YulLiteral","src":"5502:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5485:3:25","nodeType":"YulIdentifier","src":"5485:3:25"},"nativeSrc":"5485:19:25","nodeType":"YulFunctionCall","src":"5485:19:25"}],"functionName":{"name":"and","nativeSrc":"5473:3:25","nodeType":"YulIdentifier","src":"5473:3:25"},"nativeSrc":"5473:32:25","nodeType":"YulFunctionCall","src":"5473:32:25"}],"functionName":{"name":"mstore","nativeSrc":"5455:6:25","nodeType":"YulIdentifier","src":"5455:6:25"},"nativeSrc":"5455:51:25","nodeType":"YulFunctionCall","src":"5455:51:25"},"nativeSrc":"5455:51:25","nodeType":"YulExpressionStatement","src":"5455:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5526:9:25","nodeType":"YulIdentifier","src":"5526:9:25"},{"kind":"number","nativeSrc":"5537:2:25","nodeType":"YulLiteral","src":"5537:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5522:3:25","nodeType":"YulIdentifier","src":"5522:3:25"},"nativeSrc":"5522:18:25","nodeType":"YulFunctionCall","src":"5522:18:25"},{"name":"value1","nativeSrc":"5542:6:25","nodeType":"YulIdentifier","src":"5542:6:25"}],"functionName":{"name":"mstore","nativeSrc":"5515:6:25","nodeType":"YulIdentifier","src":"5515:6:25"},"nativeSrc":"5515:34:25","nodeType":"YulFunctionCall","src":"5515:34:25"},"nativeSrc":"5515:34:25","nodeType":"YulExpressionStatement","src":"5515:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5569:9:25","nodeType":"YulIdentifier","src":"5569:9:25"},{"kind":"number","nativeSrc":"5580:2:25","nodeType":"YulLiteral","src":"5580:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5565:3:25","nodeType":"YulIdentifier","src":"5565:3:25"},"nativeSrc":"5565:18:25","nodeType":"YulFunctionCall","src":"5565:18:25"},{"name":"value2","nativeSrc":"5585:6:25","nodeType":"YulIdentifier","src":"5585:6:25"}],"functionName":{"name":"mstore","nativeSrc":"5558:6:25","nodeType":"YulIdentifier","src":"5558:6:25"},"nativeSrc":"5558:34:25","nodeType":"YulFunctionCall","src":"5558:34:25"},"nativeSrc":"5558:34:25","nodeType":"YulExpressionStatement","src":"5558:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"5253:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5363:9:25","nodeType":"YulTypedName","src":"5363:9:25","type":""},{"name":"value2","nativeSrc":"5374:6:25","nodeType":"YulTypedName","src":"5374:6:25","type":""},{"name":"value1","nativeSrc":"5382:6:25","nodeType":"YulTypedName","src":"5382:6:25","type":""},{"name":"value0","nativeSrc":"5390:6:25","nodeType":"YulTypedName","src":"5390:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5401:4:25","nodeType":"YulTypedName","src":"5401:4:25","type":""}],"src":"5253:345:25"},{"body":{"nativeSrc":"5635:95:25","nodeType":"YulBlock","src":"5635:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5652:1:25","nodeType":"YulLiteral","src":"5652:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5659:3:25","nodeType":"YulLiteral","src":"5659:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"5664:10:25","nodeType":"YulLiteral","src":"5664:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5655:3:25","nodeType":"YulIdentifier","src":"5655:3:25"},"nativeSrc":"5655:20:25","nodeType":"YulFunctionCall","src":"5655:20:25"}],"functionName":{"name":"mstore","nativeSrc":"5645:6:25","nodeType":"YulIdentifier","src":"5645:6:25"},"nativeSrc":"5645:31:25","nodeType":"YulFunctionCall","src":"5645:31:25"},"nativeSrc":"5645:31:25","nodeType":"YulExpressionStatement","src":"5645:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5692:1:25","nodeType":"YulLiteral","src":"5692:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"5695:4:25","nodeType":"YulLiteral","src":"5695:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5685:6:25","nodeType":"YulIdentifier","src":"5685:6:25"},"nativeSrc":"5685:15:25","nodeType":"YulFunctionCall","src":"5685:15:25"},"nativeSrc":"5685:15:25","nodeType":"YulExpressionStatement","src":"5685:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5716:1:25","nodeType":"YulLiteral","src":"5716:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5719:4:25","nodeType":"YulLiteral","src":"5719:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5709:6:25","nodeType":"YulIdentifier","src":"5709:6:25"},"nativeSrc":"5709:15:25","nodeType":"YulFunctionCall","src":"5709:15:25"},"nativeSrc":"5709:15:25","nodeType":"YulExpressionStatement","src":"5709:15:25"}]},"name":"panic_error_0x11","nativeSrc":"5603:127:25","nodeType":"YulFunctionDefinition","src":"5603:127:25"},{"body":{"nativeSrc":"5783:77:25","nodeType":"YulBlock","src":"5783:77:25","statements":[{"nativeSrc":"5793:16:25","nodeType":"YulAssignment","src":"5793:16:25","value":{"arguments":[{"name":"x","nativeSrc":"5804:1:25","nodeType":"YulIdentifier","src":"5804:1:25"},{"name":"y","nativeSrc":"5807:1:25","nodeType":"YulIdentifier","src":"5807:1:25"}],"functionName":{"name":"add","nativeSrc":"5800:3:25","nodeType":"YulIdentifier","src":"5800:3:25"},"nativeSrc":"5800:9:25","nodeType":"YulFunctionCall","src":"5800:9:25"},"variableNames":[{"name":"sum","nativeSrc":"5793:3:25","nodeType":"YulIdentifier","src":"5793:3:25"}]},{"body":{"nativeSrc":"5832:22:25","nodeType":"YulBlock","src":"5832:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5834:16:25","nodeType":"YulIdentifier","src":"5834:16:25"},"nativeSrc":"5834:18:25","nodeType":"YulFunctionCall","src":"5834:18:25"},"nativeSrc":"5834:18:25","nodeType":"YulExpressionStatement","src":"5834:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"5824:1:25","nodeType":"YulIdentifier","src":"5824:1:25"},{"name":"sum","nativeSrc":"5827:3:25","nodeType":"YulIdentifier","src":"5827:3:25"}],"functionName":{"name":"gt","nativeSrc":"5821:2:25","nodeType":"YulIdentifier","src":"5821:2:25"},"nativeSrc":"5821:10:25","nodeType":"YulFunctionCall","src":"5821:10:25"},"nativeSrc":"5818:36:25","nodeType":"YulIf","src":"5818:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"5735:125:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5766:1:25","nodeType":"YulTypedName","src":"5766:1:25","type":""},{"name":"y","nativeSrc":"5769:1:25","nodeType":"YulTypedName","src":"5769:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"5775:3:25","nodeType":"YulTypedName","src":"5775:3:25","type":""}],"src":"5735:125:25"},{"body":{"nativeSrc":"5994:145:25","nodeType":"YulBlock","src":"5994:145:25","statements":[{"nativeSrc":"6004:26:25","nodeType":"YulAssignment","src":"6004:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6016:9:25","nodeType":"YulIdentifier","src":"6016:9:25"},{"kind":"number","nativeSrc":"6027:2:25","nodeType":"YulLiteral","src":"6027:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6012:3:25","nodeType":"YulIdentifier","src":"6012:3:25"},"nativeSrc":"6012:18:25","nodeType":"YulFunctionCall","src":"6012:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6004:4:25","nodeType":"YulIdentifier","src":"6004:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6046:9:25","nodeType":"YulIdentifier","src":"6046:9:25"},{"arguments":[{"name":"value0","nativeSrc":"6061:6:25","nodeType":"YulIdentifier","src":"6061:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6077:3:25","nodeType":"YulLiteral","src":"6077:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6082:1:25","nodeType":"YulLiteral","src":"6082:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6073:3:25","nodeType":"YulIdentifier","src":"6073:3:25"},"nativeSrc":"6073:11:25","nodeType":"YulFunctionCall","src":"6073:11:25"},{"kind":"number","nativeSrc":"6086:1:25","nodeType":"YulLiteral","src":"6086:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6069:3:25","nodeType":"YulIdentifier","src":"6069:3:25"},"nativeSrc":"6069:19:25","nodeType":"YulFunctionCall","src":"6069:19:25"}],"functionName":{"name":"and","nativeSrc":"6057:3:25","nodeType":"YulIdentifier","src":"6057:3:25"},"nativeSrc":"6057:32:25","nodeType":"YulFunctionCall","src":"6057:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6039:6:25","nodeType":"YulIdentifier","src":"6039:6:25"},"nativeSrc":"6039:51:25","nodeType":"YulFunctionCall","src":"6039:51:25"},"nativeSrc":"6039:51:25","nodeType":"YulExpressionStatement","src":"6039:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6110:9:25","nodeType":"YulIdentifier","src":"6110:9:25"},{"kind":"number","nativeSrc":"6121:2:25","nodeType":"YulLiteral","src":"6121:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6106:3:25","nodeType":"YulIdentifier","src":"6106:3:25"},"nativeSrc":"6106:18:25","nodeType":"YulFunctionCall","src":"6106:18:25"},{"name":"value1","nativeSrc":"6126:6:25","nodeType":"YulIdentifier","src":"6126:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6099:6:25","nodeType":"YulIdentifier","src":"6099:6:25"},"nativeSrc":"6099:34:25","nodeType":"YulFunctionCall","src":"6099:34:25"},"nativeSrc":"6099:34:25","nodeType":"YulExpressionStatement","src":"6099:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"5865:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5955:9:25","nodeType":"YulTypedName","src":"5955:9:25","type":""},{"name":"value1","nativeSrc":"5966:6:25","nodeType":"YulTypedName","src":"5966:6:25","type":""},{"name":"value0","nativeSrc":"5974:6:25","nodeType":"YulTypedName","src":"5974:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5985:4:25","nodeType":"YulTypedName","src":"5985:4:25","type":""}],"src":"5865:274:25"},{"body":{"nativeSrc":"6176:95:25","nodeType":"YulBlock","src":"6176:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6193:1:25","nodeType":"YulLiteral","src":"6193:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6200:3:25","nodeType":"YulLiteral","src":"6200:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"6205:10:25","nodeType":"YulLiteral","src":"6205:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6196:3:25","nodeType":"YulIdentifier","src":"6196:3:25"},"nativeSrc":"6196:20:25","nodeType":"YulFunctionCall","src":"6196:20:25"}],"functionName":{"name":"mstore","nativeSrc":"6186:6:25","nodeType":"YulIdentifier","src":"6186:6:25"},"nativeSrc":"6186:31:25","nodeType":"YulFunctionCall","src":"6186:31:25"},"nativeSrc":"6186:31:25","nodeType":"YulExpressionStatement","src":"6186:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6233:1:25","nodeType":"YulLiteral","src":"6233:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"6236:4:25","nodeType":"YulLiteral","src":"6236:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6226:6:25","nodeType":"YulIdentifier","src":"6226:6:25"},"nativeSrc":"6226:15:25","nodeType":"YulFunctionCall","src":"6226:15:25"},"nativeSrc":"6226:15:25","nodeType":"YulExpressionStatement","src":"6226:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6257:1:25","nodeType":"YulLiteral","src":"6257:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6260:4:25","nodeType":"YulLiteral","src":"6260:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6250:6:25","nodeType":"YulIdentifier","src":"6250:6:25"},"nativeSrc":"6250:15:25","nodeType":"YulFunctionCall","src":"6250:15:25"},"nativeSrc":"6250:15:25","nodeType":"YulExpressionStatement","src":"6250:15:25"}]},"name":"panic_error_0x32","nativeSrc":"6144:127:25","nodeType":"YulFunctionDefinition","src":"6144:127:25"},{"body":{"nativeSrc":"6325:79:25","nodeType":"YulBlock","src":"6325:79:25","statements":[{"nativeSrc":"6335:17:25","nodeType":"YulAssignment","src":"6335:17:25","value":{"arguments":[{"name":"x","nativeSrc":"6347:1:25","nodeType":"YulIdentifier","src":"6347:1:25"},{"name":"y","nativeSrc":"6350:1:25","nodeType":"YulIdentifier","src":"6350:1:25"}],"functionName":{"name":"sub","nativeSrc":"6343:3:25","nodeType":"YulIdentifier","src":"6343:3:25"},"nativeSrc":"6343:9:25","nodeType":"YulFunctionCall","src":"6343:9:25"},"variableNames":[{"name":"diff","nativeSrc":"6335:4:25","nodeType":"YulIdentifier","src":"6335:4:25"}]},{"body":{"nativeSrc":"6376:22:25","nodeType":"YulBlock","src":"6376:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6378:16:25","nodeType":"YulIdentifier","src":"6378:16:25"},"nativeSrc":"6378:18:25","nodeType":"YulFunctionCall","src":"6378:18:25"},"nativeSrc":"6378:18:25","nodeType":"YulExpressionStatement","src":"6378:18:25"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6367:4:25","nodeType":"YulIdentifier","src":"6367:4:25"},{"name":"x","nativeSrc":"6373:1:25","nodeType":"YulIdentifier","src":"6373:1:25"}],"functionName":{"name":"gt","nativeSrc":"6364:2:25","nodeType":"YulIdentifier","src":"6364:2:25"},"nativeSrc":"6364:11:25","nodeType":"YulFunctionCall","src":"6364:11:25"},"nativeSrc":"6361:37:25","nodeType":"YulIf","src":"6361:37:25"}]},"name":"checked_sub_t_uint256","nativeSrc":"6276:128:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6307:1:25","nodeType":"YulTypedName","src":"6307:1:25","type":""},{"name":"y","nativeSrc":"6310:1:25","nodeType":"YulTypedName","src":"6310:1:25","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6316:4:25","nodeType":"YulTypedName","src":"6316:4:25","type":""}],"src":"6276:128:25"},{"body":{"nativeSrc":"6441:95:25","nodeType":"YulBlock","src":"6441:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6458:1:25","nodeType":"YulLiteral","src":"6458:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6465:3:25","nodeType":"YulLiteral","src":"6465:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"6470:10:25","nodeType":"YulLiteral","src":"6470:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6461:3:25","nodeType":"YulIdentifier","src":"6461:3:25"},"nativeSrc":"6461:20:25","nodeType":"YulFunctionCall","src":"6461:20:25"}],"functionName":{"name":"mstore","nativeSrc":"6451:6:25","nodeType":"YulIdentifier","src":"6451:6:25"},"nativeSrc":"6451:31:25","nodeType":"YulFunctionCall","src":"6451:31:25"},"nativeSrc":"6451:31:25","nodeType":"YulExpressionStatement","src":"6451:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6498:1:25","nodeType":"YulLiteral","src":"6498:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"6501:4:25","nodeType":"YulLiteral","src":"6501:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"6491:6:25","nodeType":"YulIdentifier","src":"6491:6:25"},"nativeSrc":"6491:15:25","nodeType":"YulFunctionCall","src":"6491:15:25"},"nativeSrc":"6491:15:25","nodeType":"YulExpressionStatement","src":"6491:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6522:1:25","nodeType":"YulLiteral","src":"6522:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6525:4:25","nodeType":"YulLiteral","src":"6525:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6515:6:25","nodeType":"YulIdentifier","src":"6515:6:25"},"nativeSrc":"6515:15:25","nodeType":"YulFunctionCall","src":"6515:15:25"},"nativeSrc":"6515:15:25","nodeType":"YulExpressionStatement","src":"6515:15:25"}]},"name":"panic_error_0x31","nativeSrc":"6409:127:25","nodeType":"YulFunctionDefinition","src":"6409:127:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a3246ad31161007c578063a3246ad314610309578063a9059cbb14610329578063ca15c8731461033c578063d53913931461034f578063d547741f14610376578063dd62ed3e1461038957600080fd5b806370a082311461027f57806379cc6790146102a85780639010d07c146102bb57806391d14854146102e657806395d89b41146102f9578063a217fddf1461030157600080fd5b8063282c51f311610115578063282c51f3146101f55780632f2ff15d1461021c578063313ce5671461023157806336568abe1461024657806340c10f191461025957806342966c681461026c57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063095ea7b31461019a57806318160ddd146101ad57806323b872dd146101bf578063248a9ca3146101d2575b600080fd5b61017061016b366004610da6565b6103c2565b60405190151581526020015b60405180910390f35b61018d6103ed565b60405161017c9190610dd0565b6101706101a8366004610e3a565b61047f565b6002545b60405190815260200161017c565b6101706101cd366004610e64565b610497565b6101b16101e0366004610ea1565b60009081526005602052604090206001015490565b6101b17f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61022f61022a366004610eba565b6104bb565b005b60075460405160ff909116815260200161017c565b61022f610254366004610eba565b6104e6565b61022f610267366004610e3a565b61051e565b61022f61027a366004610ea1565b610552565b6101b161028d366004610ee6565b6001600160a01b031660009081526020819052604090205490565b61022f6102b6366004610e3a565b61055f565b6102ce6102c9366004610f01565b610593565b6040516001600160a01b03909116815260200161017c565b6101706102f4366004610eba565b6105b2565b61018d6105dd565b6101b1600081565b61031c610317366004610ea1565b6105ec565b60405161017c9190610f23565b610170610337366004610e3a565b610606565b6101b161034a366004610ea1565b610614565b6101b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61022f610384366004610eba565b61062b565b6101b1610397366004610f6f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216635a05180f60e01b14806103e757506103e782610650565b92915050565b6060600380546103fc90610f99565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f99565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60003361048d818585610685565b5060019392505050565b6000336104a5858285610692565b6104b0858585610710565b506001949350505050565b6000828152600560205260409020600101546104d68161076f565b6104e08383610779565b50505050565b6001600160a01b038116331461050f5760405163334bd91960e11b815260040160405180910390fd5b61051982826107ae565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105488161076f565b61051983836107db565b61055c3382610815565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486105898161076f565b610519838361084b565b60008281526006602052604081206105ab9083610860565b9392505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103fc90610f99565b60008181526006602052604090206060906103e79061086c565b60003361048d818585610710565b60008181526006602052604081206103e790610879565b6000828152600560205260409020600101546106468161076f565b6104e083836107ae565b60006001600160e01b03198216637965db0b60e01b14806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b6105198383836001610883565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156104e0578181101561070157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104e084848484036000610883565b6001600160a01b03831661073a57604051634b637e8f60e11b8152600060048201526024016106f8565b6001600160a01b0382166107645760405163ec442f0560e01b8152600060048201526024016106f8565b610519838383610958565b61055c8133610a82565b6000806107868484610abb565b905080156105ab5760008481526006602052604090206107a69084610b4f565b509392505050565b6000806107bb8484610b64565b905080156105ab5760008481526006602052604090206107a69084610bd1565b6001600160a01b0382166108055760405163ec442f0560e01b8152600060048201526024016106f8565b61081160008383610958565b5050565b6001600160a01b03821661083f57604051634b637e8f60e11b8152600060048201526024016106f8565b61081182600083610958565b610856823383610692565b6108118282610815565b60006105ab8383610be6565b606060006105ab83610c10565b60006103e7825490565b6001600160a01b0384166108ad5760405163e602df0560e01b8152600060048201526024016106f8565b6001600160a01b0383166108d757604051634a1406b160e11b8152600060048201526024016106f8565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104e057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161094a91815260200190565b60405180910390a350505050565b6001600160a01b0383166109835780600260008282546109789190610fe9565b909155506109f59050565b6001600160a01b038316600090815260208190526040902054818110156109d65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106f8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1157600280548290039055610a30565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7591815260200190565b60405180910390a3505050565b610a8c82826105b2565b6108115760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106f8565b6000610ac783836105b2565b610b475760008381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610aff3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103e7565b5060006103e7565b60006105ab836001600160a01b038416610c6c565b6000610b7083836105b2565b15610b475760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103e7565b60006105ab836001600160a01b038416610cb3565b6000826000018281548110610bfd57610bfd610ffc565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c6057602002820191906000526020600020905b815481526020019060010190808311610c4c575b50505050509050919050565b6000818152600183016020526040812054610b47575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e7565b60008181526001830160205260408120548015610d9c576000610cd7600183611012565b8554909150600090610ceb90600190611012565b9050808214610d50576000866000018281548110610d0b57610d0b610ffc565b9060005260206000200154905080876000018481548110610d2e57610d2e610ffc565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6157610d61611025565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103e7565b60009150506103e7565b600060208284031215610db857600080fd5b81356001600160e01b0319811681146105ab57600080fd5b602081526000825180602084015260005b81811015610dfe5760208186018101516040868401015201610de1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e3557600080fd5b919050565b60008060408385031215610e4d57600080fd5b610e5683610e1e565b946020939093013593505050565b600080600060608486031215610e7957600080fd5b610e8284610e1e565b9250610e9060208501610e1e565b929592945050506040919091013590565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b82359150610edd60208401610e1e565b90509250929050565b600060208284031215610ef857600080fd5b6105ab82610e1e565b60008060408385031215610f1457600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015610f645783516001600160a01b0316835260209384019390920191600101610f3d565b509095945050505050565b60008060408385031215610f8257600080fd5b610f8b83610e1e565b9150610edd60208401610e1e565b600181811c90821680610fad57607f821691505b602082108103610fcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103e7576103e7610fd3565b634e487b7160e01b600052603260045260246000fd5b818103818111156103e7576103e7610fd3565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d355b8f192c5d82ea003a2bd0ea99dd16d5c2e7b93b60cf8d1aa85b68840a4d564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x22F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x22F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH2 0x3E7 DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4A5 DUP6 DUP3 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x4B0 DUP6 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4D6 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x7AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x548 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x55C CALLER DUP3 PUSH2 0x815 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x589 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5AB SWAP1 DUP4 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x3E7 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E7 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x646 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x55C DUP2 CALLER PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x786 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xB4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7BB DUP5 DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x0 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 DUP3 PUSH1 0x0 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x811 DUP3 DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 DUP4 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x983 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x9F5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA8C DUP3 DUP3 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAFF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST ISZERO PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBFD JUMPI PUSH2 0xBFD PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC4C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB47 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 PUSH2 0xCD7 PUSH1 0x1 DUP4 PUSH2 0x1012 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xCEB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xD50 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0B PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD61 JUMPI PUSH2 0xD61 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xDE1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE90 PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SSTORE 0xB8 CALL SWAP3 0xC5 0xD8 0x2E LOG0 SUB LOG2 0xBD 0xE 0xA9 SWAP14 0xD1 PUSH14 0x5C2E7B93B60CF8D1AA85B68840A4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"300:2660:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:212:3;;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;729:212:3;;;;;;;;1760:89:6;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1658:25:25;;;1646:2;1631:18;2830:97:6;1512:177:25;4757:244:6;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;443:62:22;;481:24;443:62;;4226:136:0;;;;;;:::i;:::-;;:::i;:::-;;1389:98:22;1471:9;;1389:98;;1471:9;;;;2933:36:25;;2921:2;2906:18;1389:98:22;2791:184:25;5328:245:0;;;;;;:::i;:::-;;:::i;1655:115:22:-;;;;;;:::i;:::-;;:::i;618:87:8:-;;;;;;:::i;:::-;;:::i;2985:116:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:6;3050:7;3076:18;;;;;;;;;;;;2985:116;2037:325:22;;;;;;:::i;:::-;;:::i;1526:142:3:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3917:32:25;;;3899:51;;3887:2;3872:18;1526:142:3;3753:203:25;2854:136:0;;;;;;:::i;:::-;;:::i;1962:93:6:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;2510:136:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3296:178:6:-;;;;;;:::i;:::-;;:::i;1836:131:3:-;;;;;;:::i;:::-;;:::i;375:62:22:-;;413:24;375:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:6;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;729:212:3;814:4;-1:-1:-1;;;;;;837:57:3;;-1:-1:-1;;;837:57:3;;:97;;;898:36;922:11;898:23;:36::i;:::-;830:104;729:212;-1:-1:-1;;729:212:3:o;1760:89:6:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:12;4106:31:6;735:10:12;4122:7:6;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:6;;3979:186;-1:-1:-1;;;3979:186:6:o;4757:244::-;4844:4;735:10:12;4900:37:6;4916:4;735:10:12;4931:5:6;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:6;;4757:244;-1:-1:-1;;;;4757:244:6:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:12;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1655:115:22:-;413:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1746:17:22::1;1752:2;1756:6;1746:5;:17::i;618:87:8:-:0;672:26;735:10:12;692:5:8;672;:26::i;:::-;618:87;:::o;2037:325:22:-;481:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2324:31:22::1;2339:7;2348:6;2324:14;:31::i;1526:142:3:-:0;1607:7;1633:18;;;:12;:18;;;;;:28;;1655:5;1633:21;:28::i;:::-;1626:35;1526:142;-1:-1:-1;;;1526:142:3:o;2854:136:0:-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1962:93:6:-;2009:13;2041:7;2034:14;;;;;:::i;2510:136:3:-;2612:18;;;;:12;:18;;;;;2577:16;;2612:27;;:25;:27::i;3296:178:6:-;3365:4;735:10:12;3419:27:6;735:10:12;3436:2:6;3440:5;3419:9;:27::i;1836:131:3:-;1907:7;1933:18;;;:12;:18;;;;;:27;;:25;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;2565:202::-:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:16;;;2724:36:0;763:146:16;8707:128:6;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:6;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:6;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:6;;-1:-1:-1;;;;;5473:32:25;;10668:60:6;;;5455:51:25;5522:18;;;5515:34;;;5565:18;;;5558:34;;;5428:18;;10668:60:6;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:6;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:6;;5525:1;5498:30;;;3899:51:25;3872:18;;5498:30:6;3753:203:25;5453:86:6;-1:-1:-1;;;;;5552:16:6;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:6;;5620:1;5591:32;;;3899:51:25;3872:18;;5591:32:6;3753:203:25;5548:86:6;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3199:103:0:-;3265:30;3276:4;735:10:12;3265::0;:30::i;2748:257:3:-;2834:4;2850:12;2865:31;2882:4;2888:7;2865:16;:31::i;:::-;2850:46;;2910:7;2906:69;;;2933:18;;;;:12;:18;;;;;:31;;2956:7;2933:22;:31::i;:::-;;2991:7;2748:257;-1:-1:-1;;;2748:257:3:o;3108:262::-;3195:4;3211:12;3226:32;3244:4;3250:7;3226:17;:32::i;:::-;3211:47;;3272:7;3268:72;;;3295:18;;;;:12;:18;;;;;:34;;3321:7;3295:25;:34::i;7439:208:6:-;-1:-1:-1;;;;;7509:21:6;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:6;;7582:1;7553:32;;;3899:51:25;3872:18;;7553:32:6;3753:203:25;7505:91:6;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;-1:-1:-1;;;;;8035:21:6;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:6;;8106:1;8079:30;;;3899:51:25;3872:18;;8079:30:6;3753:203:25;8031:89:6;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;1021:158:8:-;1096:45;1112:7;735:10:12;1135:5:8;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;10987:156:20:-;11061:7;11111:22;11115:3;11127:5;11111:3;:22::i;11683:273::-;11746:16;11774:22;11799:19;11807:3;11799:7;:19::i;10530:115::-;10593:7;10619:19;10627:3;5202:18;;5120:107;9682:432:6;-1:-1:-1;;;;;9794:19:6;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:6;;9865:1;9836:32;;;3899:51:25;3872:18;;9836:32:6;3753:203:25;9790:89:6;-1:-1:-1;;;;;9892:21:6;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:6;;9964:1;9936:31;;;3899:51:25;3872:18;;9936:31:6;3753:203:25;9888:90:6;-1:-1:-1;;;;;9987:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:6;10075:5;-1:-1:-1;;;;;10066:31:6;;10091:5;10066:31;;;;1658:25:25;;1646:2;1631:18;;1512:177;10066:31:6;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:6;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:6;;-1:-1:-1;6074:540:6;;-1:-1:-1;;;;;6288:15:6;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:6;;-1:-1:-1;;;;;5473:32:25;;6367:50:6;;;5455:51:25;5522:18;;;5515:34;;;5565:18;;;5558:34;;;5428:18;;6367:50:6;5253:345:25;6317:115:6;-1:-1:-1;;;;;6552:15:6;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:6;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:6;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:6;7073:4;-1:-1:-1;;;;;7064:25:6;;7083:5;7064:25;;;;1658::25;;1646:2;1631:18;;1512:177;7064:25:6;;;;;;;;5989:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;6057:32:25;;3565:47:0;;;6039:51:25;6106:18;;;6099:34;;;6012:18;;3565:47:0;5865:274:25;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;9332:150:20;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:20;;9425:4;:50::i;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:12;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;9650:156:20;9723:4;9746:53;9754:3;-1:-1:-1;;;;;9774:23:20;;9746:7;:53::i;5569:118::-;5636:7;5662:3;:11;;5674:5;5662:18;;;;;;;;:::i;:::-;;;;;;;;;5655:25;;5569:118;;;;:::o;6227:109::-;6283:16;6318:3;:11;;6311:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6227:109;;;:::o;2336:406::-;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;2910:1368;2976:4;3105:21;;;:14;;;:21;;;;;;3141:13;;3137:1135;;3508:18;3529:12;3540:1;3529:8;:12;:::i;:::-;3575:18;;3508:33;;-1:-1:-1;3555:17:20;;3575:22;;3596:1;;3575:22;:::i;:::-;3555:42;;3630:9;3616:10;:23;3612:378;;3659:17;3679:3;:11;;3691:9;3679:22;;;;;;;;:::i;:::-;;;;;;;;;3659:42;;3826:9;3800:3;:11;;3812:10;3800:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;3939:25;;;:14;;;:25;;;;;:36;;;3612:378;4068:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4171:3;:14;;:21;4186:5;4171:21;;;;;;;;;;;4164:28;;;4214:4;4207:11;;;;;;;3137:1135;4256:5;4249:12;;;;;14:286:25;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;497:527;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1029:173::-;1097:20;;-1:-1:-1;;;;;1146:31:25;;1136:42;;1126:70;;1192:1;1189;1182:12;1126:70;1029:173;;;:::o;1207:300::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1473:2;1458:18;;;;1445:32;;-1:-1:-1;;;1207:300:25:o;1694:374::-;1771:6;1779;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1879:29;1898:9;1879:29;:::i;:::-;1869:39;;1927:38;1961:2;1950:9;1946:18;1927:38;:::i;:::-;1694:374;;1917:48;;-1:-1:-1;;;2034:2:25;2019:18;;;;2006:32;;1694:374::o;2073:226::-;2132:6;2185:2;2173:9;2164:7;2160:23;2156:32;2153:52;;;2201:1;2198;2191:12;2153:52;-1:-1:-1;2246:23:25;;2073:226;-1:-1:-1;2073:226:25:o;2486:300::-;2554:6;2562;2615:2;2603:9;2594:7;2590:23;2586:32;2583:52;;;2631:1;2628;2621:12;2583:52;2676:23;;;-1:-1:-1;2742:38:25;2776:2;2761:18;;2742:38;:::i;:::-;2732:48;;2486:300;;;;;:::o;3211:186::-;3270:6;3323:2;3311:9;3302:7;3298:23;3294:32;3291:52;;;3339:1;3336;3329:12;3291:52;3362:29;3381:9;3362:29;:::i;3402:346::-;3470:6;3478;3531:2;3519:9;3510:7;3506:23;3502:32;3499:52;;;3547:1;3544;3537:12;3499:52;-1:-1:-1;;3592:23:25;;;3712:2;3697:18;;;3684:32;;-1:-1:-1;3402:346:25:o;3961:637::-;4151:2;4163:21;;;4233:13;;4136:18;;;4255:22;;;4103:4;;4334:15;;;4308:2;4293:18;;;4103:4;4377:195;4391:6;4388:1;4385:13;4377:195;;;4456:13;;-1:-1:-1;;;;;4452:39:25;4440:52;;4521:2;4547:15;;;;4512:12;;;;4488:1;4406:9;4377:195;;;-1:-1:-1;4589:3:25;;3961:637;-1:-1:-1;;;;;3961:637:25:o;4603:260::-;4671:6;4679;4732:2;4720:9;4711:7;4707:23;4703:32;4700:52;;;4748:1;4745;4738:12;4700:52;4771:29;4790:9;4771:29;:::i;:::-;4761:39;;4819:38;4853:2;4842:9;4838:18;4819:38;:::i;4868:380::-;4947:1;4943:12;;;;4990;;;5011:61;;5065:4;5057:6;5053:17;5043:27;;5011:61;5118:2;5110:6;5107:14;5087:18;5084:38;5081:161;;5164:10;5159:3;5155:20;5152:1;5145:31;5199:4;5196:1;5189:15;5227:4;5224:1;5217:15;5081:161;;4868:380;;;:::o;5603:127::-;5664:10;5659:3;5655:20;5652:1;5645:31;5695:4;5692:1;5685:15;5719:4;5716:1;5709:15;5735:125;5800:9;;;5821:10;;;5818:36;;;5834:18;;:::i;6144:127::-;6205:10;6200:3;6196:20;6193:1;6186:31;6236:4;6233:1;6226:15;6260:4;6257:1;6250:15;6276:128;6343:9;;;6364:11;;;6361:37;;;6378:18;;:::i;6409:127::-;6470:10;6465:3;6461:20;6458:1;6451:31;6501:4;6498:1;6491:15;6525:4;6522:1;6515:15"},"methodIdentifiers":{"BURNER_ROLE()":"282c51f3","DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minterAndBurner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. See {ERC20-_burn}. Requirements: - the caller must have the `BURNER_ROLE`. - `account` must have approved `amount` to the caller.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SynthERC20.sol\":\"SynthERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb54d1b001fab4e6ed9fa6d70928ed13356913b0a63dcc56ac5d95c83de66136d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa06c427539f9298e0a8c3be712f876d6907eaeb03f2d8968d70b1cc798aecf\",\"dweb:/ipfs/QmdefyZfpkqWbBSUMtL8wXwoNJYeyAoKDMjTtxXRYbgj1f\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/SynthERC20.sol\":{\"keccak256\":\"0x4e2a0438891bf54b75fa6c4fd7857b6049086476f26cf35e6d141c4947bcf4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15eca5afb3c8802f961804584a3f174fbfed44320c9c4a5e8a58bdeb96c539c\",\"dweb:/ipfs/QmQurwf5qgFgfxgak1fN6S5XcDaz8QDrMBAz8BMxd7dcyK\"]}},\"version\":1}"}},"contracts/SynthFactory.sol":{"SynthFactory":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"synthContract","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"uint8","name":"decimals","type":"uint8"},{"indexed":true,"internalType":"address","name":"vaultAddress","type":"address"},{"indexed":false,"internalType":"address","name":"adminForSynth","type":"address"}],"name":"SynthCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allSynths","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"}],"name":"createSynth","outputs":[{"internalType":"address","name":"synthContractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllSynthsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getSynthAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"symbol","type":"string"}],"name":"getSynthBySymbol","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"synthBySymbol","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract Vault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_7115":{"entryPoint":null,"id":7115,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":228,"id":525,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":308,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":336,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b4058f2b30d7b219dbdc967b7bc89212f9c9e2b2fd71bb37c53b63141f281d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1110:25","nodeType":"YulBlock","src":"0:1110:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"74:117:25","nodeType":"YulBlock","src":"74:117:25","statements":[{"nativeSrc":"84:22:25","nodeType":"YulAssignment","src":"84:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:25","nodeType":"YulIdentifier","src":"99:6:25"}],"functionName":{"name":"mload","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"},"nativeSrc":"93:13:25","nodeType":"YulFunctionCall","src":"93:13:25"},"variableNames":[{"name":"value","nativeSrc":"84:5:25","nodeType":"YulIdentifier","src":"84:5:25"}]},{"body":{"nativeSrc":"169:16:25","nodeType":"YulBlock","src":"169:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:25","nodeType":"YulLiteral","src":"178:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:25","nodeType":"YulLiteral","src":"181:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:25","nodeType":"YulIdentifier","src":"171:6:25"},"nativeSrc":"171:12:25","nodeType":"YulFunctionCall","src":"171:12:25"},"nativeSrc":"171:12:25","nodeType":"YulExpressionStatement","src":"171:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:25","nodeType":"YulIdentifier","src":"128:5:25"},{"arguments":[{"name":"value","nativeSrc":"139:5:25","nodeType":"YulIdentifier","src":"139:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:25","nodeType":"YulLiteral","src":"154:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:25","nodeType":"YulLiteral","src":"159:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:25","nodeType":"YulIdentifier","src":"150:3:25"},"nativeSrc":"150:11:25","nodeType":"YulFunctionCall","src":"150:11:25"},{"kind":"number","nativeSrc":"163:1:25","nodeType":"YulLiteral","src":"163:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:25","nodeType":"YulIdentifier","src":"146:3:25"},"nativeSrc":"146:19:25","nodeType":"YulFunctionCall","src":"146:19:25"}],"functionName":{"name":"and","nativeSrc":"135:3:25","nodeType":"YulIdentifier","src":"135:3:25"},"nativeSrc":"135:31:25","nodeType":"YulFunctionCall","src":"135:31:25"}],"functionName":{"name":"eq","nativeSrc":"125:2:25","nodeType":"YulIdentifier","src":"125:2:25"},"nativeSrc":"125:42:25","nodeType":"YulFunctionCall","src":"125:42:25"}],"functionName":{"name":"iszero","nativeSrc":"118:6:25","nodeType":"YulIdentifier","src":"118:6:25"},"nativeSrc":"118:50:25","nodeType":"YulFunctionCall","src":"118:50:25"},"nativeSrc":"115:70:25","nodeType":"YulIf","src":"115:70:25"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:25","nodeType":"YulTypedName","src":"53:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:25","nodeType":"YulTypedName","src":"64:5:25","type":""}],"src":"14:177:25"},{"body":{"nativeSrc":"294:195:25","nodeType":"YulBlock","src":"294:195:25","statements":[{"body":{"nativeSrc":"340:16:25","nodeType":"YulBlock","src":"340:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:25","nodeType":"YulLiteral","src":"349:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:25","nodeType":"YulLiteral","src":"352:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:25","nodeType":"YulIdentifier","src":"342:6:25"},"nativeSrc":"342:12:25","nodeType":"YulFunctionCall","src":"342:12:25"},"nativeSrc":"342:12:25","nodeType":"YulExpressionStatement","src":"342:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:25","nodeType":"YulIdentifier","src":"315:7:25"},{"name":"headStart","nativeSrc":"324:9:25","nodeType":"YulIdentifier","src":"324:9:25"}],"functionName":{"name":"sub","nativeSrc":"311:3:25","nodeType":"YulIdentifier","src":"311:3:25"},"nativeSrc":"311:23:25","nodeType":"YulFunctionCall","src":"311:23:25"},{"kind":"number","nativeSrc":"336:2:25","nodeType":"YulLiteral","src":"336:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:25","nodeType":"YulIdentifier","src":"307:3:25"},"nativeSrc":"307:32:25","nodeType":"YulFunctionCall","src":"307:32:25"},"nativeSrc":"304:52:25","nodeType":"YulIf","src":"304:52:25"},{"nativeSrc":"365:50:25","nodeType":"YulAssignment","src":"365:50:25","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:25","nodeType":"YulIdentifier","src":"405:9:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:25","nodeType":"YulIdentifier","src":"375:29:25"},"nativeSrc":"375:40:25","nodeType":"YulFunctionCall","src":"375:40:25"},"variableNames":[{"name":"value0","nativeSrc":"365:6:25","nodeType":"YulIdentifier","src":"365:6:25"}]},{"nativeSrc":"424:59:25","nodeType":"YulAssignment","src":"424:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:25","nodeType":"YulIdentifier","src":"468:9:25"},{"kind":"number","nativeSrc":"479:2:25","nodeType":"YulLiteral","src":"479:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:25","nodeType":"YulIdentifier","src":"464:3:25"},"nativeSrc":"464:18:25","nodeType":"YulFunctionCall","src":"464:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:25","nodeType":"YulIdentifier","src":"434:29:25"},"nativeSrc":"434:49:25","nodeType":"YulFunctionCall","src":"434:49:25"},"variableNames":[{"name":"value1","nativeSrc":"424:6:25","nodeType":"YulIdentifier","src":"424:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:25","nodeType":"YulTypedName","src":"252:9:25","type":""},{"name":"dataEnd","nativeSrc":"263:7:25","nodeType":"YulTypedName","src":"263:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:25","nodeType":"YulTypedName","src":"275:6:25","type":""},{"name":"value1","nativeSrc":"283:6:25","nodeType":"YulTypedName","src":"283:6:25","type":""}],"src":"196:293:25"},{"body":{"nativeSrc":"595:102:25","nodeType":"YulBlock","src":"595:102:25","statements":[{"nativeSrc":"605:26:25","nodeType":"YulAssignment","src":"605:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:25","nodeType":"YulIdentifier","src":"617:9:25"},{"kind":"number","nativeSrc":"628:2:25","nodeType":"YulLiteral","src":"628:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:25","nodeType":"YulIdentifier","src":"613:3:25"},"nativeSrc":"613:18:25","nodeType":"YulFunctionCall","src":"613:18:25"},"variableNames":[{"name":"tail","nativeSrc":"605:4:25","nodeType":"YulIdentifier","src":"605:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:25","nodeType":"YulIdentifier","src":"647:9:25"},{"arguments":[{"name":"value0","nativeSrc":"662:6:25","nodeType":"YulIdentifier","src":"662:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"678:3:25","nodeType":"YulLiteral","src":"678:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"683:1:25","nodeType":"YulLiteral","src":"683:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"674:3:25","nodeType":"YulIdentifier","src":"674:3:25"},"nativeSrc":"674:11:25","nodeType":"YulFunctionCall","src":"674:11:25"},{"kind":"number","nativeSrc":"687:1:25","nodeType":"YulLiteral","src":"687:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"670:3:25","nodeType":"YulIdentifier","src":"670:3:25"},"nativeSrc":"670:19:25","nodeType":"YulFunctionCall","src":"670:19:25"}],"functionName":{"name":"and","nativeSrc":"658:3:25","nodeType":"YulIdentifier","src":"658:3:25"},"nativeSrc":"658:32:25","nodeType":"YulFunctionCall","src":"658:32:25"}],"functionName":{"name":"mstore","nativeSrc":"640:6:25","nodeType":"YulIdentifier","src":"640:6:25"},"nativeSrc":"640:51:25","nodeType":"YulFunctionCall","src":"640:51:25"},"nativeSrc":"640:51:25","nodeType":"YulExpressionStatement","src":"640:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"494:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:25","nodeType":"YulTypedName","src":"564:9:25","type":""},{"name":"value0","nativeSrc":"575:6:25","nodeType":"YulTypedName","src":"575:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:25","nodeType":"YulTypedName","src":"586:4:25","type":""}],"src":"494:203:25"},{"body":{"nativeSrc":"876:232:25","nodeType":"YulBlock","src":"876:232:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"893:9:25","nodeType":"YulIdentifier","src":"893:9:25"},{"kind":"number","nativeSrc":"904:2:25","nodeType":"YulLiteral","src":"904:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"886:6:25","nodeType":"YulIdentifier","src":"886:6:25"},"nativeSrc":"886:21:25","nodeType":"YulFunctionCall","src":"886:21:25"},"nativeSrc":"886:21:25","nodeType":"YulExpressionStatement","src":"886:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"927:9:25","nodeType":"YulIdentifier","src":"927:9:25"},{"kind":"number","nativeSrc":"938:2:25","nodeType":"YulLiteral","src":"938:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"923:3:25","nodeType":"YulIdentifier","src":"923:3:25"},"nativeSrc":"923:18:25","nodeType":"YulFunctionCall","src":"923:18:25"},{"kind":"number","nativeSrc":"943:2:25","nodeType":"YulLiteral","src":"943:2:25","type":"","value":"42"}],"functionName":{"name":"mstore","nativeSrc":"916:6:25","nodeType":"YulIdentifier","src":"916:6:25"},"nativeSrc":"916:30:25","nodeType":"YulFunctionCall","src":"916:30:25"},"nativeSrc":"916:30:25","nodeType":"YulExpressionStatement","src":"916:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"966:9:25","nodeType":"YulIdentifier","src":"966:9:25"},{"kind":"number","nativeSrc":"977:2:25","nodeType":"YulLiteral","src":"977:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"962:3:25","nodeType":"YulIdentifier","src":"962:3:25"},"nativeSrc":"962:18:25","nodeType":"YulFunctionCall","src":"962:18:25"},{"hexValue":"53796e7468466163746f72793a205661756c7420616464726573732063616e6e","kind":"string","nativeSrc":"982:34:25","nodeType":"YulLiteral","src":"982:34:25","type":"","value":"SynthFactory: Vault address cann"}],"functionName":{"name":"mstore","nativeSrc":"955:6:25","nodeType":"YulIdentifier","src":"955:6:25"},"nativeSrc":"955:62:25","nodeType":"YulFunctionCall","src":"955:62:25"},"nativeSrc":"955:62:25","nodeType":"YulExpressionStatement","src":"955:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1037:9:25","nodeType":"YulIdentifier","src":"1037:9:25"},{"kind":"number","nativeSrc":"1048:2:25","nodeType":"YulLiteral","src":"1048:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1033:3:25","nodeType":"YulIdentifier","src":"1033:3:25"},"nativeSrc":"1033:18:25","nodeType":"YulFunctionCall","src":"1033:18:25"},{"hexValue":"6f74206265207a65726f","kind":"string","nativeSrc":"1053:12:25","nodeType":"YulLiteral","src":"1053:12:25","type":"","value":"ot be zero"}],"functionName":{"name":"mstore","nativeSrc":"1026:6:25","nodeType":"YulIdentifier","src":"1026:6:25"},"nativeSrc":"1026:40:25","nodeType":"YulFunctionCall","src":"1026:40:25"},"nativeSrc":"1026:40:25","nodeType":"YulExpressionStatement","src":"1026:40:25"},{"nativeSrc":"1075:27:25","nodeType":"YulAssignment","src":"1075:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1087:9:25","nodeType":"YulIdentifier","src":"1087:9:25"},{"kind":"number","nativeSrc":"1098:3:25","nodeType":"YulLiteral","src":"1098:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1083:3:25","nodeType":"YulIdentifier","src":"1083:3:25"},"nativeSrc":"1083:19:25","nodeType":"YulFunctionCall","src":"1083:19:25"},"variableNames":[{"name":"tail","nativeSrc":"1075:4:25","nodeType":"YulIdentifier","src":"1075:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b4058f2b30d7b219dbdc967b7bc89212f9c9e2b2fd71bb37c53b63141f281d0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"702:406:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"853:9:25","nodeType":"YulTypedName","src":"853:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"867:4:25","nodeType":"YulTypedName","src":"867:4:25","type":""}],"src":"702:406:25"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3b4058f2b30d7b219dbdc967b7bc89212f9c9e2b2fd71bb37c53b63141f281d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SynthFactory: Vault address cann\")\n        mstore(add(headStart, 96), \"ot be zero\")\n        tail := add(headStart, 128)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161224b38038061224b83398101604081905261002f91610150565b816001600160a01b03811661005f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610068816100e4565b506001600160a01b0381166100d25760405162461bcd60e51b815260206004820152602a60248201527f53796e7468466163746f72793a205661756c7420616464726573732063616e6e6044820152696f74206265207a65726f60b01b6064820152608401610056565b6001600160a01b031660805250610183565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461014b57600080fd5b919050565b6000806040838503121561016357600080fd5b61016c83610134565b915061017a60208401610134565b90509250929050565b6080516120986101b360003960008181610184015281816103890152818161047301526104d301526120986000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610137578063d9a07bc914610148578063dddde17a1461015b578063f2fde38b1461016c578063fbfa77cf1461017f57600080fd5b806314cd6c6d146100a35780632584b3aa146100f4578063715018a614610107578063734d7a0e146101115780638d015d2214610124575b600080fd5b6100d76100b136600461072e565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d7610102366004610830565b6101a6565b61010f610551565b005b6100d761011f3660046108bf565b610565565b6100d76101323660046108bf565b6105f1565b6000546001600160a01b03166100d7565b6100d76101563660046108d8565b61061b565b6002546040519081526020016100eb565b61010f61017a36600461091a565b610650565b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b60006101b061068e565b60006001600160a01b0316600185856040516101cd92919061094a565b908152604051908190036020019020546001600160a01b0316146102445760405162461bcd60e51b815260206004820152602360248201527f53796e7468466163746f72793a2053796d626f6c20616c72656164792065786960448201526273747360e81b60648201526084015b60405180910390fd5b8461029c5760405162461bcd60e51b815260206004820152602260248201527f53796e7468466163746f72793a204e616d652063616e6e6f7420626520656d70604482015261747960f01b606482015260840161023b565b826102f55760405162461bcd60e51b8152602060048201526024808201527f53796e7468466163746f72793a2053796d626f6c2063616e6e6f7420626520656044820152636d70747960e01b606482015260840161023b565b60008260ff1611801561030c575060128260ff1611155b6103705760405162461bcd60e51b815260206004820152602f60248201527f53796e7468466163746f72793a20446563696d616c73206d757374206265206260448201526e0cae8eecacadc406240c2dcc840627608b1b606482015260840161023b565b600080546001600160a01b0316905060008787878787867f00000000000000000000000000000000000000000000000000000000000000006040516103b49061070b565b6103c49796959493929190610983565b604051809103906000f0801580156103e0573d6000803e3d6000fd5b50905080925082600187876040516103f992919061094a565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031991821617909155600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180548785169216821790556356729cc560e11b825260048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ace5398a90602401600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f4048353daeac164bd3c491159fc34428025f0bd6dec64fb19ed1faf812a0d9bb8a8a8a8a8a8960405161053e969594939291906109d7565b60405180910390a3505095945050505050565b61055961068e565b61056360006106bb565b565b60025460009082106105c35760405162461bcd60e51b815260206004820152602160248201527f53796e7468466163746f72793a20496e646578206f7574206f6620626f756e646044820152607360f81b606482015260840161023b565b600282815481106105d6576105d6610a25565b6000918252602090912001546001600160a01b031692915050565b6002818154811061060157600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001838360405161062f92919061094a565b908152604051908190036020019020546001600160a01b0316905092915050565b61065861068e565b6001600160a01b03811661068257604051631e4fbdf760e01b81526000600482015260240161023b565b61068b816106bb565b50565b6000546001600160a01b031633146105635760405163118cdaa760e01b815233600482015260240161023b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61162780610a3c83390190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561074057600080fd5b813567ffffffffffffffff81111561075757600080fd5b8201601f8101841361076857600080fd5b803567ffffffffffffffff81111561078257610782610718565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107b1576107b1610718565b6040528181528282016020018610156107c957600080fd5b81602084016020830137600091810160200191909152949350505050565b60008083601f8401126107f957600080fd5b50813567ffffffffffffffff81111561081157600080fd5b60208301915083602082850101111561082957600080fd5b9250929050565b60008060008060006060868803121561084857600080fd5b853567ffffffffffffffff81111561085f57600080fd5b61086b888289016107e7565b909650945050602086013567ffffffffffffffff81111561088b57600080fd5b610897888289016107e7565b909450925050604086013560ff811681146108b157600080fd5b809150509295509295909350565b6000602082840312156108d157600080fd5b5035919050565b600080602083850312156108eb57600080fd5b823567ffffffffffffffff81111561090257600080fd5b61090e858286016107e7565b90969095509350505050565b60006020828403121561092c57600080fd5b81356001600160a01b038116811461094357600080fd5b9392505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60a08152600061099760a08301898b61095a565b82810360208401526109aa81888a61095a565b60ff96909616604084015250506001600160a01b0392831660608201529116608090910152949350505050565b6080815260006109eb60808301888a61095a565b82810360208401526109fe81878961095a565b60ff95909516604084015250506001600160a01b0391909116606090910152949350505050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b5060405161162738038061162783398101604081905261002f916103bd565b8484600361003d83826104e9565b50600461004a82826104e9565b5050506001600160a01b0382166100c15760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a20496e697469616c2061646d696e2063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084015b60405180910390fd5b6001600160a01b0381166101305760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a204d696e7465722f4275726e65722063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084016100b8565b6007805460ff191660ff851617905561014a6000836101ab565b506101757f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826101ab565b506101a07f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826101ab565b5050505050506105a7565b6000806101b884846101e3565b905080156101da5760008481526006602052604090206101d89084610291565b505b90505b92915050565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166102895760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556102413390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101dd565b5060006101dd565b60006101da836001600160a01b0384166000818152600183016020526040812054610289575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101dd565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261030f57600080fd5b81516001600160401b03811115610328576103286102e8565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610356576103566102e8565b60405281815283820160200185101561036e57600080fd5b60005b8281101561038d57602081860181015183830182015201610371565b506000918101602001919091529392505050565b80516001600160a01b03811681146103b857600080fd5b919050565b600080600080600060a086880312156103d557600080fd5b85516001600160401b038111156103eb57600080fd5b6103f7888289016102fe565b602088015190965090506001600160401b0381111561041557600080fd5b610421888289016102fe565b945050604086015160ff8116811461043857600080fd5b9250610446606087016103a1565b9150610454608087016103a1565b90509295509295909350565b600181811c9082168061047457607f821691505b60208210810361049457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104e457806000526020600020601f840160051c810160208510156104c15750805b601f840160051c820191505b818110156104e157600081556001016104cd565b50505b505050565b81516001600160401b03811115610502576105026102e8565b610516816105108454610460565b8461049a565b6020601f82116001811461054a57600083156105325750848201515b600019600385901b1c1916600184901b1784556104e1565b600084815260208120601f198516915b8281101561057a578785015182556020948501946001909201910161055a565b50848210156105985786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611071806105b66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a3246ad31161007c578063a3246ad314610309578063a9059cbb14610329578063ca15c8731461033c578063d53913931461034f578063d547741f14610376578063dd62ed3e1461038957600080fd5b806370a082311461027f57806379cc6790146102a85780639010d07c146102bb57806391d14854146102e657806395d89b41146102f9578063a217fddf1461030157600080fd5b8063282c51f311610115578063282c51f3146101f55780632f2ff15d1461021c578063313ce5671461023157806336568abe1461024657806340c10f191461025957806342966c681461026c57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063095ea7b31461019a57806318160ddd146101ad57806323b872dd146101bf578063248a9ca3146101d2575b600080fd5b61017061016b366004610da6565b6103c2565b60405190151581526020015b60405180910390f35b61018d6103ed565b60405161017c9190610dd0565b6101706101a8366004610e3a565b61047f565b6002545b60405190815260200161017c565b6101706101cd366004610e64565b610497565b6101b16101e0366004610ea1565b60009081526005602052604090206001015490565b6101b17f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61022f61022a366004610eba565b6104bb565b005b60075460405160ff909116815260200161017c565b61022f610254366004610eba565b6104e6565b61022f610267366004610e3a565b61051e565b61022f61027a366004610ea1565b610552565b6101b161028d366004610ee6565b6001600160a01b031660009081526020819052604090205490565b61022f6102b6366004610e3a565b61055f565b6102ce6102c9366004610f01565b610593565b6040516001600160a01b03909116815260200161017c565b6101706102f4366004610eba565b6105b2565b61018d6105dd565b6101b1600081565b61031c610317366004610ea1565b6105ec565b60405161017c9190610f23565b610170610337366004610e3a565b610606565b6101b161034a366004610ea1565b610614565b6101b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61022f610384366004610eba565b61062b565b6101b1610397366004610f6f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216635a05180f60e01b14806103e757506103e782610650565b92915050565b6060600380546103fc90610f99565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f99565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60003361048d818585610685565b5060019392505050565b6000336104a5858285610692565b6104b0858585610710565b506001949350505050565b6000828152600560205260409020600101546104d68161076f565b6104e08383610779565b50505050565b6001600160a01b038116331461050f5760405163334bd91960e11b815260040160405180910390fd5b61051982826107ae565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105488161076f565b61051983836107db565b61055c3382610815565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486105898161076f565b610519838361084b565b60008281526006602052604081206105ab9083610860565b9392505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103fc90610f99565b60008181526006602052604090206060906103e79061086c565b60003361048d818585610710565b60008181526006602052604081206103e790610879565b6000828152600560205260409020600101546106468161076f565b6104e083836107ae565b60006001600160e01b03198216637965db0b60e01b14806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b6105198383836001610883565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156104e0578181101561070157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104e084848484036000610883565b6001600160a01b03831661073a57604051634b637e8f60e11b8152600060048201526024016106f8565b6001600160a01b0382166107645760405163ec442f0560e01b8152600060048201526024016106f8565b610519838383610958565b61055c8133610a82565b6000806107868484610abb565b905080156105ab5760008481526006602052604090206107a69084610b4f565b509392505050565b6000806107bb8484610b64565b905080156105ab5760008481526006602052604090206107a69084610bd1565b6001600160a01b0382166108055760405163ec442f0560e01b8152600060048201526024016106f8565b61081160008383610958565b5050565b6001600160a01b03821661083f57604051634b637e8f60e11b8152600060048201526024016106f8565b61081182600083610958565b610856823383610692565b6108118282610815565b60006105ab8383610be6565b606060006105ab83610c10565b60006103e7825490565b6001600160a01b0384166108ad5760405163e602df0560e01b8152600060048201526024016106f8565b6001600160a01b0383166108d757604051634a1406b160e11b8152600060048201526024016106f8565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104e057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161094a91815260200190565b60405180910390a350505050565b6001600160a01b0383166109835780600260008282546109789190610fe9565b909155506109f59050565b6001600160a01b038316600090815260208190526040902054818110156109d65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106f8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1157600280548290039055610a30565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7591815260200190565b60405180910390a3505050565b610a8c82826105b2565b6108115760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106f8565b6000610ac783836105b2565b610b475760008381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610aff3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103e7565b5060006103e7565b60006105ab836001600160a01b038416610c6c565b6000610b7083836105b2565b15610b475760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103e7565b60006105ab836001600160a01b038416610cb3565b6000826000018281548110610bfd57610bfd610ffc565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c6057602002820191906000526020600020905b815481526020019060010190808311610c4c575b50505050509050919050565b6000818152600183016020526040812054610b47575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e7565b60008181526001830160205260408120548015610d9c576000610cd7600183611012565b8554909150600090610ceb90600190611012565b9050808214610d50576000866000018281548110610d0b57610d0b610ffc565b9060005260206000200154905080876000018481548110610d2e57610d2e610ffc565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6157610d61611025565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103e7565b60009150506103e7565b600060208284031215610db857600080fd5b81356001600160e01b0319811681146105ab57600080fd5b602081526000825180602084015260005b81811015610dfe5760208186018101516040868401015201610de1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e3557600080fd5b919050565b60008060408385031215610e4d57600080fd5b610e5683610e1e565b946020939093013593505050565b600080600060608486031215610e7957600080fd5b610e8284610e1e565b9250610e9060208501610e1e565b929592945050506040919091013590565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b82359150610edd60208401610e1e565b90509250929050565b600060208284031215610ef857600080fd5b6105ab82610e1e565b60008060408385031215610f1457600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015610f645783516001600160a01b0316835260209384019390920191600101610f3d565b509095945050505050565b60008060408385031215610f8257600080fd5b610f8b83610e1e565b9150610edd60208401610e1e565b600181811c90821680610fad57607f821691505b602082108103610fcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103e7576103e7610fd3565b634e487b7160e01b600052603260045260246000fd5b818103818111156103e7576103e7610fd3565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d355b8f192c5d82ea003a2bd0ea99dd16d5c2e7b93b60cf8d1aa85b68840a4d564736f6c634300081c0033a26469706673582212200f4cdc97e0615edd18add9d1deee3a6b13d7c45d2a310ce55888ae68707d1ba964736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x224B CODESIZE SUB DUP1 PUSH2 0x224B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x150 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0xE4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A205661756C7420616464726573732063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6F74206265207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH2 0x183 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C DUP4 PUSH2 0x134 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A PUSH1 0x20 DUP5 ADD PUSH2 0x134 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2098 PUSH2 0x1B3 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x184 ADD MSTORE DUP2 DUP2 PUSH2 0x389 ADD MSTORE DUP2 DUP2 PUSH2 0x473 ADD MSTORE PUSH2 0x4D3 ADD MSTORE PUSH2 0x2098 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xD9A07BC9 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xDDDDE17A EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14CD6C6D EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2584B3AA EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x734D7A0E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x8D015D22 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x10F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0xD7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A2053796D626F6C20616C726561647920657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x737473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A204E616D652063616E6E6F7420626520656D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7479 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST DUP3 PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A2053796D626F6C2063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x30C JUMPI POP PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A20446563696D616C73206D7573742062652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0xCAE8EECACADC406240C2DCC840627 PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP7 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x3C4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 SWAP3 POP DUP3 PUSH1 0x1 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD DUP8 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH4 0x56729CC5 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xACE5398A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4048353DAEAC164BD3C491159FC34428025F0BD6DEC64FB19ED1FAF812A0D9BB DUP11 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0x53E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x559 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x563 PUSH1 0x0 PUSH2 0x6BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A20496E646578206F7574206F6620626F756E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5D6 JUMPI PUSH2 0x5D6 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x62F SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x658 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x68B DUP2 PUSH2 0x6BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1627 DUP1 PUSH2 0xA3C DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86B DUP9 DUP3 DUP10 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x897 DUP9 DUP3 DUP10 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90E DUP6 DUP3 DUP7 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x997 PUSH1 0xA0 DUP4 ADD DUP10 DUP12 PUSH2 0x95A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x9AA DUP2 DUP9 DUP11 PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9EB PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x95A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x9FE DUP2 DUP8 DUP10 PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1627 CODESIZE SUB DUP1 PUSH2 0x1627 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A20496E697469616C2061646D696E2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A204D696E7465722F4275726E65722063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH2 0x14A PUSH1 0x0 DUP4 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x175 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x1A0 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B8 DUP5 DUP5 PUSH2 0x1E3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1D8 SWAP1 DUP5 PUSH2 0x291 JUMP JUMPDEST POP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x289 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x241 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1DD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x289 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH2 0x328 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F7 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x421 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x446 PUSH1 0x60 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x454 PUSH1 0x80 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x474 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4C1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x502 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x510 DUP5 SLOAD PUSH2 0x460 JUMP JUMPDEST DUP5 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54A JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x532 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x57A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x55A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x598 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1071 DUP1 PUSH2 0x5B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x22F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x22F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH2 0x3E7 DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4A5 DUP6 DUP3 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x4B0 DUP6 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4D6 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x7AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x548 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x55C CALLER DUP3 PUSH2 0x815 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x589 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5AB SWAP1 DUP4 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x3E7 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E7 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x646 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x55C DUP2 CALLER PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x786 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xB4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7BB DUP5 DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x0 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 DUP3 PUSH1 0x0 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x811 DUP3 DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 DUP4 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x983 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x9F5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA8C DUP3 DUP3 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAFF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST ISZERO PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBFD JUMPI PUSH2 0xBFD PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC4C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB47 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 PUSH2 0xCD7 PUSH1 0x1 DUP4 PUSH2 0x1012 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xCEB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xD50 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0B PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD61 JUMPI PUSH2 0xD61 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xDE1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE90 PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SSTORE 0xB8 CALL SWAP3 0xC5 0xD8 0x2E LOG0 SUB LOG2 0xBD 0xE 0xA9 SWAP14 0xD1 PUSH14 0x5C2E7B93B60CF8D1AA85B68840A4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x4C 0xDC SWAP8 0xE0 PUSH2 0x5EDD XOR 0xAD 0xD9 0xD1 0xDE 0xEE GASPRICE PUSH12 0x13D7C45D2A310CE55888AE68 PUSH17 0x7D1BA964736F6C634300081C0033000000 ","sourceMap":"247:4825:23:-:0;;;855:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;919:12;-1:-1:-1;;;;;1273:26:2;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:2;;1350:1;1322:31;;;640:51:25;613:18;;1322:31:2;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;951:26:23;::::1;943:81;;;::::0;-1:-1:-1;;;943:81:23;;904:2:25;943:81:23::1;::::0;::::1;886:21:25::0;943:2;923:18;;;916:30;982:34;962:18;;;955:62;-1:-1:-1;;;1033:18:25;;;1026:40;1083:19;;943:81:23::1;702:406:25::0;943:81:23::1;-1:-1:-1::0;;;;;1034:27:23::1;;::::0;-1:-1:-1;247:4825:23;;2912:187:2;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:406::-;247:4825:23;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_463":{"entryPoint":1678,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":1723,"id":525,"parameterSlots":1,"returnSlots":0},"@allSynths_7074":{"entryPoint":1521,"id":7074,"parameterSlots":0,"returnSlots":0},"@createSynth_7235":{"entryPoint":422,"id":7235,"parameterSlots":5,"returnSlots":1},"@getAllSynthsCount_7257":{"entryPoint":null,"id":7257,"parameterSlots":0,"returnSlots":1},"@getSynthAtIndex_7277":{"entryPoint":1381,"id":7277,"parameterSlots":1,"returnSlots":1},"@getSynthBySymbol_7248":{"entryPoint":1563,"id":7248,"parameterSlots":2,"returnSlots":1},"@owner_446":{"entryPoint":null,"id":446,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":1361,"id":477,"parameterSlots":0,"returnSlots":0},"@synthBySymbol_7071":{"entryPoint":null,"id":7071,"parameterSlots":0,"returnSlots":0},"@transferOwnership_505":{"entryPoint":1616,"id":505,"parameterSlots":1,"returnSlots":0},"@vault_7067":{"entryPoint":null,"id":7067,"parameterSlots":0,"returnSlots":0},"abi_decode_string_calldata":{"entryPoint":2023,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":2330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":2264,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_uint8":{"entryPoint":2096,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":1838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":2394,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2378,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_Vault_$8042__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed":{"entryPoint":2519,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address_t_address__fromStack_reversed":{"entryPoint":2435,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2362954854abec606345926a1e026bdb0343c7dd1d7aef33a453e36a76639980__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c40c49e7556f13eebc7e10cf1b33b114a0b170d19003e10546e347f52e71913__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d1a9a13b06cc8aff9ba483a4e13e59e28891d478348833dc1a34b1373ddcc50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9f5c08208265473fd885ce40580391aab225617aea767cb8f69d6ac8c30c012a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d85890c925f1727608cb87d0372ae4768a534a9da9df2e35bf010dc1b05950c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2597,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1816,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7876:25","nodeType":"YulBlock","src":"0:7876:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"46:95:25","nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:25","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:25","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:25","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:25","nodeType":"YulIdentifier","src":"66:3:25"},"nativeSrc":"66:20:25","nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nativeSrc":"56:6:25","nodeType":"YulIdentifier","src":"56:6:25"},"nativeSrc":"56:31:25","nodeType":"YulFunctionCall","src":"56:31:25"},"nativeSrc":"56:31:25","nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:25","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:25","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:25","nodeType":"YulIdentifier","src":"96:6:25"},"nativeSrc":"96:15:25","nodeType":"YulFunctionCall","src":"96:15:25"},"nativeSrc":"96:15:25","nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:25","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:25","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:25","nodeType":"YulIdentifier","src":"120:6:25"},"nativeSrc":"120:15:25","nodeType":"YulFunctionCall","src":"120:15:25"},"nativeSrc":"120:15:25","nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nativeSrc":"14:127:25","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nativeSrc":"226:865:25","nodeType":"YulBlock","src":"226:865:25","statements":[{"body":{"nativeSrc":"272:16:25","nodeType":"YulBlock","src":"272:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"281:1:25","nodeType":"YulLiteral","src":"281:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"284:1:25","nodeType":"YulLiteral","src":"284:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"274:6:25","nodeType":"YulIdentifier","src":"274:6:25"},"nativeSrc":"274:12:25","nodeType":"YulFunctionCall","src":"274:12:25"},"nativeSrc":"274:12:25","nodeType":"YulExpressionStatement","src":"274:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"247:7:25","nodeType":"YulIdentifier","src":"247:7:25"},{"name":"headStart","nativeSrc":"256:9:25","nodeType":"YulIdentifier","src":"256:9:25"}],"functionName":{"name":"sub","nativeSrc":"243:3:25","nodeType":"YulIdentifier","src":"243:3:25"},"nativeSrc":"243:23:25","nodeType":"YulFunctionCall","src":"243:23:25"},{"kind":"number","nativeSrc":"268:2:25","nodeType":"YulLiteral","src":"268:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"239:3:25","nodeType":"YulIdentifier","src":"239:3:25"},"nativeSrc":"239:32:25","nodeType":"YulFunctionCall","src":"239:32:25"},"nativeSrc":"236:52:25","nodeType":"YulIf","src":"236:52:25"},{"nativeSrc":"297:37:25","nodeType":"YulVariableDeclaration","src":"297:37:25","value":{"arguments":[{"name":"headStart","nativeSrc":"324:9:25","nodeType":"YulIdentifier","src":"324:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"311:12:25","nodeType":"YulIdentifier","src":"311:12:25"},"nativeSrc":"311:23:25","nodeType":"YulFunctionCall","src":"311:23:25"},"variables":[{"name":"offset","nativeSrc":"301:6:25","nodeType":"YulTypedName","src":"301:6:25","type":""}]},{"body":{"nativeSrc":"377:16:25","nodeType":"YulBlock","src":"377:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"386:1:25","nodeType":"YulLiteral","src":"386:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"389:1:25","nodeType":"YulLiteral","src":"389:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"379:6:25","nodeType":"YulIdentifier","src":"379:6:25"},"nativeSrc":"379:12:25","nodeType":"YulFunctionCall","src":"379:12:25"},"nativeSrc":"379:12:25","nodeType":"YulExpressionStatement","src":"379:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"349:6:25","nodeType":"YulIdentifier","src":"349:6:25"},{"kind":"number","nativeSrc":"357:18:25","nodeType":"YulLiteral","src":"357:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"346:2:25","nodeType":"YulIdentifier","src":"346:2:25"},"nativeSrc":"346:30:25","nodeType":"YulFunctionCall","src":"346:30:25"},"nativeSrc":"343:50:25","nodeType":"YulIf","src":"343:50:25"},{"nativeSrc":"402:32:25","nodeType":"YulVariableDeclaration","src":"402:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"416:9:25","nodeType":"YulIdentifier","src":"416:9:25"},{"name":"offset","nativeSrc":"427:6:25","nodeType":"YulIdentifier","src":"427:6:25"}],"functionName":{"name":"add","nativeSrc":"412:3:25","nodeType":"YulIdentifier","src":"412:3:25"},"nativeSrc":"412:22:25","nodeType":"YulFunctionCall","src":"412:22:25"},"variables":[{"name":"_1","nativeSrc":"406:2:25","nodeType":"YulTypedName","src":"406:2:25","type":""}]},{"body":{"nativeSrc":"482:16:25","nodeType":"YulBlock","src":"482:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"491:1:25","nodeType":"YulLiteral","src":"491:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"494:1:25","nodeType":"YulLiteral","src":"494:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"484:6:25","nodeType":"YulIdentifier","src":"484:6:25"},"nativeSrc":"484:12:25","nodeType":"YulFunctionCall","src":"484:12:25"},"nativeSrc":"484:12:25","nodeType":"YulExpressionStatement","src":"484:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"461:2:25","nodeType":"YulIdentifier","src":"461:2:25"},{"kind":"number","nativeSrc":"465:4:25","nodeType":"YulLiteral","src":"465:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"457:3:25","nodeType":"YulIdentifier","src":"457:3:25"},"nativeSrc":"457:13:25","nodeType":"YulFunctionCall","src":"457:13:25"},{"name":"dataEnd","nativeSrc":"472:7:25","nodeType":"YulIdentifier","src":"472:7:25"}],"functionName":{"name":"slt","nativeSrc":"453:3:25","nodeType":"YulIdentifier","src":"453:3:25"},"nativeSrc":"453:27:25","nodeType":"YulFunctionCall","src":"453:27:25"}],"functionName":{"name":"iszero","nativeSrc":"446:6:25","nodeType":"YulIdentifier","src":"446:6:25"},"nativeSrc":"446:35:25","nodeType":"YulFunctionCall","src":"446:35:25"},"nativeSrc":"443:55:25","nodeType":"YulIf","src":"443:55:25"},{"nativeSrc":"507:30:25","nodeType":"YulVariableDeclaration","src":"507:30:25","value":{"arguments":[{"name":"_1","nativeSrc":"534:2:25","nodeType":"YulIdentifier","src":"534:2:25"}],"functionName":{"name":"calldataload","nativeSrc":"521:12:25","nodeType":"YulIdentifier","src":"521:12:25"},"nativeSrc":"521:16:25","nodeType":"YulFunctionCall","src":"521:16:25"},"variables":[{"name":"length","nativeSrc":"511:6:25","nodeType":"YulTypedName","src":"511:6:25","type":""}]},{"body":{"nativeSrc":"580:22:25","nodeType":"YulBlock","src":"580:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"582:16:25","nodeType":"YulIdentifier","src":"582:16:25"},"nativeSrc":"582:18:25","nodeType":"YulFunctionCall","src":"582:18:25"},"nativeSrc":"582:18:25","nodeType":"YulExpressionStatement","src":"582:18:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"552:6:25","nodeType":"YulIdentifier","src":"552:6:25"},{"kind":"number","nativeSrc":"560:18:25","nodeType":"YulLiteral","src":"560:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"549:2:25","nodeType":"YulIdentifier","src":"549:2:25"},"nativeSrc":"549:30:25","nodeType":"YulFunctionCall","src":"549:30:25"},"nativeSrc":"546:56:25","nodeType":"YulIf","src":"546:56:25"},{"nativeSrc":"611:23:25","nodeType":"YulVariableDeclaration","src":"611:23:25","value":{"arguments":[{"kind":"number","nativeSrc":"631:2:25","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"625:5:25","nodeType":"YulIdentifier","src":"625:5:25"},"nativeSrc":"625:9:25","nodeType":"YulFunctionCall","src":"625:9:25"},"variables":[{"name":"memPtr","nativeSrc":"615:6:25","nodeType":"YulTypedName","src":"615:6:25","type":""}]},{"nativeSrc":"643:85:25","nodeType":"YulVariableDeclaration","src":"643:85:25","value":{"arguments":[{"name":"memPtr","nativeSrc":"665:6:25","nodeType":"YulIdentifier","src":"665:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"689:6:25","nodeType":"YulIdentifier","src":"689:6:25"},{"kind":"number","nativeSrc":"697:4:25","nodeType":"YulLiteral","src":"697:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"685:3:25","nodeType":"YulIdentifier","src":"685:3:25"},"nativeSrc":"685:17:25","nodeType":"YulFunctionCall","src":"685:17:25"},{"arguments":[{"kind":"number","nativeSrc":"708:2:25","nodeType":"YulLiteral","src":"708:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"704:3:25","nodeType":"YulIdentifier","src":"704:3:25"},"nativeSrc":"704:7:25","nodeType":"YulFunctionCall","src":"704:7:25"}],"functionName":{"name":"and","nativeSrc":"681:3:25","nodeType":"YulIdentifier","src":"681:3:25"},"nativeSrc":"681:31:25","nodeType":"YulFunctionCall","src":"681:31:25"},{"kind":"number","nativeSrc":"714:2:25","nodeType":"YulLiteral","src":"714:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"677:3:25","nodeType":"YulIdentifier","src":"677:3:25"},"nativeSrc":"677:40:25","nodeType":"YulFunctionCall","src":"677:40:25"},{"arguments":[{"kind":"number","nativeSrc":"723:2:25","nodeType":"YulLiteral","src":"723:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"719:3:25","nodeType":"YulIdentifier","src":"719:3:25"},"nativeSrc":"719:7:25","nodeType":"YulFunctionCall","src":"719:7:25"}],"functionName":{"name":"and","nativeSrc":"673:3:25","nodeType":"YulIdentifier","src":"673:3:25"},"nativeSrc":"673:54:25","nodeType":"YulFunctionCall","src":"673:54:25"}],"functionName":{"name":"add","nativeSrc":"661:3:25","nodeType":"YulIdentifier","src":"661:3:25"},"nativeSrc":"661:67:25","nodeType":"YulFunctionCall","src":"661:67:25"},"variables":[{"name":"newFreePtr","nativeSrc":"647:10:25","nodeType":"YulTypedName","src":"647:10:25","type":""}]},{"body":{"nativeSrc":"803:22:25","nodeType":"YulBlock","src":"803:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"805:16:25","nodeType":"YulIdentifier","src":"805:16:25"},"nativeSrc":"805:18:25","nodeType":"YulFunctionCall","src":"805:18:25"},"nativeSrc":"805:18:25","nodeType":"YulExpressionStatement","src":"805:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"746:10:25","nodeType":"YulIdentifier","src":"746:10:25"},{"kind":"number","nativeSrc":"758:18:25","nodeType":"YulLiteral","src":"758:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"743:2:25","nodeType":"YulIdentifier","src":"743:2:25"},"nativeSrc":"743:34:25","nodeType":"YulFunctionCall","src":"743:34:25"},{"arguments":[{"name":"newFreePtr","nativeSrc":"782:10:25","nodeType":"YulIdentifier","src":"782:10:25"},{"name":"memPtr","nativeSrc":"794:6:25","nodeType":"YulIdentifier","src":"794:6:25"}],"functionName":{"name":"lt","nativeSrc":"779:2:25","nodeType":"YulIdentifier","src":"779:2:25"},"nativeSrc":"779:22:25","nodeType":"YulFunctionCall","src":"779:22:25"}],"functionName":{"name":"or","nativeSrc":"740:2:25","nodeType":"YulIdentifier","src":"740:2:25"},"nativeSrc":"740:62:25","nodeType":"YulFunctionCall","src":"740:62:25"},"nativeSrc":"737:88:25","nodeType":"YulIf","src":"737:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"841:2:25","nodeType":"YulLiteral","src":"841:2:25","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"845:10:25","nodeType":"YulIdentifier","src":"845:10:25"}],"functionName":{"name":"mstore","nativeSrc":"834:6:25","nodeType":"YulIdentifier","src":"834:6:25"},"nativeSrc":"834:22:25","nodeType":"YulFunctionCall","src":"834:22:25"},"nativeSrc":"834:22:25","nodeType":"YulExpressionStatement","src":"834:22:25"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"872:6:25","nodeType":"YulIdentifier","src":"872:6:25"},{"name":"length","nativeSrc":"880:6:25","nodeType":"YulIdentifier","src":"880:6:25"}],"functionName":{"name":"mstore","nativeSrc":"865:6:25","nodeType":"YulIdentifier","src":"865:6:25"},"nativeSrc":"865:22:25","nodeType":"YulFunctionCall","src":"865:22:25"},"nativeSrc":"865:22:25","nodeType":"YulExpressionStatement","src":"865:22:25"},{"body":{"nativeSrc":"937:16:25","nodeType":"YulBlock","src":"937:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"946:1:25","nodeType":"YulLiteral","src":"946:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"949:1:25","nodeType":"YulLiteral","src":"949:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"939:6:25","nodeType":"YulIdentifier","src":"939:6:25"},"nativeSrc":"939:12:25","nodeType":"YulFunctionCall","src":"939:12:25"},"nativeSrc":"939:12:25","nodeType":"YulExpressionStatement","src":"939:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"910:2:25","nodeType":"YulIdentifier","src":"910:2:25"},{"name":"length","nativeSrc":"914:6:25","nodeType":"YulIdentifier","src":"914:6:25"}],"functionName":{"name":"add","nativeSrc":"906:3:25","nodeType":"YulIdentifier","src":"906:3:25"},"nativeSrc":"906:15:25","nodeType":"YulFunctionCall","src":"906:15:25"},{"kind":"number","nativeSrc":"923:2:25","nodeType":"YulLiteral","src":"923:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"902:3:25","nodeType":"YulIdentifier","src":"902:3:25"},"nativeSrc":"902:24:25","nodeType":"YulFunctionCall","src":"902:24:25"},{"name":"dataEnd","nativeSrc":"928:7:25","nodeType":"YulIdentifier","src":"928:7:25"}],"functionName":{"name":"gt","nativeSrc":"899:2:25","nodeType":"YulIdentifier","src":"899:2:25"},"nativeSrc":"899:37:25","nodeType":"YulFunctionCall","src":"899:37:25"},"nativeSrc":"896:57:25","nodeType":"YulIf","src":"896:57:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"979:6:25","nodeType":"YulIdentifier","src":"979:6:25"},{"kind":"number","nativeSrc":"987:2:25","nodeType":"YulLiteral","src":"987:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:25","nodeType":"YulIdentifier","src":"975:3:25"},"nativeSrc":"975:15:25","nodeType":"YulFunctionCall","src":"975:15:25"},{"arguments":[{"name":"_1","nativeSrc":"996:2:25","nodeType":"YulIdentifier","src":"996:2:25"},{"kind":"number","nativeSrc":"1000:2:25","nodeType":"YulLiteral","src":"1000:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"992:3:25","nodeType":"YulIdentifier","src":"992:3:25"},"nativeSrc":"992:11:25","nodeType":"YulFunctionCall","src":"992:11:25"},{"name":"length","nativeSrc":"1005:6:25","nodeType":"YulIdentifier","src":"1005:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"962:12:25","nodeType":"YulIdentifier","src":"962:12:25"},"nativeSrc":"962:50:25","nodeType":"YulFunctionCall","src":"962:50:25"},"nativeSrc":"962:50:25","nodeType":"YulExpressionStatement","src":"962:50:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1036:6:25","nodeType":"YulIdentifier","src":"1036:6:25"},{"name":"length","nativeSrc":"1044:6:25","nodeType":"YulIdentifier","src":"1044:6:25"}],"functionName":{"name":"add","nativeSrc":"1032:3:25","nodeType":"YulIdentifier","src":"1032:3:25"},"nativeSrc":"1032:19:25","nodeType":"YulFunctionCall","src":"1032:19:25"},{"kind":"number","nativeSrc":"1053:2:25","nodeType":"YulLiteral","src":"1053:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1028:3:25","nodeType":"YulIdentifier","src":"1028:3:25"},"nativeSrc":"1028:28:25","nodeType":"YulFunctionCall","src":"1028:28:25"},{"kind":"number","nativeSrc":"1058:1:25","nodeType":"YulLiteral","src":"1058:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1021:6:25","nodeType":"YulIdentifier","src":"1021:6:25"},"nativeSrc":"1021:39:25","nodeType":"YulFunctionCall","src":"1021:39:25"},"nativeSrc":"1021:39:25","nodeType":"YulExpressionStatement","src":"1021:39:25"},{"nativeSrc":"1069:16:25","nodeType":"YulAssignment","src":"1069:16:25","value":{"name":"memPtr","nativeSrc":"1079:6:25","nodeType":"YulIdentifier","src":"1079:6:25"},"variableNames":[{"name":"value0","nativeSrc":"1069:6:25","nodeType":"YulIdentifier","src":"1069:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"146:945:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"192:9:25","nodeType":"YulTypedName","src":"192:9:25","type":""},{"name":"dataEnd","nativeSrc":"203:7:25","nodeType":"YulTypedName","src":"203:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"215:6:25","nodeType":"YulTypedName","src":"215:6:25","type":""}],"src":"146:945:25"},{"body":{"nativeSrc":"1197:102:25","nodeType":"YulBlock","src":"1197:102:25","statements":[{"nativeSrc":"1207:26:25","nodeType":"YulAssignment","src":"1207:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1219:9:25","nodeType":"YulIdentifier","src":"1219:9:25"},{"kind":"number","nativeSrc":"1230:2:25","nodeType":"YulLiteral","src":"1230:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1215:3:25","nodeType":"YulIdentifier","src":"1215:3:25"},"nativeSrc":"1215:18:25","nodeType":"YulFunctionCall","src":"1215:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1207:4:25","nodeType":"YulIdentifier","src":"1207:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1249:9:25","nodeType":"YulIdentifier","src":"1249:9:25"},{"arguments":[{"name":"value0","nativeSrc":"1264:6:25","nodeType":"YulIdentifier","src":"1264:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1280:3:25","nodeType":"YulLiteral","src":"1280:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1285:1:25","nodeType":"YulLiteral","src":"1285:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1276:3:25","nodeType":"YulIdentifier","src":"1276:3:25"},"nativeSrc":"1276:11:25","nodeType":"YulFunctionCall","src":"1276:11:25"},{"kind":"number","nativeSrc":"1289:1:25","nodeType":"YulLiteral","src":"1289:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1272:3:25","nodeType":"YulIdentifier","src":"1272:3:25"},"nativeSrc":"1272:19:25","nodeType":"YulFunctionCall","src":"1272:19:25"}],"functionName":{"name":"and","nativeSrc":"1260:3:25","nodeType":"YulIdentifier","src":"1260:3:25"},"nativeSrc":"1260:32:25","nodeType":"YulFunctionCall","src":"1260:32:25"}],"functionName":{"name":"mstore","nativeSrc":"1242:6:25","nodeType":"YulIdentifier","src":"1242:6:25"},"nativeSrc":"1242:51:25","nodeType":"YulFunctionCall","src":"1242:51:25"},"nativeSrc":"1242:51:25","nodeType":"YulExpressionStatement","src":"1242:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1096:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1166:9:25","nodeType":"YulTypedName","src":"1166:9:25","type":""},{"name":"value0","nativeSrc":"1177:6:25","nodeType":"YulTypedName","src":"1177:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1188:4:25","nodeType":"YulTypedName","src":"1188:4:25","type":""}],"src":"1096:203:25"},{"body":{"nativeSrc":"1377:275:25","nodeType":"YulBlock","src":"1377:275:25","statements":[{"body":{"nativeSrc":"1426:16:25","nodeType":"YulBlock","src":"1426:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1435:1:25","nodeType":"YulLiteral","src":"1435:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1438:1:25","nodeType":"YulLiteral","src":"1438:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1428:6:25","nodeType":"YulIdentifier","src":"1428:6:25"},"nativeSrc":"1428:12:25","nodeType":"YulFunctionCall","src":"1428:12:25"},"nativeSrc":"1428:12:25","nodeType":"YulExpressionStatement","src":"1428:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1405:6:25","nodeType":"YulIdentifier","src":"1405:6:25"},{"kind":"number","nativeSrc":"1413:4:25","nodeType":"YulLiteral","src":"1413:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1401:3:25","nodeType":"YulIdentifier","src":"1401:3:25"},"nativeSrc":"1401:17:25","nodeType":"YulFunctionCall","src":"1401:17:25"},{"name":"end","nativeSrc":"1420:3:25","nodeType":"YulIdentifier","src":"1420:3:25"}],"functionName":{"name":"slt","nativeSrc":"1397:3:25","nodeType":"YulIdentifier","src":"1397:3:25"},"nativeSrc":"1397:27:25","nodeType":"YulFunctionCall","src":"1397:27:25"}],"functionName":{"name":"iszero","nativeSrc":"1390:6:25","nodeType":"YulIdentifier","src":"1390:6:25"},"nativeSrc":"1390:35:25","nodeType":"YulFunctionCall","src":"1390:35:25"},"nativeSrc":"1387:55:25","nodeType":"YulIf","src":"1387:55:25"},{"nativeSrc":"1451:30:25","nodeType":"YulAssignment","src":"1451:30:25","value":{"arguments":[{"name":"offset","nativeSrc":"1474:6:25","nodeType":"YulIdentifier","src":"1474:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1461:12:25","nodeType":"YulIdentifier","src":"1461:12:25"},"nativeSrc":"1461:20:25","nodeType":"YulFunctionCall","src":"1461:20:25"},"variableNames":[{"name":"length","nativeSrc":"1451:6:25","nodeType":"YulIdentifier","src":"1451:6:25"}]},{"body":{"nativeSrc":"1524:16:25","nodeType":"YulBlock","src":"1524:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1533:1:25","nodeType":"YulLiteral","src":"1533:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1536:1:25","nodeType":"YulLiteral","src":"1536:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1526:6:25","nodeType":"YulIdentifier","src":"1526:6:25"},"nativeSrc":"1526:12:25","nodeType":"YulFunctionCall","src":"1526:12:25"},"nativeSrc":"1526:12:25","nodeType":"YulExpressionStatement","src":"1526:12:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1496:6:25","nodeType":"YulIdentifier","src":"1496:6:25"},{"kind":"number","nativeSrc":"1504:18:25","nodeType":"YulLiteral","src":"1504:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1493:2:25","nodeType":"YulIdentifier","src":"1493:2:25"},"nativeSrc":"1493:30:25","nodeType":"YulFunctionCall","src":"1493:30:25"},"nativeSrc":"1490:50:25","nodeType":"YulIf","src":"1490:50:25"},{"nativeSrc":"1549:29:25","nodeType":"YulAssignment","src":"1549:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1565:6:25","nodeType":"YulIdentifier","src":"1565:6:25"},{"kind":"number","nativeSrc":"1573:4:25","nodeType":"YulLiteral","src":"1573:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1561:3:25","nodeType":"YulIdentifier","src":"1561:3:25"},"nativeSrc":"1561:17:25","nodeType":"YulFunctionCall","src":"1561:17:25"},"variableNames":[{"name":"arrayPos","nativeSrc":"1549:8:25","nodeType":"YulIdentifier","src":"1549:8:25"}]},{"body":{"nativeSrc":"1630:16:25","nodeType":"YulBlock","src":"1630:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1639:1:25","nodeType":"YulLiteral","src":"1639:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1642:1:25","nodeType":"YulLiteral","src":"1642:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1632:6:25","nodeType":"YulIdentifier","src":"1632:6:25"},"nativeSrc":"1632:12:25","nodeType":"YulFunctionCall","src":"1632:12:25"},"nativeSrc":"1632:12:25","nodeType":"YulExpressionStatement","src":"1632:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1601:6:25","nodeType":"YulIdentifier","src":"1601:6:25"},{"name":"length","nativeSrc":"1609:6:25","nodeType":"YulIdentifier","src":"1609:6:25"}],"functionName":{"name":"add","nativeSrc":"1597:3:25","nodeType":"YulIdentifier","src":"1597:3:25"},"nativeSrc":"1597:19:25","nodeType":"YulFunctionCall","src":"1597:19:25"},{"kind":"number","nativeSrc":"1618:4:25","nodeType":"YulLiteral","src":"1618:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1593:3:25","nodeType":"YulIdentifier","src":"1593:3:25"},"nativeSrc":"1593:30:25","nodeType":"YulFunctionCall","src":"1593:30:25"},{"name":"end","nativeSrc":"1625:3:25","nodeType":"YulIdentifier","src":"1625:3:25"}],"functionName":{"name":"gt","nativeSrc":"1590:2:25","nodeType":"YulIdentifier","src":"1590:2:25"},"nativeSrc":"1590:39:25","nodeType":"YulFunctionCall","src":"1590:39:25"},"nativeSrc":"1587:59:25","nodeType":"YulIf","src":"1587:59:25"}]},"name":"abi_decode_string_calldata","nativeSrc":"1304:348:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1340:6:25","nodeType":"YulTypedName","src":"1340:6:25","type":""},{"name":"end","nativeSrc":"1348:3:25","nodeType":"YulTypedName","src":"1348:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1356:8:25","nodeType":"YulTypedName","src":"1356:8:25","type":""},{"name":"length","nativeSrc":"1366:6:25","nodeType":"YulTypedName","src":"1366:6:25","type":""}],"src":"1304:348:25"},{"body":{"nativeSrc":"1799:731:25","nodeType":"YulBlock","src":"1799:731:25","statements":[{"body":{"nativeSrc":"1845:16:25","nodeType":"YulBlock","src":"1845:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1854:1:25","nodeType":"YulLiteral","src":"1854:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1857:1:25","nodeType":"YulLiteral","src":"1857:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1847:6:25","nodeType":"YulIdentifier","src":"1847:6:25"},"nativeSrc":"1847:12:25","nodeType":"YulFunctionCall","src":"1847:12:25"},"nativeSrc":"1847:12:25","nodeType":"YulExpressionStatement","src":"1847:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1820:7:25","nodeType":"YulIdentifier","src":"1820:7:25"},{"name":"headStart","nativeSrc":"1829:9:25","nodeType":"YulIdentifier","src":"1829:9:25"}],"functionName":{"name":"sub","nativeSrc":"1816:3:25","nodeType":"YulIdentifier","src":"1816:3:25"},"nativeSrc":"1816:23:25","nodeType":"YulFunctionCall","src":"1816:23:25"},{"kind":"number","nativeSrc":"1841:2:25","nodeType":"YulLiteral","src":"1841:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1812:3:25","nodeType":"YulIdentifier","src":"1812:3:25"},"nativeSrc":"1812:32:25","nodeType":"YulFunctionCall","src":"1812:32:25"},"nativeSrc":"1809:52:25","nodeType":"YulIf","src":"1809:52:25"},{"nativeSrc":"1870:37:25","nodeType":"YulVariableDeclaration","src":"1870:37:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1897:9:25","nodeType":"YulIdentifier","src":"1897:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"1884:12:25","nodeType":"YulIdentifier","src":"1884:12:25"},"nativeSrc":"1884:23:25","nodeType":"YulFunctionCall","src":"1884:23:25"},"variables":[{"name":"offset","nativeSrc":"1874:6:25","nodeType":"YulTypedName","src":"1874:6:25","type":""}]},{"body":{"nativeSrc":"1950:16:25","nodeType":"YulBlock","src":"1950:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1959:1:25","nodeType":"YulLiteral","src":"1959:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1962:1:25","nodeType":"YulLiteral","src":"1962:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1952:6:25","nodeType":"YulIdentifier","src":"1952:6:25"},"nativeSrc":"1952:12:25","nodeType":"YulFunctionCall","src":"1952:12:25"},"nativeSrc":"1952:12:25","nodeType":"YulExpressionStatement","src":"1952:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1922:6:25","nodeType":"YulIdentifier","src":"1922:6:25"},{"kind":"number","nativeSrc":"1930:18:25","nodeType":"YulLiteral","src":"1930:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1919:2:25","nodeType":"YulIdentifier","src":"1919:2:25"},"nativeSrc":"1919:30:25","nodeType":"YulFunctionCall","src":"1919:30:25"},"nativeSrc":"1916:50:25","nodeType":"YulIf","src":"1916:50:25"},{"nativeSrc":"1975:85:25","nodeType":"YulVariableDeclaration","src":"1975:85:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2032:9:25","nodeType":"YulIdentifier","src":"2032:9:25"},{"name":"offset","nativeSrc":"2043:6:25","nodeType":"YulIdentifier","src":"2043:6:25"}],"functionName":{"name":"add","nativeSrc":"2028:3:25","nodeType":"YulIdentifier","src":"2028:3:25"},"nativeSrc":"2028:22:25","nodeType":"YulFunctionCall","src":"2028:22:25"},{"name":"dataEnd","nativeSrc":"2052:7:25","nodeType":"YulIdentifier","src":"2052:7:25"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"2001:26:25","nodeType":"YulIdentifier","src":"2001:26:25"},"nativeSrc":"2001:59:25","nodeType":"YulFunctionCall","src":"2001:59:25"},"variables":[{"name":"value0_1","nativeSrc":"1979:8:25","nodeType":"YulTypedName","src":"1979:8:25","type":""},{"name":"value1_1","nativeSrc":"1989:8:25","nodeType":"YulTypedName","src":"1989:8:25","type":""}]},{"nativeSrc":"2069:18:25","nodeType":"YulAssignment","src":"2069:18:25","value":{"name":"value0_1","nativeSrc":"2079:8:25","nodeType":"YulIdentifier","src":"2079:8:25"},"variableNames":[{"name":"value0","nativeSrc":"2069:6:25","nodeType":"YulIdentifier","src":"2069:6:25"}]},{"nativeSrc":"2096:18:25","nodeType":"YulAssignment","src":"2096:18:25","value":{"name":"value1_1","nativeSrc":"2106:8:25","nodeType":"YulIdentifier","src":"2106:8:25"},"variableNames":[{"name":"value1","nativeSrc":"2096:6:25","nodeType":"YulIdentifier","src":"2096:6:25"}]},{"nativeSrc":"2123:48:25","nodeType":"YulVariableDeclaration","src":"2123:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2156:9:25","nodeType":"YulIdentifier","src":"2156:9:25"},{"kind":"number","nativeSrc":"2167:2:25","nodeType":"YulLiteral","src":"2167:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2152:3:25","nodeType":"YulIdentifier","src":"2152:3:25"},"nativeSrc":"2152:18:25","nodeType":"YulFunctionCall","src":"2152:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2139:12:25","nodeType":"YulIdentifier","src":"2139:12:25"},"nativeSrc":"2139:32:25","nodeType":"YulFunctionCall","src":"2139:32:25"},"variables":[{"name":"offset_1","nativeSrc":"2127:8:25","nodeType":"YulTypedName","src":"2127:8:25","type":""}]},{"body":{"nativeSrc":"2216:16:25","nodeType":"YulBlock","src":"2216:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2225:1:25","nodeType":"YulLiteral","src":"2225:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2228:1:25","nodeType":"YulLiteral","src":"2228:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2218:6:25","nodeType":"YulIdentifier","src":"2218:6:25"},"nativeSrc":"2218:12:25","nodeType":"YulFunctionCall","src":"2218:12:25"},"nativeSrc":"2218:12:25","nodeType":"YulExpressionStatement","src":"2218:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"2186:8:25","nodeType":"YulIdentifier","src":"2186:8:25"},{"kind":"number","nativeSrc":"2196:18:25","nodeType":"YulLiteral","src":"2196:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2183:2:25","nodeType":"YulIdentifier","src":"2183:2:25"},"nativeSrc":"2183:32:25","nodeType":"YulFunctionCall","src":"2183:32:25"},"nativeSrc":"2180:52:25","nodeType":"YulIf","src":"2180:52:25"},{"nativeSrc":"2241:87:25","nodeType":"YulVariableDeclaration","src":"2241:87:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2298:9:25","nodeType":"YulIdentifier","src":"2298:9:25"},{"name":"offset_1","nativeSrc":"2309:8:25","nodeType":"YulIdentifier","src":"2309:8:25"}],"functionName":{"name":"add","nativeSrc":"2294:3:25","nodeType":"YulIdentifier","src":"2294:3:25"},"nativeSrc":"2294:24:25","nodeType":"YulFunctionCall","src":"2294:24:25"},{"name":"dataEnd","nativeSrc":"2320:7:25","nodeType":"YulIdentifier","src":"2320:7:25"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"2267:26:25","nodeType":"YulIdentifier","src":"2267:26:25"},"nativeSrc":"2267:61:25","nodeType":"YulFunctionCall","src":"2267:61:25"},"variables":[{"name":"value2_1","nativeSrc":"2245:8:25","nodeType":"YulTypedName","src":"2245:8:25","type":""},{"name":"value3_1","nativeSrc":"2255:8:25","nodeType":"YulTypedName","src":"2255:8:25","type":""}]},{"nativeSrc":"2337:18:25","nodeType":"YulAssignment","src":"2337:18:25","value":{"name":"value2_1","nativeSrc":"2347:8:25","nodeType":"YulIdentifier","src":"2347:8:25"},"variableNames":[{"name":"value2","nativeSrc":"2337:6:25","nodeType":"YulIdentifier","src":"2337:6:25"}]},{"nativeSrc":"2364:18:25","nodeType":"YulAssignment","src":"2364:18:25","value":{"name":"value3_1","nativeSrc":"2374:8:25","nodeType":"YulIdentifier","src":"2374:8:25"},"variableNames":[{"name":"value3","nativeSrc":"2364:6:25","nodeType":"YulIdentifier","src":"2364:6:25"}]},{"nativeSrc":"2391:45:25","nodeType":"YulVariableDeclaration","src":"2391:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2421:9:25","nodeType":"YulIdentifier","src":"2421:9:25"},{"kind":"number","nativeSrc":"2432:2:25","nodeType":"YulLiteral","src":"2432:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2417:3:25","nodeType":"YulIdentifier","src":"2417:3:25"},"nativeSrc":"2417:18:25","nodeType":"YulFunctionCall","src":"2417:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2404:12:25","nodeType":"YulIdentifier","src":"2404:12:25"},"nativeSrc":"2404:32:25","nodeType":"YulFunctionCall","src":"2404:32:25"},"variables":[{"name":"value","nativeSrc":"2395:5:25","nodeType":"YulTypedName","src":"2395:5:25","type":""}]},{"body":{"nativeSrc":"2484:16:25","nodeType":"YulBlock","src":"2484:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2493:1:25","nodeType":"YulLiteral","src":"2493:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2496:1:25","nodeType":"YulLiteral","src":"2496:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2486:6:25","nodeType":"YulIdentifier","src":"2486:6:25"},"nativeSrc":"2486:12:25","nodeType":"YulFunctionCall","src":"2486:12:25"},"nativeSrc":"2486:12:25","nodeType":"YulExpressionStatement","src":"2486:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2458:5:25","nodeType":"YulIdentifier","src":"2458:5:25"},{"arguments":[{"name":"value","nativeSrc":"2469:5:25","nodeType":"YulIdentifier","src":"2469:5:25"},{"kind":"number","nativeSrc":"2476:4:25","nodeType":"YulLiteral","src":"2476:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2465:3:25","nodeType":"YulIdentifier","src":"2465:3:25"},"nativeSrc":"2465:16:25","nodeType":"YulFunctionCall","src":"2465:16:25"}],"functionName":{"name":"eq","nativeSrc":"2455:2:25","nodeType":"YulIdentifier","src":"2455:2:25"},"nativeSrc":"2455:27:25","nodeType":"YulFunctionCall","src":"2455:27:25"}],"functionName":{"name":"iszero","nativeSrc":"2448:6:25","nodeType":"YulIdentifier","src":"2448:6:25"},"nativeSrc":"2448:35:25","nodeType":"YulFunctionCall","src":"2448:35:25"},"nativeSrc":"2445:55:25","nodeType":"YulIf","src":"2445:55:25"},{"nativeSrc":"2509:15:25","nodeType":"YulAssignment","src":"2509:15:25","value":{"name":"value","nativeSrc":"2519:5:25","nodeType":"YulIdentifier","src":"2519:5:25"},"variableNames":[{"name":"value4","nativeSrc":"2509:6:25","nodeType":"YulIdentifier","src":"2509:6:25"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_uint8","nativeSrc":"1657:873:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1733:9:25","nodeType":"YulTypedName","src":"1733:9:25","type":""},{"name":"dataEnd","nativeSrc":"1744:7:25","nodeType":"YulTypedName","src":"1744:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1756:6:25","nodeType":"YulTypedName","src":"1756:6:25","type":""},{"name":"value1","nativeSrc":"1764:6:25","nodeType":"YulTypedName","src":"1764:6:25","type":""},{"name":"value2","nativeSrc":"1772:6:25","nodeType":"YulTypedName","src":"1772:6:25","type":""},{"name":"value3","nativeSrc":"1780:6:25","nodeType":"YulTypedName","src":"1780:6:25","type":""},{"name":"value4","nativeSrc":"1788:6:25","nodeType":"YulTypedName","src":"1788:6:25","type":""}],"src":"1657:873:25"},{"body":{"nativeSrc":"2605:110:25","nodeType":"YulBlock","src":"2605:110:25","statements":[{"body":{"nativeSrc":"2651:16:25","nodeType":"YulBlock","src":"2651:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2660:1:25","nodeType":"YulLiteral","src":"2660:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2663:1:25","nodeType":"YulLiteral","src":"2663:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2653:6:25","nodeType":"YulIdentifier","src":"2653:6:25"},"nativeSrc":"2653:12:25","nodeType":"YulFunctionCall","src":"2653:12:25"},"nativeSrc":"2653:12:25","nodeType":"YulExpressionStatement","src":"2653:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2626:7:25","nodeType":"YulIdentifier","src":"2626:7:25"},{"name":"headStart","nativeSrc":"2635:9:25","nodeType":"YulIdentifier","src":"2635:9:25"}],"functionName":{"name":"sub","nativeSrc":"2622:3:25","nodeType":"YulIdentifier","src":"2622:3:25"},"nativeSrc":"2622:23:25","nodeType":"YulFunctionCall","src":"2622:23:25"},{"kind":"number","nativeSrc":"2647:2:25","nodeType":"YulLiteral","src":"2647:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2618:3:25","nodeType":"YulIdentifier","src":"2618:3:25"},"nativeSrc":"2618:32:25","nodeType":"YulFunctionCall","src":"2618:32:25"},"nativeSrc":"2615:52:25","nodeType":"YulIf","src":"2615:52:25"},{"nativeSrc":"2676:33:25","nodeType":"YulAssignment","src":"2676:33:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2699:9:25","nodeType":"YulIdentifier","src":"2699:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2686:12:25","nodeType":"YulIdentifier","src":"2686:12:25"},"nativeSrc":"2686:23:25","nodeType":"YulFunctionCall","src":"2686:23:25"},"variableNames":[{"name":"value0","nativeSrc":"2676:6:25","nodeType":"YulIdentifier","src":"2676:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2535:180:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2571:9:25","nodeType":"YulTypedName","src":"2571:9:25","type":""},{"name":"dataEnd","nativeSrc":"2582:7:25","nodeType":"YulTypedName","src":"2582:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2594:6:25","nodeType":"YulTypedName","src":"2594:6:25","type":""}],"src":"2535:180:25"},{"body":{"nativeSrc":"2810:321:25","nodeType":"YulBlock","src":"2810:321:25","statements":[{"body":{"nativeSrc":"2856:16:25","nodeType":"YulBlock","src":"2856:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2865:1:25","nodeType":"YulLiteral","src":"2865:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2868:1:25","nodeType":"YulLiteral","src":"2868:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2858:6:25","nodeType":"YulIdentifier","src":"2858:6:25"},"nativeSrc":"2858:12:25","nodeType":"YulFunctionCall","src":"2858:12:25"},"nativeSrc":"2858:12:25","nodeType":"YulExpressionStatement","src":"2858:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2831:7:25","nodeType":"YulIdentifier","src":"2831:7:25"},{"name":"headStart","nativeSrc":"2840:9:25","nodeType":"YulIdentifier","src":"2840:9:25"}],"functionName":{"name":"sub","nativeSrc":"2827:3:25","nodeType":"YulIdentifier","src":"2827:3:25"},"nativeSrc":"2827:23:25","nodeType":"YulFunctionCall","src":"2827:23:25"},{"kind":"number","nativeSrc":"2852:2:25","nodeType":"YulLiteral","src":"2852:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2823:3:25","nodeType":"YulIdentifier","src":"2823:3:25"},"nativeSrc":"2823:32:25","nodeType":"YulFunctionCall","src":"2823:32:25"},"nativeSrc":"2820:52:25","nodeType":"YulIf","src":"2820:52:25"},{"nativeSrc":"2881:37:25","nodeType":"YulVariableDeclaration","src":"2881:37:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2908:9:25","nodeType":"YulIdentifier","src":"2908:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2895:12:25","nodeType":"YulIdentifier","src":"2895:12:25"},"nativeSrc":"2895:23:25","nodeType":"YulFunctionCall","src":"2895:23:25"},"variables":[{"name":"offset","nativeSrc":"2885:6:25","nodeType":"YulTypedName","src":"2885:6:25","type":""}]},{"body":{"nativeSrc":"2961:16:25","nodeType":"YulBlock","src":"2961:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2970:1:25","nodeType":"YulLiteral","src":"2970:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2973:1:25","nodeType":"YulLiteral","src":"2973:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2963:6:25","nodeType":"YulIdentifier","src":"2963:6:25"},"nativeSrc":"2963:12:25","nodeType":"YulFunctionCall","src":"2963:12:25"},"nativeSrc":"2963:12:25","nodeType":"YulExpressionStatement","src":"2963:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2933:6:25","nodeType":"YulIdentifier","src":"2933:6:25"},{"kind":"number","nativeSrc":"2941:18:25","nodeType":"YulLiteral","src":"2941:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2930:2:25","nodeType":"YulIdentifier","src":"2930:2:25"},"nativeSrc":"2930:30:25","nodeType":"YulFunctionCall","src":"2930:30:25"},"nativeSrc":"2927:50:25","nodeType":"YulIf","src":"2927:50:25"},{"nativeSrc":"2986:85:25","nodeType":"YulVariableDeclaration","src":"2986:85:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3043:9:25","nodeType":"YulIdentifier","src":"3043:9:25"},{"name":"offset","nativeSrc":"3054:6:25","nodeType":"YulIdentifier","src":"3054:6:25"}],"functionName":{"name":"add","nativeSrc":"3039:3:25","nodeType":"YulIdentifier","src":"3039:3:25"},"nativeSrc":"3039:22:25","nodeType":"YulFunctionCall","src":"3039:22:25"},{"name":"dataEnd","nativeSrc":"3063:7:25","nodeType":"YulIdentifier","src":"3063:7:25"}],"functionName":{"name":"abi_decode_string_calldata","nativeSrc":"3012:26:25","nodeType":"YulIdentifier","src":"3012:26:25"},"nativeSrc":"3012:59:25","nodeType":"YulFunctionCall","src":"3012:59:25"},"variables":[{"name":"value0_1","nativeSrc":"2990:8:25","nodeType":"YulTypedName","src":"2990:8:25","type":""},{"name":"value1_1","nativeSrc":"3000:8:25","nodeType":"YulTypedName","src":"3000:8:25","type":""}]},{"nativeSrc":"3080:18:25","nodeType":"YulAssignment","src":"3080:18:25","value":{"name":"value0_1","nativeSrc":"3090:8:25","nodeType":"YulIdentifier","src":"3090:8:25"},"variableNames":[{"name":"value0","nativeSrc":"3080:6:25","nodeType":"YulIdentifier","src":"3080:6:25"}]},{"nativeSrc":"3107:18:25","nodeType":"YulAssignment","src":"3107:18:25","value":{"name":"value1_1","nativeSrc":"3117:8:25","nodeType":"YulIdentifier","src":"3117:8:25"},"variableNames":[{"name":"value1","nativeSrc":"3107:6:25","nodeType":"YulIdentifier","src":"3107:6:25"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nativeSrc":"2720:411:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2768:9:25","nodeType":"YulTypedName","src":"2768:9:25","type":""},{"name":"dataEnd","nativeSrc":"2779:7:25","nodeType":"YulTypedName","src":"2779:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2791:6:25","nodeType":"YulTypedName","src":"2791:6:25","type":""},{"name":"value1","nativeSrc":"2799:6:25","nodeType":"YulTypedName","src":"2799:6:25","type":""}],"src":"2720:411:25"},{"body":{"nativeSrc":"3237:76:25","nodeType":"YulBlock","src":"3237:76:25","statements":[{"nativeSrc":"3247:26:25","nodeType":"YulAssignment","src":"3247:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3259:9:25","nodeType":"YulIdentifier","src":"3259:9:25"},{"kind":"number","nativeSrc":"3270:2:25","nodeType":"YulLiteral","src":"3270:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3255:3:25","nodeType":"YulIdentifier","src":"3255:3:25"},"nativeSrc":"3255:18:25","nodeType":"YulFunctionCall","src":"3255:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3247:4:25","nodeType":"YulIdentifier","src":"3247:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3289:9:25","nodeType":"YulIdentifier","src":"3289:9:25"},{"name":"value0","nativeSrc":"3300:6:25","nodeType":"YulIdentifier","src":"3300:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3282:6:25","nodeType":"YulIdentifier","src":"3282:6:25"},"nativeSrc":"3282:25:25","nodeType":"YulFunctionCall","src":"3282:25:25"},"nativeSrc":"3282:25:25","nodeType":"YulExpressionStatement","src":"3282:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3136:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3206:9:25","nodeType":"YulTypedName","src":"3206:9:25","type":""},{"name":"value0","nativeSrc":"3217:6:25","nodeType":"YulTypedName","src":"3217:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3228:4:25","nodeType":"YulTypedName","src":"3228:4:25","type":""}],"src":"3136:177:25"},{"body":{"nativeSrc":"3388:216:25","nodeType":"YulBlock","src":"3388:216:25","statements":[{"body":{"nativeSrc":"3434:16:25","nodeType":"YulBlock","src":"3434:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3443:1:25","nodeType":"YulLiteral","src":"3443:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3446:1:25","nodeType":"YulLiteral","src":"3446:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3436:6:25","nodeType":"YulIdentifier","src":"3436:6:25"},"nativeSrc":"3436:12:25","nodeType":"YulFunctionCall","src":"3436:12:25"},"nativeSrc":"3436:12:25","nodeType":"YulExpressionStatement","src":"3436:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3409:7:25","nodeType":"YulIdentifier","src":"3409:7:25"},{"name":"headStart","nativeSrc":"3418:9:25","nodeType":"YulIdentifier","src":"3418:9:25"}],"functionName":{"name":"sub","nativeSrc":"3405:3:25","nodeType":"YulIdentifier","src":"3405:3:25"},"nativeSrc":"3405:23:25","nodeType":"YulFunctionCall","src":"3405:23:25"},{"kind":"number","nativeSrc":"3430:2:25","nodeType":"YulLiteral","src":"3430:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3401:3:25","nodeType":"YulIdentifier","src":"3401:3:25"},"nativeSrc":"3401:32:25","nodeType":"YulFunctionCall","src":"3401:32:25"},"nativeSrc":"3398:52:25","nodeType":"YulIf","src":"3398:52:25"},{"nativeSrc":"3459:36:25","nodeType":"YulVariableDeclaration","src":"3459:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3485:9:25","nodeType":"YulIdentifier","src":"3485:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3472:12:25","nodeType":"YulIdentifier","src":"3472:12:25"},"nativeSrc":"3472:23:25","nodeType":"YulFunctionCall","src":"3472:23:25"},"variables":[{"name":"value","nativeSrc":"3463:5:25","nodeType":"YulTypedName","src":"3463:5:25","type":""}]},{"body":{"nativeSrc":"3558:16:25","nodeType":"YulBlock","src":"3558:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3567:1:25","nodeType":"YulLiteral","src":"3567:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3570:1:25","nodeType":"YulLiteral","src":"3570:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3560:6:25","nodeType":"YulIdentifier","src":"3560:6:25"},"nativeSrc":"3560:12:25","nodeType":"YulFunctionCall","src":"3560:12:25"},"nativeSrc":"3560:12:25","nodeType":"YulExpressionStatement","src":"3560:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3517:5:25","nodeType":"YulIdentifier","src":"3517:5:25"},{"arguments":[{"name":"value","nativeSrc":"3528:5:25","nodeType":"YulIdentifier","src":"3528:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3543:3:25","nodeType":"YulLiteral","src":"3543:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"3548:1:25","nodeType":"YulLiteral","src":"3548:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3539:3:25","nodeType":"YulIdentifier","src":"3539:3:25"},"nativeSrc":"3539:11:25","nodeType":"YulFunctionCall","src":"3539:11:25"},{"kind":"number","nativeSrc":"3552:1:25","nodeType":"YulLiteral","src":"3552:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3535:3:25","nodeType":"YulIdentifier","src":"3535:3:25"},"nativeSrc":"3535:19:25","nodeType":"YulFunctionCall","src":"3535:19:25"}],"functionName":{"name":"and","nativeSrc":"3524:3:25","nodeType":"YulIdentifier","src":"3524:3:25"},"nativeSrc":"3524:31:25","nodeType":"YulFunctionCall","src":"3524:31:25"}],"functionName":{"name":"eq","nativeSrc":"3514:2:25","nodeType":"YulIdentifier","src":"3514:2:25"},"nativeSrc":"3514:42:25","nodeType":"YulFunctionCall","src":"3514:42:25"}],"functionName":{"name":"iszero","nativeSrc":"3507:6:25","nodeType":"YulIdentifier","src":"3507:6:25"},"nativeSrc":"3507:50:25","nodeType":"YulFunctionCall","src":"3507:50:25"},"nativeSrc":"3504:70:25","nodeType":"YulIf","src":"3504:70:25"},{"nativeSrc":"3583:15:25","nodeType":"YulAssignment","src":"3583:15:25","value":{"name":"value","nativeSrc":"3593:5:25","nodeType":"YulIdentifier","src":"3593:5:25"},"variableNames":[{"name":"value0","nativeSrc":"3583:6:25","nodeType":"YulIdentifier","src":"3583:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3318:286:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3354:9:25","nodeType":"YulTypedName","src":"3354:9:25","type":""},{"name":"dataEnd","nativeSrc":"3365:7:25","nodeType":"YulTypedName","src":"3365:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3377:6:25","nodeType":"YulTypedName","src":"3377:6:25","type":""}],"src":"3318:286:25"},{"body":{"nativeSrc":"3724:102:25","nodeType":"YulBlock","src":"3724:102:25","statements":[{"nativeSrc":"3734:26:25","nodeType":"YulAssignment","src":"3734:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3746:9:25","nodeType":"YulIdentifier","src":"3746:9:25"},{"kind":"number","nativeSrc":"3757:2:25","nodeType":"YulLiteral","src":"3757:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3742:3:25","nodeType":"YulIdentifier","src":"3742:3:25"},"nativeSrc":"3742:18:25","nodeType":"YulFunctionCall","src":"3742:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3734:4:25","nodeType":"YulIdentifier","src":"3734:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3776:9:25","nodeType":"YulIdentifier","src":"3776:9:25"},{"arguments":[{"name":"value0","nativeSrc":"3791:6:25","nodeType":"YulIdentifier","src":"3791:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3807:3:25","nodeType":"YulLiteral","src":"3807:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"3812:1:25","nodeType":"YulLiteral","src":"3812:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3803:3:25","nodeType":"YulIdentifier","src":"3803:3:25"},"nativeSrc":"3803:11:25","nodeType":"YulFunctionCall","src":"3803:11:25"},{"kind":"number","nativeSrc":"3816:1:25","nodeType":"YulLiteral","src":"3816:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3799:3:25","nodeType":"YulIdentifier","src":"3799:3:25"},"nativeSrc":"3799:19:25","nodeType":"YulFunctionCall","src":"3799:19:25"}],"functionName":{"name":"and","nativeSrc":"3787:3:25","nodeType":"YulIdentifier","src":"3787:3:25"},"nativeSrc":"3787:32:25","nodeType":"YulFunctionCall","src":"3787:32:25"}],"functionName":{"name":"mstore","nativeSrc":"3769:6:25","nodeType":"YulIdentifier","src":"3769:6:25"},"nativeSrc":"3769:51:25","nodeType":"YulFunctionCall","src":"3769:51:25"},"nativeSrc":"3769:51:25","nodeType":"YulExpressionStatement","src":"3769:51:25"}]},"name":"abi_encode_tuple_t_contract$_Vault_$8042__to_t_address__fromStack_reversed","nativeSrc":"3609:217:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3693:9:25","nodeType":"YulTypedName","src":"3693:9:25","type":""},{"name":"value0","nativeSrc":"3704:6:25","nodeType":"YulTypedName","src":"3704:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3715:4:25","nodeType":"YulTypedName","src":"3715:4:25","type":""}],"src":"3609:217:25"},{"body":{"nativeSrc":"3980:124:25","nodeType":"YulBlock","src":"3980:124:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4003:3:25","nodeType":"YulIdentifier","src":"4003:3:25"},{"name":"value0","nativeSrc":"4008:6:25","nodeType":"YulIdentifier","src":"4008:6:25"},{"name":"value1","nativeSrc":"4016:6:25","nodeType":"YulIdentifier","src":"4016:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"3990:12:25","nodeType":"YulIdentifier","src":"3990:12:25"},"nativeSrc":"3990:33:25","nodeType":"YulFunctionCall","src":"3990:33:25"},"nativeSrc":"3990:33:25","nodeType":"YulExpressionStatement","src":"3990:33:25"},{"nativeSrc":"4032:26:25","nodeType":"YulVariableDeclaration","src":"4032:26:25","value":{"arguments":[{"name":"pos","nativeSrc":"4046:3:25","nodeType":"YulIdentifier","src":"4046:3:25"},{"name":"value1","nativeSrc":"4051:6:25","nodeType":"YulIdentifier","src":"4051:6:25"}],"functionName":{"name":"add","nativeSrc":"4042:3:25","nodeType":"YulIdentifier","src":"4042:3:25"},"nativeSrc":"4042:16:25","nodeType":"YulFunctionCall","src":"4042:16:25"},"variables":[{"name":"_1","nativeSrc":"4036:2:25","nodeType":"YulTypedName","src":"4036:2:25","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"4074:2:25","nodeType":"YulIdentifier","src":"4074:2:25"},{"kind":"number","nativeSrc":"4078:1:25","nodeType":"YulLiteral","src":"4078:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:25","nodeType":"YulIdentifier","src":"4067:6:25"},"nativeSrc":"4067:13:25","nodeType":"YulFunctionCall","src":"4067:13:25"},"nativeSrc":"4067:13:25","nodeType":"YulExpressionStatement","src":"4067:13:25"},{"nativeSrc":"4089:9:25","nodeType":"YulAssignment","src":"4089:9:25","value":{"name":"_1","nativeSrc":"4096:2:25","nodeType":"YulIdentifier","src":"4096:2:25"},"variableNames":[{"name":"end","nativeSrc":"4089:3:25","nodeType":"YulIdentifier","src":"4089:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"3831:273:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3948:3:25","nodeType":"YulTypedName","src":"3948:3:25","type":""},{"name":"value1","nativeSrc":"3953:6:25","nodeType":"YulTypedName","src":"3953:6:25","type":""},{"name":"value0","nativeSrc":"3961:6:25","nodeType":"YulTypedName","src":"3961:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3972:3:25","nodeType":"YulTypedName","src":"3972:3:25","type":""}],"src":"3831:273:25"},{"body":{"nativeSrc":"4283:225:25","nodeType":"YulBlock","src":"4283:225:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4300:9:25","nodeType":"YulIdentifier","src":"4300:9:25"},{"kind":"number","nativeSrc":"4311:2:25","nodeType":"YulLiteral","src":"4311:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4293:6:25","nodeType":"YulIdentifier","src":"4293:6:25"},"nativeSrc":"4293:21:25","nodeType":"YulFunctionCall","src":"4293:21:25"},"nativeSrc":"4293:21:25","nodeType":"YulExpressionStatement","src":"4293:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4334:9:25","nodeType":"YulIdentifier","src":"4334:9:25"},{"kind":"number","nativeSrc":"4345:2:25","nodeType":"YulLiteral","src":"4345:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4330:3:25","nodeType":"YulIdentifier","src":"4330:3:25"},"nativeSrc":"4330:18:25","nodeType":"YulFunctionCall","src":"4330:18:25"},{"kind":"number","nativeSrc":"4350:2:25","nodeType":"YulLiteral","src":"4350:2:25","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"4323:6:25","nodeType":"YulIdentifier","src":"4323:6:25"},"nativeSrc":"4323:30:25","nodeType":"YulFunctionCall","src":"4323:30:25"},"nativeSrc":"4323:30:25","nodeType":"YulExpressionStatement","src":"4323:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4373:9:25","nodeType":"YulIdentifier","src":"4373:9:25"},{"kind":"number","nativeSrc":"4384:2:25","nodeType":"YulLiteral","src":"4384:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4369:3:25","nodeType":"YulIdentifier","src":"4369:3:25"},"nativeSrc":"4369:18:25","nodeType":"YulFunctionCall","src":"4369:18:25"},{"hexValue":"53796e7468466163746f72793a2053796d626f6c20616c726561647920657869","kind":"string","nativeSrc":"4389:34:25","nodeType":"YulLiteral","src":"4389:34:25","type":"","value":"SynthFactory: Symbol already exi"}],"functionName":{"name":"mstore","nativeSrc":"4362:6:25","nodeType":"YulIdentifier","src":"4362:6:25"},"nativeSrc":"4362:62:25","nodeType":"YulFunctionCall","src":"4362:62:25"},"nativeSrc":"4362:62:25","nodeType":"YulExpressionStatement","src":"4362:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4444:9:25","nodeType":"YulIdentifier","src":"4444:9:25"},{"kind":"number","nativeSrc":"4455:2:25","nodeType":"YulLiteral","src":"4455:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4440:3:25","nodeType":"YulIdentifier","src":"4440:3:25"},"nativeSrc":"4440:18:25","nodeType":"YulFunctionCall","src":"4440:18:25"},{"hexValue":"737473","kind":"string","nativeSrc":"4460:5:25","nodeType":"YulLiteral","src":"4460:5:25","type":"","value":"sts"}],"functionName":{"name":"mstore","nativeSrc":"4433:6:25","nodeType":"YulIdentifier","src":"4433:6:25"},"nativeSrc":"4433:33:25","nodeType":"YulFunctionCall","src":"4433:33:25"},"nativeSrc":"4433:33:25","nodeType":"YulExpressionStatement","src":"4433:33:25"},{"nativeSrc":"4475:27:25","nodeType":"YulAssignment","src":"4475:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4487:9:25","nodeType":"YulIdentifier","src":"4487:9:25"},{"kind":"number","nativeSrc":"4498:3:25","nodeType":"YulLiteral","src":"4498:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4483:3:25","nodeType":"YulIdentifier","src":"4483:3:25"},"nativeSrc":"4483:19:25","nodeType":"YulFunctionCall","src":"4483:19:25"},"variableNames":[{"name":"tail","nativeSrc":"4475:4:25","nodeType":"YulIdentifier","src":"4475:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d85890c925f1727608cb87d0372ae4768a534a9da9df2e35bf010dc1b05950c3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4109:399:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4260:9:25","nodeType":"YulTypedName","src":"4260:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4274:4:25","nodeType":"YulTypedName","src":"4274:4:25","type":""}],"src":"4109:399:25"},{"body":{"nativeSrc":"4687:224:25","nodeType":"YulBlock","src":"4687:224:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4704:9:25","nodeType":"YulIdentifier","src":"4704:9:25"},{"kind":"number","nativeSrc":"4715:2:25","nodeType":"YulLiteral","src":"4715:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4697:6:25","nodeType":"YulIdentifier","src":"4697:6:25"},"nativeSrc":"4697:21:25","nodeType":"YulFunctionCall","src":"4697:21:25"},"nativeSrc":"4697:21:25","nodeType":"YulExpressionStatement","src":"4697:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4738:9:25","nodeType":"YulIdentifier","src":"4738:9:25"},{"kind":"number","nativeSrc":"4749:2:25","nodeType":"YulLiteral","src":"4749:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4734:3:25","nodeType":"YulIdentifier","src":"4734:3:25"},"nativeSrc":"4734:18:25","nodeType":"YulFunctionCall","src":"4734:18:25"},{"kind":"number","nativeSrc":"4754:2:25","nodeType":"YulLiteral","src":"4754:2:25","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"4727:6:25","nodeType":"YulIdentifier","src":"4727:6:25"},"nativeSrc":"4727:30:25","nodeType":"YulFunctionCall","src":"4727:30:25"},"nativeSrc":"4727:30:25","nodeType":"YulExpressionStatement","src":"4727:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4777:9:25","nodeType":"YulIdentifier","src":"4777:9:25"},{"kind":"number","nativeSrc":"4788:2:25","nodeType":"YulLiteral","src":"4788:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4773:3:25","nodeType":"YulIdentifier","src":"4773:3:25"},"nativeSrc":"4773:18:25","nodeType":"YulFunctionCall","src":"4773:18:25"},{"hexValue":"53796e7468466163746f72793a204e616d652063616e6e6f7420626520656d70","kind":"string","nativeSrc":"4793:34:25","nodeType":"YulLiteral","src":"4793:34:25","type":"","value":"SynthFactory: Name cannot be emp"}],"functionName":{"name":"mstore","nativeSrc":"4766:6:25","nodeType":"YulIdentifier","src":"4766:6:25"},"nativeSrc":"4766:62:25","nodeType":"YulFunctionCall","src":"4766:62:25"},"nativeSrc":"4766:62:25","nodeType":"YulExpressionStatement","src":"4766:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4848:9:25","nodeType":"YulIdentifier","src":"4848:9:25"},{"kind":"number","nativeSrc":"4859:2:25","nodeType":"YulLiteral","src":"4859:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4844:3:25","nodeType":"YulIdentifier","src":"4844:3:25"},"nativeSrc":"4844:18:25","nodeType":"YulFunctionCall","src":"4844:18:25"},{"hexValue":"7479","kind":"string","nativeSrc":"4864:4:25","nodeType":"YulLiteral","src":"4864:4:25","type":"","value":"ty"}],"functionName":{"name":"mstore","nativeSrc":"4837:6:25","nodeType":"YulIdentifier","src":"4837:6:25"},"nativeSrc":"4837:32:25","nodeType":"YulFunctionCall","src":"4837:32:25"},"nativeSrc":"4837:32:25","nodeType":"YulExpressionStatement","src":"4837:32:25"},{"nativeSrc":"4878:27:25","nodeType":"YulAssignment","src":"4878:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4890:9:25","nodeType":"YulIdentifier","src":"4890:9:25"},{"kind":"number","nativeSrc":"4901:3:25","nodeType":"YulLiteral","src":"4901:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4886:3:25","nodeType":"YulIdentifier","src":"4886:3:25"},"nativeSrc":"4886:19:25","nodeType":"YulFunctionCall","src":"4886:19:25"},"variableNames":[{"name":"tail","nativeSrc":"4878:4:25","nodeType":"YulIdentifier","src":"4878:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d1a9a13b06cc8aff9ba483a4e13e59e28891d478348833dc1a34b1373ddcc50__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4513:398:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4664:9:25","nodeType":"YulTypedName","src":"4664:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4678:4:25","nodeType":"YulTypedName","src":"4678:4:25","type":""}],"src":"4513:398:25"},{"body":{"nativeSrc":"5090:226:25","nodeType":"YulBlock","src":"5090:226:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5107:9:25","nodeType":"YulIdentifier","src":"5107:9:25"},{"kind":"number","nativeSrc":"5118:2:25","nodeType":"YulLiteral","src":"5118:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5100:6:25","nodeType":"YulIdentifier","src":"5100:6:25"},"nativeSrc":"5100:21:25","nodeType":"YulFunctionCall","src":"5100:21:25"},"nativeSrc":"5100:21:25","nodeType":"YulExpressionStatement","src":"5100:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5141:9:25","nodeType":"YulIdentifier","src":"5141:9:25"},{"kind":"number","nativeSrc":"5152:2:25","nodeType":"YulLiteral","src":"5152:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5137:3:25","nodeType":"YulIdentifier","src":"5137:3:25"},"nativeSrc":"5137:18:25","nodeType":"YulFunctionCall","src":"5137:18:25"},{"kind":"number","nativeSrc":"5157:2:25","nodeType":"YulLiteral","src":"5157:2:25","type":"","value":"36"}],"functionName":{"name":"mstore","nativeSrc":"5130:6:25","nodeType":"YulIdentifier","src":"5130:6:25"},"nativeSrc":"5130:30:25","nodeType":"YulFunctionCall","src":"5130:30:25"},"nativeSrc":"5130:30:25","nodeType":"YulExpressionStatement","src":"5130:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5180:9:25","nodeType":"YulIdentifier","src":"5180:9:25"},{"kind":"number","nativeSrc":"5191:2:25","nodeType":"YulLiteral","src":"5191:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5176:3:25","nodeType":"YulIdentifier","src":"5176:3:25"},"nativeSrc":"5176:18:25","nodeType":"YulFunctionCall","src":"5176:18:25"},{"hexValue":"53796e7468466163746f72793a2053796d626f6c2063616e6e6f742062652065","kind":"string","nativeSrc":"5196:34:25","nodeType":"YulLiteral","src":"5196:34:25","type":"","value":"SynthFactory: Symbol cannot be e"}],"functionName":{"name":"mstore","nativeSrc":"5169:6:25","nodeType":"YulIdentifier","src":"5169:6:25"},"nativeSrc":"5169:62:25","nodeType":"YulFunctionCall","src":"5169:62:25"},"nativeSrc":"5169:62:25","nodeType":"YulExpressionStatement","src":"5169:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5251:9:25","nodeType":"YulIdentifier","src":"5251:9:25"},{"kind":"number","nativeSrc":"5262:2:25","nodeType":"YulLiteral","src":"5262:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5247:3:25","nodeType":"YulIdentifier","src":"5247:3:25"},"nativeSrc":"5247:18:25","nodeType":"YulFunctionCall","src":"5247:18:25"},{"hexValue":"6d707479","kind":"string","nativeSrc":"5267:6:25","nodeType":"YulLiteral","src":"5267:6:25","type":"","value":"mpty"}],"functionName":{"name":"mstore","nativeSrc":"5240:6:25","nodeType":"YulIdentifier","src":"5240:6:25"},"nativeSrc":"5240:34:25","nodeType":"YulFunctionCall","src":"5240:34:25"},"nativeSrc":"5240:34:25","nodeType":"YulExpressionStatement","src":"5240:34:25"},{"nativeSrc":"5283:27:25","nodeType":"YulAssignment","src":"5283:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5295:9:25","nodeType":"YulIdentifier","src":"5295:9:25"},{"kind":"number","nativeSrc":"5306:3:25","nodeType":"YulLiteral","src":"5306:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5291:3:25","nodeType":"YulIdentifier","src":"5291:3:25"},"nativeSrc":"5291:19:25","nodeType":"YulFunctionCall","src":"5291:19:25"},"variableNames":[{"name":"tail","nativeSrc":"5283:4:25","nodeType":"YulIdentifier","src":"5283:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c40c49e7556f13eebc7e10cf1b33b114a0b170d19003e10546e347f52e71913__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4916:400:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5067:9:25","nodeType":"YulTypedName","src":"5067:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5081:4:25","nodeType":"YulTypedName","src":"5081:4:25","type":""}],"src":"4916:400:25"},{"body":{"nativeSrc":"5495:237:25","nodeType":"YulBlock","src":"5495:237:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5512:9:25","nodeType":"YulIdentifier","src":"5512:9:25"},{"kind":"number","nativeSrc":"5523:2:25","nodeType":"YulLiteral","src":"5523:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5505:6:25","nodeType":"YulIdentifier","src":"5505:6:25"},"nativeSrc":"5505:21:25","nodeType":"YulFunctionCall","src":"5505:21:25"},"nativeSrc":"5505:21:25","nodeType":"YulExpressionStatement","src":"5505:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5546:9:25","nodeType":"YulIdentifier","src":"5546:9:25"},{"kind":"number","nativeSrc":"5557:2:25","nodeType":"YulLiteral","src":"5557:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5542:3:25","nodeType":"YulIdentifier","src":"5542:3:25"},"nativeSrc":"5542:18:25","nodeType":"YulFunctionCall","src":"5542:18:25"},{"kind":"number","nativeSrc":"5562:2:25","nodeType":"YulLiteral","src":"5562:2:25","type":"","value":"47"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:25","nodeType":"YulIdentifier","src":"5535:6:25"},"nativeSrc":"5535:30:25","nodeType":"YulFunctionCall","src":"5535:30:25"},"nativeSrc":"5535:30:25","nodeType":"YulExpressionStatement","src":"5535:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5585:9:25","nodeType":"YulIdentifier","src":"5585:9:25"},{"kind":"number","nativeSrc":"5596:2:25","nodeType":"YulLiteral","src":"5596:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5581:3:25","nodeType":"YulIdentifier","src":"5581:3:25"},"nativeSrc":"5581:18:25","nodeType":"YulFunctionCall","src":"5581:18:25"},{"hexValue":"53796e7468466163746f72793a20446563696d616c73206d7573742062652062","kind":"string","nativeSrc":"5601:34:25","nodeType":"YulLiteral","src":"5601:34:25","type":"","value":"SynthFactory: Decimals must be b"}],"functionName":{"name":"mstore","nativeSrc":"5574:6:25","nodeType":"YulIdentifier","src":"5574:6:25"},"nativeSrc":"5574:62:25","nodeType":"YulFunctionCall","src":"5574:62:25"},"nativeSrc":"5574:62:25","nodeType":"YulExpressionStatement","src":"5574:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5656:9:25","nodeType":"YulIdentifier","src":"5656:9:25"},{"kind":"number","nativeSrc":"5667:2:25","nodeType":"YulLiteral","src":"5667:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5652:3:25","nodeType":"YulIdentifier","src":"5652:3:25"},"nativeSrc":"5652:18:25","nodeType":"YulFunctionCall","src":"5652:18:25"},{"hexValue":"65747765656e203120616e64203138","kind":"string","nativeSrc":"5672:17:25","nodeType":"YulLiteral","src":"5672:17:25","type":"","value":"etween 1 and 18"}],"functionName":{"name":"mstore","nativeSrc":"5645:6:25","nodeType":"YulIdentifier","src":"5645:6:25"},"nativeSrc":"5645:45:25","nodeType":"YulFunctionCall","src":"5645:45:25"},"nativeSrc":"5645:45:25","nodeType":"YulExpressionStatement","src":"5645:45:25"},{"nativeSrc":"5699:27:25","nodeType":"YulAssignment","src":"5699:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5711:9:25","nodeType":"YulIdentifier","src":"5711:9:25"},{"kind":"number","nativeSrc":"5722:3:25","nodeType":"YulLiteral","src":"5722:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5707:3:25","nodeType":"YulIdentifier","src":"5707:3:25"},"nativeSrc":"5707:19:25","nodeType":"YulFunctionCall","src":"5707:19:25"},"variableNames":[{"name":"tail","nativeSrc":"5699:4:25","nodeType":"YulIdentifier","src":"5699:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f5c08208265473fd885ce40580391aab225617aea767cb8f69d6ac8c30c012a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5321:411:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5472:9:25","nodeType":"YulTypedName","src":"5472:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5486:4:25","nodeType":"YulTypedName","src":"5486:4:25","type":""}],"src":"5321:411:25"},{"body":{"nativeSrc":"5804:200:25","nodeType":"YulBlock","src":"5804:200:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5821:3:25","nodeType":"YulIdentifier","src":"5821:3:25"},{"name":"length","nativeSrc":"5826:6:25","nodeType":"YulIdentifier","src":"5826:6:25"}],"functionName":{"name":"mstore","nativeSrc":"5814:6:25","nodeType":"YulIdentifier","src":"5814:6:25"},"nativeSrc":"5814:19:25","nodeType":"YulFunctionCall","src":"5814:19:25"},"nativeSrc":"5814:19:25","nodeType":"YulExpressionStatement","src":"5814:19:25"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"5859:3:25","nodeType":"YulIdentifier","src":"5859:3:25"},{"kind":"number","nativeSrc":"5864:4:25","nodeType":"YulLiteral","src":"5864:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5855:3:25","nodeType":"YulIdentifier","src":"5855:3:25"},"nativeSrc":"5855:14:25","nodeType":"YulFunctionCall","src":"5855:14:25"},{"name":"start","nativeSrc":"5871:5:25","nodeType":"YulIdentifier","src":"5871:5:25"},{"name":"length","nativeSrc":"5878:6:25","nodeType":"YulIdentifier","src":"5878:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"5842:12:25","nodeType":"YulIdentifier","src":"5842:12:25"},"nativeSrc":"5842:43:25","nodeType":"YulFunctionCall","src":"5842:43:25"},"nativeSrc":"5842:43:25","nodeType":"YulExpressionStatement","src":"5842:43:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"5909:3:25","nodeType":"YulIdentifier","src":"5909:3:25"},{"name":"length","nativeSrc":"5914:6:25","nodeType":"YulIdentifier","src":"5914:6:25"}],"functionName":{"name":"add","nativeSrc":"5905:3:25","nodeType":"YulIdentifier","src":"5905:3:25"},"nativeSrc":"5905:16:25","nodeType":"YulFunctionCall","src":"5905:16:25"},{"kind":"number","nativeSrc":"5923:4:25","nodeType":"YulLiteral","src":"5923:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5901:3:25","nodeType":"YulIdentifier","src":"5901:3:25"},"nativeSrc":"5901:27:25","nodeType":"YulFunctionCall","src":"5901:27:25"},{"kind":"number","nativeSrc":"5930:1:25","nodeType":"YulLiteral","src":"5930:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5894:6:25","nodeType":"YulIdentifier","src":"5894:6:25"},"nativeSrc":"5894:38:25","nodeType":"YulFunctionCall","src":"5894:38:25"},"nativeSrc":"5894:38:25","nodeType":"YulExpressionStatement","src":"5894:38:25"},{"nativeSrc":"5941:57:25","nodeType":"YulAssignment","src":"5941:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"5956:3:25","nodeType":"YulIdentifier","src":"5956:3:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5969:6:25","nodeType":"YulIdentifier","src":"5969:6:25"},{"kind":"number","nativeSrc":"5977:2:25","nodeType":"YulLiteral","src":"5977:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5965:3:25","nodeType":"YulIdentifier","src":"5965:3:25"},"nativeSrc":"5965:15:25","nodeType":"YulFunctionCall","src":"5965:15:25"},{"arguments":[{"kind":"number","nativeSrc":"5986:2:25","nodeType":"YulLiteral","src":"5986:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5982:3:25","nodeType":"YulIdentifier","src":"5982:3:25"},"nativeSrc":"5982:7:25","nodeType":"YulFunctionCall","src":"5982:7:25"}],"functionName":{"name":"and","nativeSrc":"5961:3:25","nodeType":"YulIdentifier","src":"5961:3:25"},"nativeSrc":"5961:29:25","nodeType":"YulFunctionCall","src":"5961:29:25"}],"functionName":{"name":"add","nativeSrc":"5952:3:25","nodeType":"YulIdentifier","src":"5952:3:25"},"nativeSrc":"5952:39:25","nodeType":"YulFunctionCall","src":"5952:39:25"},{"kind":"number","nativeSrc":"5993:4:25","nodeType":"YulLiteral","src":"5993:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5948:3:25","nodeType":"YulIdentifier","src":"5948:3:25"},"nativeSrc":"5948:50:25","nodeType":"YulFunctionCall","src":"5948:50:25"},"variableNames":[{"name":"end","nativeSrc":"5941:3:25","nodeType":"YulIdentifier","src":"5941:3:25"}]}]},"name":"abi_encode_string_calldata","nativeSrc":"5737:267:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"5773:5:25","nodeType":"YulTypedName","src":"5773:5:25","type":""},{"name":"length","nativeSrc":"5780:6:25","nodeType":"YulTypedName","src":"5780:6:25","type":""},{"name":"pos","nativeSrc":"5788:3:25","nodeType":"YulTypedName","src":"5788:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5796:3:25","nodeType":"YulTypedName","src":"5796:3:25","type":""}],"src":"5737:267:25"},{"body":{"nativeSrc":"6278:443:25","nodeType":"YulBlock","src":"6278:443:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6295:9:25","nodeType":"YulIdentifier","src":"6295:9:25"},{"kind":"number","nativeSrc":"6306:3:25","nodeType":"YulLiteral","src":"6306:3:25","type":"","value":"160"}],"functionName":{"name":"mstore","nativeSrc":"6288:6:25","nodeType":"YulIdentifier","src":"6288:6:25"},"nativeSrc":"6288:22:25","nodeType":"YulFunctionCall","src":"6288:22:25"},"nativeSrc":"6288:22:25","nodeType":"YulExpressionStatement","src":"6288:22:25"},{"nativeSrc":"6319:77:25","nodeType":"YulVariableDeclaration","src":"6319:77:25","value":{"arguments":[{"name":"value0","nativeSrc":"6360:6:25","nodeType":"YulIdentifier","src":"6360:6:25"},{"name":"value1","nativeSrc":"6368:6:25","nodeType":"YulIdentifier","src":"6368:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6380:9:25","nodeType":"YulIdentifier","src":"6380:9:25"},{"kind":"number","nativeSrc":"6391:3:25","nodeType":"YulLiteral","src":"6391:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6376:3:25","nodeType":"YulIdentifier","src":"6376:3:25"},"nativeSrc":"6376:19:25","nodeType":"YulFunctionCall","src":"6376:19:25"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"6333:26:25","nodeType":"YulIdentifier","src":"6333:26:25"},"nativeSrc":"6333:63:25","nodeType":"YulFunctionCall","src":"6333:63:25"},"variables":[{"name":"tail_1","nativeSrc":"6323:6:25","nodeType":"YulTypedName","src":"6323:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6416:9:25","nodeType":"YulIdentifier","src":"6416:9:25"},{"kind":"number","nativeSrc":"6427:2:25","nodeType":"YulLiteral","src":"6427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6412:3:25","nodeType":"YulIdentifier","src":"6412:3:25"},"nativeSrc":"6412:18:25","nodeType":"YulFunctionCall","src":"6412:18:25"},{"arguments":[{"name":"tail_1","nativeSrc":"6436:6:25","nodeType":"YulIdentifier","src":"6436:6:25"},{"name":"headStart","nativeSrc":"6444:9:25","nodeType":"YulIdentifier","src":"6444:9:25"}],"functionName":{"name":"sub","nativeSrc":"6432:3:25","nodeType":"YulIdentifier","src":"6432:3:25"},"nativeSrc":"6432:22:25","nodeType":"YulFunctionCall","src":"6432:22:25"}],"functionName":{"name":"mstore","nativeSrc":"6405:6:25","nodeType":"YulIdentifier","src":"6405:6:25"},"nativeSrc":"6405:50:25","nodeType":"YulFunctionCall","src":"6405:50:25"},"nativeSrc":"6405:50:25","nodeType":"YulExpressionStatement","src":"6405:50:25"},{"nativeSrc":"6464:58:25","nodeType":"YulAssignment","src":"6464:58:25","value":{"arguments":[{"name":"value2","nativeSrc":"6499:6:25","nodeType":"YulIdentifier","src":"6499:6:25"},{"name":"value3","nativeSrc":"6507:6:25","nodeType":"YulIdentifier","src":"6507:6:25"},{"name":"tail_1","nativeSrc":"6515:6:25","nodeType":"YulIdentifier","src":"6515:6:25"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"6472:26:25","nodeType":"YulIdentifier","src":"6472:26:25"},"nativeSrc":"6472:50:25","nodeType":"YulFunctionCall","src":"6472:50:25"},"variableNames":[{"name":"tail","nativeSrc":"6464:4:25","nodeType":"YulIdentifier","src":"6464:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6542:9:25","nodeType":"YulIdentifier","src":"6542:9:25"},{"kind":"number","nativeSrc":"6553:2:25","nodeType":"YulLiteral","src":"6553:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6538:3:25","nodeType":"YulIdentifier","src":"6538:3:25"},"nativeSrc":"6538:18:25","nodeType":"YulFunctionCall","src":"6538:18:25"},{"arguments":[{"name":"value4","nativeSrc":"6562:6:25","nodeType":"YulIdentifier","src":"6562:6:25"},{"kind":"number","nativeSrc":"6570:4:25","nodeType":"YulLiteral","src":"6570:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6558:3:25","nodeType":"YulIdentifier","src":"6558:3:25"},"nativeSrc":"6558:17:25","nodeType":"YulFunctionCall","src":"6558:17:25"}],"functionName":{"name":"mstore","nativeSrc":"6531:6:25","nodeType":"YulIdentifier","src":"6531:6:25"},"nativeSrc":"6531:45:25","nodeType":"YulFunctionCall","src":"6531:45:25"},"nativeSrc":"6531:45:25","nodeType":"YulExpressionStatement","src":"6531:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6596:9:25","nodeType":"YulIdentifier","src":"6596:9:25"},{"kind":"number","nativeSrc":"6607:2:25","nodeType":"YulLiteral","src":"6607:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6592:3:25","nodeType":"YulIdentifier","src":"6592:3:25"},"nativeSrc":"6592:18:25","nodeType":"YulFunctionCall","src":"6592:18:25"},{"arguments":[{"name":"value5","nativeSrc":"6616:6:25","nodeType":"YulIdentifier","src":"6616:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6632:3:25","nodeType":"YulLiteral","src":"6632:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6637:1:25","nodeType":"YulLiteral","src":"6637:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6628:3:25","nodeType":"YulIdentifier","src":"6628:3:25"},"nativeSrc":"6628:11:25","nodeType":"YulFunctionCall","src":"6628:11:25"},{"kind":"number","nativeSrc":"6641:1:25","nodeType":"YulLiteral","src":"6641:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6624:3:25","nodeType":"YulIdentifier","src":"6624:3:25"},"nativeSrc":"6624:19:25","nodeType":"YulFunctionCall","src":"6624:19:25"}],"functionName":{"name":"and","nativeSrc":"6612:3:25","nodeType":"YulIdentifier","src":"6612:3:25"},"nativeSrc":"6612:32:25","nodeType":"YulFunctionCall","src":"6612:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6585:6:25","nodeType":"YulIdentifier","src":"6585:6:25"},"nativeSrc":"6585:60:25","nodeType":"YulFunctionCall","src":"6585:60:25"},"nativeSrc":"6585:60:25","nodeType":"YulExpressionStatement","src":"6585:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6665:9:25","nodeType":"YulIdentifier","src":"6665:9:25"},{"kind":"number","nativeSrc":"6676:3:25","nodeType":"YulLiteral","src":"6676:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6661:3:25","nodeType":"YulIdentifier","src":"6661:3:25"},"nativeSrc":"6661:19:25","nodeType":"YulFunctionCall","src":"6661:19:25"},{"arguments":[{"name":"value6","nativeSrc":"6686:6:25","nodeType":"YulIdentifier","src":"6686:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6702:3:25","nodeType":"YulLiteral","src":"6702:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6707:1:25","nodeType":"YulLiteral","src":"6707:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6698:3:25","nodeType":"YulIdentifier","src":"6698:3:25"},"nativeSrc":"6698:11:25","nodeType":"YulFunctionCall","src":"6698:11:25"},{"kind":"number","nativeSrc":"6711:1:25","nodeType":"YulLiteral","src":"6711:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6694:3:25","nodeType":"YulIdentifier","src":"6694:3:25"},"nativeSrc":"6694:19:25","nodeType":"YulFunctionCall","src":"6694:19:25"}],"functionName":{"name":"and","nativeSrc":"6682:3:25","nodeType":"YulIdentifier","src":"6682:3:25"},"nativeSrc":"6682:32:25","nodeType":"YulFunctionCall","src":"6682:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6654:6:25","nodeType":"YulIdentifier","src":"6654:6:25"},"nativeSrc":"6654:61:25","nodeType":"YulFunctionCall","src":"6654:61:25"},"nativeSrc":"6654:61:25","nodeType":"YulExpressionStatement","src":"6654:61:25"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address_t_address__fromStack_reversed","nativeSrc":"6009:712:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6199:9:25","nodeType":"YulTypedName","src":"6199:9:25","type":""},{"name":"value6","nativeSrc":"6210:6:25","nodeType":"YulTypedName","src":"6210:6:25","type":""},{"name":"value5","nativeSrc":"6218:6:25","nodeType":"YulTypedName","src":"6218:6:25","type":""},{"name":"value4","nativeSrc":"6226:6:25","nodeType":"YulTypedName","src":"6226:6:25","type":""},{"name":"value3","nativeSrc":"6234:6:25","nodeType":"YulTypedName","src":"6234:6:25","type":""},{"name":"value2","nativeSrc":"6242:6:25","nodeType":"YulTypedName","src":"6242:6:25","type":""},{"name":"value1","nativeSrc":"6250:6:25","nodeType":"YulTypedName","src":"6250:6:25","type":""},{"name":"value0","nativeSrc":"6258:6:25","nodeType":"YulTypedName","src":"6258:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6269:4:25","nodeType":"YulTypedName","src":"6269:4:25","type":""}],"src":"6009:712:25"},{"body":{"nativeSrc":"6967:373:25","nodeType":"YulBlock","src":"6967:373:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6984:9:25","nodeType":"YulIdentifier","src":"6984:9:25"},{"kind":"number","nativeSrc":"6995:3:25","nodeType":"YulLiteral","src":"6995:3:25","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"6977:6:25","nodeType":"YulIdentifier","src":"6977:6:25"},"nativeSrc":"6977:22:25","nodeType":"YulFunctionCall","src":"6977:22:25"},"nativeSrc":"6977:22:25","nodeType":"YulExpressionStatement","src":"6977:22:25"},{"nativeSrc":"7008:77:25","nodeType":"YulVariableDeclaration","src":"7008:77:25","value":{"arguments":[{"name":"value0","nativeSrc":"7049:6:25","nodeType":"YulIdentifier","src":"7049:6:25"},{"name":"value1","nativeSrc":"7057:6:25","nodeType":"YulIdentifier","src":"7057:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"7069:9:25","nodeType":"YulIdentifier","src":"7069:9:25"},{"kind":"number","nativeSrc":"7080:3:25","nodeType":"YulLiteral","src":"7080:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7065:3:25","nodeType":"YulIdentifier","src":"7065:3:25"},"nativeSrc":"7065:19:25","nodeType":"YulFunctionCall","src":"7065:19:25"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"7022:26:25","nodeType":"YulIdentifier","src":"7022:26:25"},"nativeSrc":"7022:63:25","nodeType":"YulFunctionCall","src":"7022:63:25"},"variables":[{"name":"tail_1","nativeSrc":"7012:6:25","nodeType":"YulTypedName","src":"7012:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7105:9:25","nodeType":"YulIdentifier","src":"7105:9:25"},{"kind":"number","nativeSrc":"7116:2:25","nodeType":"YulLiteral","src":"7116:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7101:3:25","nodeType":"YulIdentifier","src":"7101:3:25"},"nativeSrc":"7101:18:25","nodeType":"YulFunctionCall","src":"7101:18:25"},{"arguments":[{"name":"tail_1","nativeSrc":"7125:6:25","nodeType":"YulIdentifier","src":"7125:6:25"},{"name":"headStart","nativeSrc":"7133:9:25","nodeType":"YulIdentifier","src":"7133:9:25"}],"functionName":{"name":"sub","nativeSrc":"7121:3:25","nodeType":"YulIdentifier","src":"7121:3:25"},"nativeSrc":"7121:22:25","nodeType":"YulFunctionCall","src":"7121:22:25"}],"functionName":{"name":"mstore","nativeSrc":"7094:6:25","nodeType":"YulIdentifier","src":"7094:6:25"},"nativeSrc":"7094:50:25","nodeType":"YulFunctionCall","src":"7094:50:25"},"nativeSrc":"7094:50:25","nodeType":"YulExpressionStatement","src":"7094:50:25"},{"nativeSrc":"7153:58:25","nodeType":"YulAssignment","src":"7153:58:25","value":{"arguments":[{"name":"value2","nativeSrc":"7188:6:25","nodeType":"YulIdentifier","src":"7188:6:25"},{"name":"value3","nativeSrc":"7196:6:25","nodeType":"YulIdentifier","src":"7196:6:25"},{"name":"tail_1","nativeSrc":"7204:6:25","nodeType":"YulIdentifier","src":"7204:6:25"}],"functionName":{"name":"abi_encode_string_calldata","nativeSrc":"7161:26:25","nodeType":"YulIdentifier","src":"7161:26:25"},"nativeSrc":"7161:50:25","nodeType":"YulFunctionCall","src":"7161:50:25"},"variableNames":[{"name":"tail","nativeSrc":"7153:4:25","nodeType":"YulIdentifier","src":"7153:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7231:9:25","nodeType":"YulIdentifier","src":"7231:9:25"},{"kind":"number","nativeSrc":"7242:2:25","nodeType":"YulLiteral","src":"7242:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7227:3:25","nodeType":"YulIdentifier","src":"7227:3:25"},"nativeSrc":"7227:18:25","nodeType":"YulFunctionCall","src":"7227:18:25"},{"arguments":[{"name":"value4","nativeSrc":"7251:6:25","nodeType":"YulIdentifier","src":"7251:6:25"},{"kind":"number","nativeSrc":"7259:4:25","nodeType":"YulLiteral","src":"7259:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7247:3:25","nodeType":"YulIdentifier","src":"7247:3:25"},"nativeSrc":"7247:17:25","nodeType":"YulFunctionCall","src":"7247:17:25"}],"functionName":{"name":"mstore","nativeSrc":"7220:6:25","nodeType":"YulIdentifier","src":"7220:6:25"},"nativeSrc":"7220:45:25","nodeType":"YulFunctionCall","src":"7220:45:25"},"nativeSrc":"7220:45:25","nodeType":"YulExpressionStatement","src":"7220:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7285:9:25","nodeType":"YulIdentifier","src":"7285:9:25"},{"kind":"number","nativeSrc":"7296:2:25","nodeType":"YulLiteral","src":"7296:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7281:3:25","nodeType":"YulIdentifier","src":"7281:3:25"},"nativeSrc":"7281:18:25","nodeType":"YulFunctionCall","src":"7281:18:25"},{"arguments":[{"name":"value5","nativeSrc":"7305:6:25","nodeType":"YulIdentifier","src":"7305:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7321:3:25","nodeType":"YulLiteral","src":"7321:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"7326:1:25","nodeType":"YulLiteral","src":"7326:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7317:3:25","nodeType":"YulIdentifier","src":"7317:3:25"},"nativeSrc":"7317:11:25","nodeType":"YulFunctionCall","src":"7317:11:25"},{"kind":"number","nativeSrc":"7330:1:25","nodeType":"YulLiteral","src":"7330:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7313:3:25","nodeType":"YulIdentifier","src":"7313:3:25"},"nativeSrc":"7313:19:25","nodeType":"YulFunctionCall","src":"7313:19:25"}],"functionName":{"name":"and","nativeSrc":"7301:3:25","nodeType":"YulIdentifier","src":"7301:3:25"},"nativeSrc":"7301:32:25","nodeType":"YulFunctionCall","src":"7301:32:25"}],"functionName":{"name":"mstore","nativeSrc":"7274:6:25","nodeType":"YulIdentifier","src":"7274:6:25"},"nativeSrc":"7274:60:25","nodeType":"YulFunctionCall","src":"7274:60:25"},"nativeSrc":"7274:60:25","nodeType":"YulExpressionStatement","src":"7274:60:25"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed","nativeSrc":"6726:614:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6896:9:25","nodeType":"YulTypedName","src":"6896:9:25","type":""},{"name":"value5","nativeSrc":"6907:6:25","nodeType":"YulTypedName","src":"6907:6:25","type":""},{"name":"value4","nativeSrc":"6915:6:25","nodeType":"YulTypedName","src":"6915:6:25","type":""},{"name":"value3","nativeSrc":"6923:6:25","nodeType":"YulTypedName","src":"6923:6:25","type":""},{"name":"value2","nativeSrc":"6931:6:25","nodeType":"YulTypedName","src":"6931:6:25","type":""},{"name":"value1","nativeSrc":"6939:6:25","nodeType":"YulTypedName","src":"6939:6:25","type":""},{"name":"value0","nativeSrc":"6947:6:25","nodeType":"YulTypedName","src":"6947:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6958:4:25","nodeType":"YulTypedName","src":"6958:4:25","type":""}],"src":"6726:614:25"},{"body":{"nativeSrc":"7519:223:25","nodeType":"YulBlock","src":"7519:223:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7536:9:25","nodeType":"YulIdentifier","src":"7536:9:25"},{"kind":"number","nativeSrc":"7547:2:25","nodeType":"YulLiteral","src":"7547:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7529:6:25","nodeType":"YulIdentifier","src":"7529:6:25"},"nativeSrc":"7529:21:25","nodeType":"YulFunctionCall","src":"7529:21:25"},"nativeSrc":"7529:21:25","nodeType":"YulExpressionStatement","src":"7529:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7570:9:25","nodeType":"YulIdentifier","src":"7570:9:25"},{"kind":"number","nativeSrc":"7581:2:25","nodeType":"YulLiteral","src":"7581:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7566:3:25","nodeType":"YulIdentifier","src":"7566:3:25"},"nativeSrc":"7566:18:25","nodeType":"YulFunctionCall","src":"7566:18:25"},{"kind":"number","nativeSrc":"7586:2:25","nodeType":"YulLiteral","src":"7586:2:25","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"7559:6:25","nodeType":"YulIdentifier","src":"7559:6:25"},"nativeSrc":"7559:30:25","nodeType":"YulFunctionCall","src":"7559:30:25"},"nativeSrc":"7559:30:25","nodeType":"YulExpressionStatement","src":"7559:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7609:9:25","nodeType":"YulIdentifier","src":"7609:9:25"},{"kind":"number","nativeSrc":"7620:2:25","nodeType":"YulLiteral","src":"7620:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7605:3:25","nodeType":"YulIdentifier","src":"7605:3:25"},"nativeSrc":"7605:18:25","nodeType":"YulFunctionCall","src":"7605:18:25"},{"hexValue":"53796e7468466163746f72793a20496e646578206f7574206f6620626f756e64","kind":"string","nativeSrc":"7625:34:25","nodeType":"YulLiteral","src":"7625:34:25","type":"","value":"SynthFactory: Index out of bound"}],"functionName":{"name":"mstore","nativeSrc":"7598:6:25","nodeType":"YulIdentifier","src":"7598:6:25"},"nativeSrc":"7598:62:25","nodeType":"YulFunctionCall","src":"7598:62:25"},"nativeSrc":"7598:62:25","nodeType":"YulExpressionStatement","src":"7598:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7680:9:25","nodeType":"YulIdentifier","src":"7680:9:25"},{"kind":"number","nativeSrc":"7691:2:25","nodeType":"YulLiteral","src":"7691:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7676:3:25","nodeType":"YulIdentifier","src":"7676:3:25"},"nativeSrc":"7676:18:25","nodeType":"YulFunctionCall","src":"7676:18:25"},{"hexValue":"73","kind":"string","nativeSrc":"7696:3:25","nodeType":"YulLiteral","src":"7696:3:25","type":"","value":"s"}],"functionName":{"name":"mstore","nativeSrc":"7669:6:25","nodeType":"YulIdentifier","src":"7669:6:25"},"nativeSrc":"7669:31:25","nodeType":"YulFunctionCall","src":"7669:31:25"},"nativeSrc":"7669:31:25","nodeType":"YulExpressionStatement","src":"7669:31:25"},{"nativeSrc":"7709:27:25","nodeType":"YulAssignment","src":"7709:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7721:9:25","nodeType":"YulIdentifier","src":"7721:9:25"},{"kind":"number","nativeSrc":"7732:3:25","nodeType":"YulLiteral","src":"7732:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7717:3:25","nodeType":"YulIdentifier","src":"7717:3:25"},"nativeSrc":"7717:19:25","nodeType":"YulFunctionCall","src":"7717:19:25"},"variableNames":[{"name":"tail","nativeSrc":"7709:4:25","nodeType":"YulIdentifier","src":"7709:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2362954854abec606345926a1e026bdb0343c7dd1d7aef33a453e36a76639980__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7345:397:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7496:9:25","nodeType":"YulTypedName","src":"7496:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7510:4:25","nodeType":"YulTypedName","src":"7510:4:25","type":""}],"src":"7345:397:25"},{"body":{"nativeSrc":"7779:95:25","nodeType":"YulBlock","src":"7779:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7796:1:25","nodeType":"YulLiteral","src":"7796:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7803:3:25","nodeType":"YulLiteral","src":"7803:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"7808:10:25","nodeType":"YulLiteral","src":"7808:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7799:3:25","nodeType":"YulIdentifier","src":"7799:3:25"},"nativeSrc":"7799:20:25","nodeType":"YulFunctionCall","src":"7799:20:25"}],"functionName":{"name":"mstore","nativeSrc":"7789:6:25","nodeType":"YulIdentifier","src":"7789:6:25"},"nativeSrc":"7789:31:25","nodeType":"YulFunctionCall","src":"7789:31:25"},"nativeSrc":"7789:31:25","nodeType":"YulExpressionStatement","src":"7789:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7836:1:25","nodeType":"YulLiteral","src":"7836:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"7839:4:25","nodeType":"YulLiteral","src":"7839:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"7829:6:25","nodeType":"YulIdentifier","src":"7829:6:25"},"nativeSrc":"7829:15:25","nodeType":"YulFunctionCall","src":"7829:15:25"},"nativeSrc":"7829:15:25","nodeType":"YulExpressionStatement","src":"7829:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7860:1:25","nodeType":"YulLiteral","src":"7860:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7863:4:25","nodeType":"YulLiteral","src":"7863:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7853:6:25","nodeType":"YulIdentifier","src":"7853:6:25"},"nativeSrc":"7853:15:25","nodeType":"YulFunctionCall","src":"7853:15:25"},"nativeSrc":"7853:15:25","nodeType":"YulExpressionStatement","src":"7853:15:25"}]},"name":"panic_error_0x32","nativeSrc":"7747:127:25","nodeType":"YulFunctionDefinition","src":"7747:127:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_Vault_$8042__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_d85890c925f1727608cb87d0372ae4768a534a9da9df2e35bf010dc1b05950c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"SynthFactory: Symbol already exi\")\n        mstore(add(headStart, 96), \"sts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7d1a9a13b06cc8aff9ba483a4e13e59e28891d478348833dc1a34b1373ddcc50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"SynthFactory: Name cannot be emp\")\n        mstore(add(headStart, 96), \"ty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c40c49e7556f13eebc7e10cf1b33b114a0b170d19003e10546e347f52e71913__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"SynthFactory: Symbol cannot be e\")\n        mstore(add(headStart, 96), \"mpty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9f5c08208265473fd885ce40580391aab225617aea767cb8f69d6ac8c30c012a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"SynthFactory: Decimals must be b\")\n        mstore(add(headStart, 96), \"etween 1 and 18\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 160))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xff))\n        mstore(add(headStart, 96), and(value5, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), and(value6, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint8_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xff))\n        mstore(add(headStart, 96), and(value5, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2362954854abec606345926a1e026bdb0343c7dd1d7aef33a453e36a76639980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SynthFactory: Index out of bound\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7067":[{"length":32,"start":388},{"length":32,"start":905},{"length":32,"start":1139},{"length":32,"start":1235}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610137578063d9a07bc914610148578063dddde17a1461015b578063f2fde38b1461016c578063fbfa77cf1461017f57600080fd5b806314cd6c6d146100a35780632584b3aa146100f4578063715018a614610107578063734d7a0e146101115780638d015d2214610124575b600080fd5b6100d76100b136600461072e565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d7610102366004610830565b6101a6565b61010f610551565b005b6100d761011f3660046108bf565b610565565b6100d76101323660046108bf565b6105f1565b6000546001600160a01b03166100d7565b6100d76101563660046108d8565b61061b565b6002546040519081526020016100eb565b61010f61017a36600461091a565b610650565b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b60006101b061068e565b60006001600160a01b0316600185856040516101cd92919061094a565b908152604051908190036020019020546001600160a01b0316146102445760405162461bcd60e51b815260206004820152602360248201527f53796e7468466163746f72793a2053796d626f6c20616c72656164792065786960448201526273747360e81b60648201526084015b60405180910390fd5b8461029c5760405162461bcd60e51b815260206004820152602260248201527f53796e7468466163746f72793a204e616d652063616e6e6f7420626520656d70604482015261747960f01b606482015260840161023b565b826102f55760405162461bcd60e51b8152602060048201526024808201527f53796e7468466163746f72793a2053796d626f6c2063616e6e6f7420626520656044820152636d70747960e01b606482015260840161023b565b60008260ff1611801561030c575060128260ff1611155b6103705760405162461bcd60e51b815260206004820152602f60248201527f53796e7468466163746f72793a20446563696d616c73206d757374206265206260448201526e0cae8eecacadc406240c2dcc840627608b1b606482015260840161023b565b600080546001600160a01b0316905060008787878787867f00000000000000000000000000000000000000000000000000000000000000006040516103b49061070b565b6103c49796959493929190610983565b604051809103906000f0801580156103e0573d6000803e3d6000fd5b50905080925082600187876040516103f992919061094a565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031991821617909155600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180548785169216821790556356729cc560e11b825260048201527f00000000000000000000000000000000000000000000000000000000000000009091169063ace5398a90602401600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f4048353daeac164bd3c491159fc34428025f0bd6dec64fb19ed1faf812a0d9bb8a8a8a8a8a8960405161053e969594939291906109d7565b60405180910390a3505095945050505050565b61055961068e565b61056360006106bb565b565b60025460009082106105c35760405162461bcd60e51b815260206004820152602160248201527f53796e7468466163746f72793a20496e646578206f7574206f6620626f756e646044820152607360f81b606482015260840161023b565b600282815481106105d6576105d6610a25565b6000918252602090912001546001600160a01b031692915050565b6002818154811061060157600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001838360405161062f92919061094a565b908152604051908190036020019020546001600160a01b0316905092915050565b61065861068e565b6001600160a01b03811661068257604051631e4fbdf760e01b81526000600482015260240161023b565b61068b816106bb565b50565b6000546001600160a01b031633146105635760405163118cdaa760e01b815233600482015260240161023b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61162780610a3c83390190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561074057600080fd5b813567ffffffffffffffff81111561075757600080fd5b8201601f8101841361076857600080fd5b803567ffffffffffffffff81111561078257610782610718565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107b1576107b1610718565b6040528181528282016020018610156107c957600080fd5b81602084016020830137600091810160200191909152949350505050565b60008083601f8401126107f957600080fd5b50813567ffffffffffffffff81111561081157600080fd5b60208301915083602082850101111561082957600080fd5b9250929050565b60008060008060006060868803121561084857600080fd5b853567ffffffffffffffff81111561085f57600080fd5b61086b888289016107e7565b909650945050602086013567ffffffffffffffff81111561088b57600080fd5b610897888289016107e7565b909450925050604086013560ff811681146108b157600080fd5b809150509295509295909350565b6000602082840312156108d157600080fd5b5035919050565b600080602083850312156108eb57600080fd5b823567ffffffffffffffff81111561090257600080fd5b61090e858286016107e7565b90969095509350505050565b60006020828403121561092c57600080fd5b81356001600160a01b038116811461094357600080fd5b9392505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60a08152600061099760a08301898b61095a565b82810360208401526109aa81888a61095a565b60ff96909616604084015250506001600160a01b0392831660608201529116608090910152949350505050565b6080815260006109eb60808301888a61095a565b82810360208401526109fe81878961095a565b60ff95909516604084015250506001600160a01b0391909116606090910152949350505050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b5060405161162738038061162783398101604081905261002f916103bd565b8484600361003d83826104e9565b50600461004a82826104e9565b5050506001600160a01b0382166100c15760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a20496e697469616c2061646d696e2063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084015b60405180910390fd5b6001600160a01b0381166101305760405162461bcd60e51b815260206004820152603060248201527f53796e746845524332303a204d696e7465722f4275726e65722063616e6e6f7460448201526f206265207a65726f206164647265737360801b60648201526084016100b8565b6007805460ff191660ff851617905561014a6000836101ab565b506101757f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826101ab565b506101a07f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826101ab565b5050505050506105a7565b6000806101b884846101e3565b905080156101da5760008481526006602052604090206101d89084610291565b505b90505b92915050565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166102895760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556102413390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101dd565b5060006101dd565b60006101da836001600160a01b0384166000818152600183016020526040812054610289575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101dd565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261030f57600080fd5b81516001600160401b03811115610328576103286102e8565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610356576103566102e8565b60405281815283820160200185101561036e57600080fd5b60005b8281101561038d57602081860181015183830182015201610371565b506000918101602001919091529392505050565b80516001600160a01b03811681146103b857600080fd5b919050565b600080600080600060a086880312156103d557600080fd5b85516001600160401b038111156103eb57600080fd5b6103f7888289016102fe565b602088015190965090506001600160401b0381111561041557600080fd5b610421888289016102fe565b945050604086015160ff8116811461043857600080fd5b9250610446606087016103a1565b9150610454608087016103a1565b90509295509295909350565b600181811c9082168061047457607f821691505b60208210810361049457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104e457806000526020600020601f840160051c810160208510156104c15750805b601f840160051c820191505b818110156104e157600081556001016104cd565b50505b505050565b81516001600160401b03811115610502576105026102e8565b610516816105108454610460565b8461049a565b6020601f82116001811461054a57600083156105325750848201515b600019600385901b1c1916600184901b1784556104e1565b600084815260208120601f198516915b8281101561057a578785015182556020948501946001909201910161055a565b50848210156105985786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611071806105b66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a3246ad31161007c578063a3246ad314610309578063a9059cbb14610329578063ca15c8731461033c578063d53913931461034f578063d547741f14610376578063dd62ed3e1461038957600080fd5b806370a082311461027f57806379cc6790146102a85780639010d07c146102bb57806391d14854146102e657806395d89b41146102f9578063a217fddf1461030157600080fd5b8063282c51f311610115578063282c51f3146101f55780632f2ff15d1461021c578063313ce5671461023157806336568abe1461024657806340c10f191461025957806342966c681461026c57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063095ea7b31461019a57806318160ddd146101ad57806323b872dd146101bf578063248a9ca3146101d2575b600080fd5b61017061016b366004610da6565b6103c2565b60405190151581526020015b60405180910390f35b61018d6103ed565b60405161017c9190610dd0565b6101706101a8366004610e3a565b61047f565b6002545b60405190815260200161017c565b6101706101cd366004610e64565b610497565b6101b16101e0366004610ea1565b60009081526005602052604090206001015490565b6101b17f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61022f61022a366004610eba565b6104bb565b005b60075460405160ff909116815260200161017c565b61022f610254366004610eba565b6104e6565b61022f610267366004610e3a565b61051e565b61022f61027a366004610ea1565b610552565b6101b161028d366004610ee6565b6001600160a01b031660009081526020819052604090205490565b61022f6102b6366004610e3a565b61055f565b6102ce6102c9366004610f01565b610593565b6040516001600160a01b03909116815260200161017c565b6101706102f4366004610eba565b6105b2565b61018d6105dd565b6101b1600081565b61031c610317366004610ea1565b6105ec565b60405161017c9190610f23565b610170610337366004610e3a565b610606565b6101b161034a366004610ea1565b610614565b6101b17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61022f610384366004610eba565b61062b565b6101b1610397366004610f6f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006001600160e01b03198216635a05180f60e01b14806103e757506103e782610650565b92915050565b6060600380546103fc90610f99565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f99565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60003361048d818585610685565b5060019392505050565b6000336104a5858285610692565b6104b0858585610710565b506001949350505050565b6000828152600560205260409020600101546104d68161076f565b6104e08383610779565b50505050565b6001600160a01b038116331461050f5760405163334bd91960e11b815260040160405180910390fd5b61051982826107ae565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105488161076f565b61051983836107db565b61055c3382610815565b50565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486105898161076f565b610519838361084b565b60008281526006602052604081206105ab9083610860565b9392505050565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546103fc90610f99565b60008181526006602052604090206060906103e79061086c565b60003361048d818585610710565b60008181526006602052604081206103e790610879565b6000828152600560205260409020600101546106468161076f565b6104e083836107ae565b60006001600160e01b03198216637965db0b60e01b14806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b6105198383836001610883565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156104e0578181101561070157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104e084848484036000610883565b6001600160a01b03831661073a57604051634b637e8f60e11b8152600060048201526024016106f8565b6001600160a01b0382166107645760405163ec442f0560e01b8152600060048201526024016106f8565b610519838383610958565b61055c8133610a82565b6000806107868484610abb565b905080156105ab5760008481526006602052604090206107a69084610b4f565b509392505050565b6000806107bb8484610b64565b905080156105ab5760008481526006602052604090206107a69084610bd1565b6001600160a01b0382166108055760405163ec442f0560e01b8152600060048201526024016106f8565b61081160008383610958565b5050565b6001600160a01b03821661083f57604051634b637e8f60e11b8152600060048201526024016106f8565b61081182600083610958565b610856823383610692565b6108118282610815565b60006105ab8383610be6565b606060006105ab83610c10565b60006103e7825490565b6001600160a01b0384166108ad5760405163e602df0560e01b8152600060048201526024016106f8565b6001600160a01b0383166108d757604051634a1406b160e11b8152600060048201526024016106f8565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104e057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161094a91815260200190565b60405180910390a350505050565b6001600160a01b0383166109835780600260008282546109789190610fe9565b909155506109f59050565b6001600160a01b038316600090815260208190526040902054818110156109d65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106f8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1157600280548290039055610a30565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7591815260200190565b60405180910390a3505050565b610a8c82826105b2565b6108115760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106f8565b6000610ac783836105b2565b610b475760008381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610aff3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103e7565b5060006103e7565b60006105ab836001600160a01b038416610c6c565b6000610b7083836105b2565b15610b475760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103e7565b60006105ab836001600160a01b038416610cb3565b6000826000018281548110610bfd57610bfd610ffc565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c6057602002820191906000526020600020905b815481526020019060010190808311610c4c575b50505050509050919050565b6000818152600183016020526040812054610b47575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e7565b60008181526001830160205260408120548015610d9c576000610cd7600183611012565b8554909150600090610ceb90600190611012565b9050808214610d50576000866000018281548110610d0b57610d0b610ffc565b9060005260206000200154905080876000018481548110610d2e57610d2e610ffc565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6157610d61611025565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103e7565b60009150506103e7565b600060208284031215610db857600080fd5b81356001600160e01b0319811681146105ab57600080fd5b602081526000825180602084015260005b81811015610dfe5760208186018101516040868401015201610de1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e3557600080fd5b919050565b60008060408385031215610e4d57600080fd5b610e5683610e1e565b946020939093013593505050565b600080600060608486031215610e7957600080fd5b610e8284610e1e565b9250610e9060208501610e1e565b929592945050506040919091013590565b600060208284031215610eb357600080fd5b5035919050565b60008060408385031215610ecd57600080fd5b82359150610edd60208401610e1e565b90509250929050565b600060208284031215610ef857600080fd5b6105ab82610e1e565b60008060408385031215610f1457600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015610f645783516001600160a01b0316835260209384019390920191600101610f3d565b509095945050505050565b60008060408385031215610f8257600080fd5b610f8b83610e1e565b9150610edd60208401610e1e565b600181811c90821680610fad57607f821691505b602082108103610fcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103e7576103e7610fd3565b634e487b7160e01b600052603260045260246000fd5b818103818111156103e7576103e7610fd3565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d355b8f192c5d82ea003a2bd0ea99dd16d5c2e7b93b60cf8d1aa85b68840a4d564736f6c634300081c0033a26469706673582212200f4cdc97e0615edd18add9d1deee3a6b13d7c45d2a310ce55888ae68707d1ba964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xD9A07BC9 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xDDDDE17A EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14CD6C6D EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2584B3AA EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x734D7A0E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x8D015D22 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEB JUMP JUMPDEST PUSH2 0x10F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0xD7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A2053796D626F6C20616C726561647920657869 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x737473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A204E616D652063616E6E6F7420626520656D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7479 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST DUP3 PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A2053796D626F6C2063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x30C JUMPI POP PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A20446563696D616C73206D7573742062652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0xCAE8EECACADC406240C2DCC840627 PUSH1 0x8B SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP7 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x3C4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 SWAP3 POP DUP3 PUSH1 0x1 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD DUP8 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH4 0x56729CC5 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xACE5398A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4048353DAEAC164BD3C491159FC34428025F0BD6DEC64FB19ED1FAF812A0D9BB DUP11 DUP11 DUP11 DUP11 DUP11 DUP10 PUSH1 0x40 MLOAD PUSH2 0x53E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x559 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x563 PUSH1 0x0 PUSH2 0x6BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E7468466163746F72793A20496E646578206F7574206F6620626F756E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5D6 JUMPI PUSH2 0x5D6 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x62F SWAP3 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x658 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x68B DUP2 PUSH2 0x6BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1627 DUP1 PUSH2 0xA3C DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86B DUP9 DUP3 DUP10 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x897 DUP9 DUP3 DUP10 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90E DUP6 DUP3 DUP7 ADD PUSH2 0x7E7 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x997 PUSH1 0xA0 DUP4 ADD DUP10 DUP12 PUSH2 0x95A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x9AA DUP2 DUP9 DUP11 PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9EB PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x95A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x9FE DUP2 DUP8 DUP10 PUSH2 0x95A JUMP JUMPDEST PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1627 CODESIZE SUB DUP1 PUSH2 0x1627 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP5 DUP5 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x4E9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A20496E697469616C2061646D696E2063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53796E746845524332303A204D696E7465722F4275726E65722063616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x206265207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH2 0x14A PUSH1 0x0 DUP4 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x175 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP PUSH2 0x1A0 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0x1AB JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B8 DUP5 DUP5 PUSH2 0x1E3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1D8 SWAP1 DUP5 PUSH2 0x291 JUMP JUMPDEST POP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x289 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x241 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1DD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x289 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH2 0x328 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x371 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F7 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x421 DUP9 DUP3 DUP10 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x446 PUSH1 0x60 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x454 PUSH1 0x80 DUP8 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x474 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x494 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4C1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x502 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x510 DUP5 SLOAD PUSH2 0x460 JUMP JUMPDEST DUP5 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54A JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x532 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x57A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x55A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x598 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1071 DUP1 PUSH2 0x5B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA3246AD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x282C51F3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x22F PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH2 0x22F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x1B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xEA1 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH2 0x3E7 DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4A5 DUP6 DUP3 DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x4B0 DUP6 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4D6 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP3 DUP3 PUSH2 0x7AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x548 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x55C CALLER DUP3 PUSH2 0x815 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x589 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x5AB SWAP1 DUP4 PUSH2 0x860 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x3E7 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x48D DUP2 DUP6 DUP6 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3E7 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x646 DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x4E0 DUP4 DUP4 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x4E0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E0 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x519 DUP4 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x55C DUP2 CALLER PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x786 DUP5 DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xB4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7BB DUP5 DUP5 PUSH2 0xB64 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x7A6 SWAP1 DUP5 PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 PUSH1 0x0 DUP4 DUP4 PUSH2 0x958 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x811 DUP3 PUSH1 0x0 DUP4 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x856 DUP3 CALLER DUP4 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x811 DUP3 DUP3 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 DUP4 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E7 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x94A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x983 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x9F5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA8C DUP3 DUP3 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAFF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP4 DUP4 PUSH2 0x5B2 JUMP JUMPDEST ISZERO PUSH2 0xB47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBFD JUMPI PUSH2 0xBFD PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC4C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB47 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xD9C JUMPI PUSH1 0x0 PUSH2 0xCD7 PUSH1 0x1 DUP4 PUSH2 0x1012 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xCEB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0xD50 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0B PUSH2 0xFFC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD61 JUMPI PUSH2 0xD61 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xDE1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE90 PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5AB DUP3 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF3D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xEDD PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0xFD3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SSTORE 0xB8 CALL SWAP3 0xC5 0xD8 0x2E LOG0 SUB LOG2 0xBD 0xE 0xA9 SWAP14 0xD1 PUSH14 0x5C2E7B93B60CF8D1AA85B68840A4 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x4C 0xDC SWAP8 0xE0 PUSH2 0x5EDD XOR 0xAD 0xD9 0xD1 0xDE 0xEE GASPRICE PUSH12 0x13D7C45D2A310CE55888AE68 PUSH17 0x7D1BA964736F6C634300081C0033000000 ","sourceMap":"247:4825:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;431:47:23;;;;;;-1:-1:-1;;;;;1260:32:25;;;1242:51;;1230:2;1215:18;431:47:23;;;;;;;;1537:2191;;;;;;:::i;:::-;;:::i;2293:101:2:-;;;:::i;:::-;;4207:192:23;;;;;;:::i;:::-;;:::i;570:26::-;;;;;;:::i;:::-;;:::i;1638:85:2:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:2;1638:85;;3967:127:23;;;;;;:::i;:::-;;:::i;4100:101::-;4178:9;:16;4100:101;;3282:25:25;;;3270:2;3255:18;4100:101:23;3136:177:25;2543:215:2;;;;;;:::i;:::-;;:::i;286:28:23:-;;;;;1537:2191;1679:28;1531:13:2;:11;:13::i;:::-;1760:1:23::1;-1:-1:-1::0;;;;;1727:35:23::1;:13;1741:6;;1727:21;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;1727:21:23::1;:35;1719:83;;;::::0;-1:-1:-1;;;1719:83:23;;4311:2:25;1719:83:23::1;::::0;::::1;4293:21:25::0;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;-1:-1:-1;;;4440:18:25;;;4433:33;4483:19;;1719:83:23::1;;;;;;;;;1820:22:::0;1812:69:::1;;;::::0;-1:-1:-1;;;1812:69:23;;4715:2:25;1812:69:23::1;::::0;::::1;4697:21:25::0;4754:2;4734:18;;;4727:30;4793:34;4773:18;;;4766:62;-1:-1:-1;;;4844:18:25;;;4837:32;4886:19;;1812:69:23::1;4513:398:25::0;1812:69:23::1;1899:24:::0;1891:73:::1;;;::::0;-1:-1:-1;;;1891:73:23;;5118:2:25;1891:73:23::1;::::0;::::1;5100:21:25::0;5157:2;5137:18;;;5130:30;5196:34;5176:18;;;5169:62;-1:-1:-1;;;5247:18:25;;;5240:34;5291:19;;1891:73:23::1;4916:400:25::0;1891:73:23::1;1994:1;1982:9;:13;;;:32;;;;;2012:2;1999:9;:15;;;;1982:32;1974:92;;;::::0;-1:-1:-1;;;1974:92:23;;5523:2:25;1974:92:23::1;::::0;::::1;5505:21:25::0;5562:2;5542:18;;;5535:30;5601:34;5581:18;;;5574:62;-1:-1:-1;;;5652:18:25;;;5645:45;5707:19;;1974:92:23::1;5321:411:25::0;1974:92:23::1;2285:18;1710:6:2::0;;-1:-1:-1;;;;;1710:6:2;2285:28:23::1;;2382:19;2419:4;;2425:6;;2433:9;2444:10;2464:5;2404:67;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2382:89;;2512:8;2481:40;;2586:20;2562:13;2576:6;;2562:21;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:44;;-1:-1:-1;;;;;2562:44:23;;::::1;-1:-1:-1::0;;;;;;2562:44:23;;::::1;;::::0;;;2616:9:::1;:36:::0;;-1:-1:-1;2616:36:23;::::1;::::0;;-1:-1:-1;2616:36:23;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;3540:41:23;;::::1;::::0;::::1;1242:51:25::0;3540:5:23::1;:19:::0;;::::1;::::0;::::1;::::0;1215:18:25;;3540:41:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3665:5;-1:-1:-1::0;;;;;3597:87:23::1;3610:20;-1:-1:-1::0;;;;;3597:87:23::1;;3632:4;;3638:6;;3646:9;3673:10;3597:87;;;;;;;;;;;:::i;:::-;;;;;;;;3694:27;;1537:2191:::0;;;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4207:192:23:-;4305:9;:16;4270:7;;4297:24;;4289:70;;;;-1:-1:-1;;;4289:70:23;;7547:2:25;4289:70:23;;;7529:21:25;7586:2;7566:18;;;7559:30;7625:34;7605:18;;;7598:62;-1:-1:-1;;;7676:18:25;;;7669:31;7717:19;;4289:70:23;7345:397:25;4289:70:23;4376:9;4386:5;4376:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4376:16:23;;4207:192;-1:-1:-1;;4207:192:23:o;570:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;570:26:23;;-1:-1:-1;570:26:23;:::o;3967:127::-;4040:7;4066:13;4080:6;;4066:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4066:21:23;;-1:-1:-1;3967:127:23;;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:2;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:2;;2700:1:::1;2672:31;::::0;::::1;1242:51:25::0;1215:18;;2672:31:2::1;1096:203:25::0;2623:91:2::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:2;735:10:12;1855:23:2;1851:101;;1901:40;;-1:-1:-1;;;1901:40:2;;735:10:12;1901:40:2;;;1242:51:25;1215:18;;1901:40:2;1096:203:25;2912:187:2;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:945;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;357:18;349:6;346:30;343:50;;;389:1;386;379:12;343:50;412:22;;465:4;457:13;;453:27;-1:-1:-1;443:55:25;;494:1;491;484:12;443:55;534:2;521:16;560:18;552:6;549:30;546:56;;;582:18;;:::i;:::-;631:2;625:9;723:2;685:17;;-1:-1:-1;;681:31:25;;;714:2;677:40;673:54;661:67;;758:18;743:34;;779:22;;;740:62;737:88;;;805:18;;:::i;:::-;841:2;834:22;865;;;906:15;;;923:2;902:24;899:37;-1:-1:-1;896:57:25;;;949:1;946;939:12;896:57;1005:6;1000:2;996;992:11;987:2;979:6;975:15;962:50;1058:1;1032:19;;;1053:2;1028:28;1021:39;;;;1036:6;146:945;-1:-1:-1;;;;146:945:25:o;1304:348::-;1356:8;1366:6;1420:3;1413:4;1405:6;1401:17;1397:27;1387:55;;1438:1;1435;1428:12;1387:55;-1:-1:-1;1461:20:25;;1504:18;1493:30;;1490:50;;;1536:1;1533;1526:12;1490:50;1573:4;1565:6;1561:17;1549:29;;1625:3;1618:4;1609:6;1601;1597:19;1593:30;1590:39;1587:59;;;1642:1;1639;1632:12;1587:59;1304:348;;;;;:::o;1657:873::-;1756:6;1764;1772;1780;1788;1841:2;1829:9;1820:7;1816:23;1812:32;1809:52;;;1857:1;1854;1847:12;1809:52;1897:9;1884:23;1930:18;1922:6;1919:30;1916:50;;;1962:1;1959;1952:12;1916:50;2001:59;2052:7;2043:6;2032:9;2028:22;2001:59;:::i;:::-;2079:8;;-1:-1:-1;1975:85:25;-1:-1:-1;;2167:2:25;2152:18;;2139:32;2196:18;2183:32;;2180:52;;;2228:1;2225;2218:12;2180:52;2267:61;2320:7;2309:8;2298:9;2294:24;2267:61;:::i;:::-;2347:8;;-1:-1:-1;2241:87:25;-1:-1:-1;;2432:2:25;2417:18;;2404:32;2476:4;2465:16;;2455:27;;2445:55;;2496:1;2493;2486:12;2445:55;2519:5;2509:15;;;1657:873;;;;;;;;:::o;2535:180::-;2594:6;2647:2;2635:9;2626:7;2622:23;2618:32;2615:52;;;2663:1;2660;2653:12;2615:52;-1:-1:-1;2686:23:25;;2535:180;-1:-1:-1;2535:180:25:o;2720:411::-;2791:6;2799;2852:2;2840:9;2831:7;2827:23;2823:32;2820:52;;;2868:1;2865;2858:12;2820:52;2908:9;2895:23;2941:18;2933:6;2930:30;2927:50;;;2973:1;2970;2963:12;2927:50;3012:59;3063:7;3054:6;3043:9;3039:22;3012:59;:::i;:::-;3090:8;;2986:85;;-1:-1:-1;2720:411:25;-1:-1:-1;;;;2720:411:25:o;3318:286::-;3377:6;3430:2;3418:9;3409:7;3405:23;3401:32;3398:52;;;3446:1;3443;3436:12;3398:52;3472:23;;-1:-1:-1;;;;;3524:31:25;;3514:42;;3504:70;;3570:1;3567;3560:12;3504:70;3593:5;3318:286;-1:-1:-1;;;3318:286:25:o;3831:273::-;4016:6;4008;4003:3;3990:33;3972:3;4042:16;;4067:13;;;4042:16;3831:273;-1:-1:-1;3831:273:25:o;5737:267::-;5826:6;5821:3;5814:19;5878:6;5871:5;5864:4;5859:3;5855:14;5842:43;-1:-1:-1;5930:1:25;5905:16;;;5923:4;5901:27;;;5894:38;;;;5986:2;5965:15;;;-1:-1:-1;;5961:29:25;5952:39;;;5948:50;;5737:267::o;6009:712::-;6306:3;6295:9;6288:22;6269:4;6333:63;6391:3;6380:9;6376:19;6368:6;6360;6333:63;:::i;:::-;6444:9;6436:6;6432:22;6427:2;6416:9;6412:18;6405:50;6472;6515:6;6507;6499;6472:50;:::i;:::-;6570:4;6558:17;;;;6553:2;6538:18;;6531:45;-1:-1:-1;;;;;;;6612:32:25;;;6607:2;6592:18;;6585:60;6682:32;;6676:3;6661:19;;;6654:61;6464:58;6009:712;-1:-1:-1;;;;6009:712:25:o;6726:614::-;6995:3;6984:9;6977:22;6958:4;7022:63;7080:3;7069:9;7065:19;7057:6;7049;7022:63;:::i;:::-;7133:9;7125:6;7121:22;7116:2;7105:9;7101:18;7094:50;7161;7204:6;7196;7188;7161:50;:::i;:::-;7259:4;7247:17;;;;7242:2;7227:18;;7220:45;-1:-1:-1;;;;;;;7301:32:25;;;;7296:2;7281:18;;;7274:60;7153:58;6726:614;-1:-1:-1;;;;6726:614:25:o;7747:127::-;7808:10;7803:3;7799:20;7796:1;7789:31;7839:4;7836:1;7829:15;7863:4;7860:1;7853:15"},"methodIdentifiers":{"allSynths(uint256)":"8d015d22","createSynth(string,string,uint8)":"2584b3aa","getAllSynthsCount()":"dddde17a","getSynthAtIndex(uint256)":"734d7a0e","getSynthBySymbol(string)":"d9a07bc9","owner()":"8da5cb5b","renounceOwnership()":"715018a6","synthBySymbol(string)":"14cd6c6d","transferOwnership(address)":"f2fde38b","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adminForSynth\",\"type\":\"address\"}],\"name\":\"SynthCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSynths\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"createSynth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"synthContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSynthsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSynthAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getSynthBySymbol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"synthBySymbol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createSynth(string,string,uint8)\":{\"details\":\"Creates a new SynthERC20 token, grants minting/burning roles to the Vault,      and registers it with the Vault.\",\"params\":{\"decimals_\":\"The number of decimals for the token Only callable by the owner of this factory (likely deployer initially, then can be DAO/multisig).\",\"name\":\"The name of the synthetic token (e.g., \\\"Synthetic Bitcoin\\\")\",\"symbol\":\"The symbol of the synthetic token (e.g., \\\"sBTC\\\")\"}},\"getSynthBySymbol(string)\":{\"details\":\"Retrieves the address of a synth contract by its symbol.\",\"params\":{\"symbol\":\"The symbol of the synthetic token (e.g., \\\"sBTC\\\")\"},\"returns\":{\"_0\":\"The address of the synth contract, or address(0) if not found.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SynthFactory.sol\":\"SynthFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb54d1b001fab4e6ed9fa6d70928ed13356913b0a63dcc56ac5d95c83de66136d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa06c427539f9298e0a8c3be712f876d6907eaeb03f2d8968d70b1cc798aecf\",\"dweb:/ipfs/QmdefyZfpkqWbBSUMtL8wXwoNJYeyAoKDMjTtxXRYbgj1f\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/CXPTToken.sol\":{\"keccak256\":\"0xf7c1cf6f4cd0b1eef4e07975a4837b59056bac28c074135b3b96447db5c5f7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919427838950b573448476b71320ad0d91f3246ccbd41fe333608a77df35c247\",\"dweb:/ipfs/QmUa2z4XdeEzNRWwWytDin9ijMp4pL3WHTpscTHo2JbVzc\"]},\"contracts/SynthERC20.sol\":{\"keccak256\":\"0x4e2a0438891bf54b75fa6c4fd7857b6049086476f26cf35e6d141c4947bcf4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15eca5afb3c8802f961804584a3f174fbfed44320c9c4a5e8a58bdeb96c539c\",\"dweb:/ipfs/QmQurwf5qgFgfxgak1fN6S5XcDaz8QDrMBAz8BMxd7dcyK\"]},\"contracts/SynthFactory.sol\":{\"keccak256\":\"0x38a622694521c87540511b72470fbfb495214aebbec52e6ae8bd92623813e754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0601cce9af51eb8240f4aba181b14675759756fed63bae7faa10b984542eb395\",\"dweb:/ipfs/QmPBkYYcAXsvb75GaHF5TG9nKD7kcBW89xSRVPHmzBT6n9\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0x41db37f809850ba658521437d31b0501f3bad6beed39f5d293769ba1ba220e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31aab0ccddd7cab13800546e05e6eb3b71c05065818022b48e047d582eb64f9f\",\"dweb:/ipfs/QmTyTKXgaxu32U3kCiTX92ugjcMsTUSVaRP6XynBoQZjMe\"]}},\"version\":1}"}},"contracts/Vault.sol":{"ISynthERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burnFrom(address,uint256)":"79cc6790","mint(address,uint256)":"40c10f19","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"ISynthERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb54d1b001fab4e6ed9fa6d70928ed13356913b0a63dcc56ac5d95c83de66136d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa06c427539f9298e0a8c3be712f876d6907eaeb03f2d8968d70b1cc798aecf\",\"dweb:/ipfs/QmdefyZfpkqWbBSUMtL8wXwoNJYeyAoKDMjTtxXRYbgj1f\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/CXPTToken.sol\":{\"keccak256\":\"0xf7c1cf6f4cd0b1eef4e07975a4837b59056bac28c074135b3b96447db5c5f7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919427838950b573448476b71320ad0d91f3246ccbd41fe333608a77df35c247\",\"dweb:/ipfs/QmUa2z4XdeEzNRWwWytDin9ijMp4pL3WHTpscTHo2JbVzc\"]},\"contracts/SynthERC20.sol\":{\"keccak256\":\"0x4e2a0438891bf54b75fa6c4fd7857b6049086476f26cf35e6d141c4947bcf4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15eca5afb3c8802f961804584a3f174fbfed44320c9c4a5e8a58bdeb96c539c\",\"dweb:/ipfs/QmQurwf5qgFgfxgak1fN6S5XcDaz8QDrMBAz8BMxd7dcyK\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0x41db37f809850ba658521437d31b0501f3bad6beed39f5d293769ba1ba220e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31aab0ccddd7cab13800546e05e6eb3b71c05065818022b48e047d582eb64f9f\",\"dweb:/ipfs/QmTyTKXgaxu32U3kCiTX92ugjcMsTUSVaRP6XynBoQZjMe\"]}},\"version\":1}"},"Vault":{"abi":[{"inputs":[{"internalType":"address","name":"_usdcAddress","type":"address"},{"internalType":"address","name":"_cxptTokenAddress","type":"address"},{"internalType":"address","name":"_coreAddress","type":"address"},{"internalType":"address","name":"_gatewayAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcAmount","type":"uint256"}],"name":"DepositedUSDC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcFeeAmount","type":"uint256"}],"name":"FeesRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcAmount","type":"uint256"}],"name":"FeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":true,"internalType":"address","name":"sAssetContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"sAssetAmountBurned","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdcAmountReceived","type":"uint256"}],"name":"SAssetToUSDCExchanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":true,"internalType":"address","name":"synthContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"sAssetAmount","type":"uint256"}],"name":"SynthDepositedToVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"registrar","type":"address"},{"indexed":true,"internalType":"address","name":"synthContract","type":"address"}],"name":"SynthRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":true,"internalType":"address","name":"synthContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"sAssetAmount","type":"uint256"}],"name":"SynthWithdrawnFromVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":true,"internalType":"address","name":"sAssetContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcAmountSpent","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sAssetAmountMinted","type":"uint256"}],"name":"USDCToSAssetExchanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"cxptAmount","type":"uint256"}],"name":"WithdrawnCXPT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"coreAddress","type":"address"},{"indexed":true,"internalType":"address","name":"userWallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcAmount","type":"uint256"}],"name":"WithdrawnUSDC","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CORE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GATEWAY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cxptToken","outputs":[{"internalType":"contract CXPTToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"address","name":"synthContract","type":"address"},{"internalType":"uint256","name":"sAssetAmount","type":"uint256"}],"name":"depositSynthToVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"uint256","name":"usdcAmount","type":"uint256"}],"name":"depositUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"address","name":"sAssetContract","type":"address"},{"internalType":"uint256","name":"sAssetAmountToSpend","type":"uint256"},{"internalType":"uint256","name":"usdcAmountToCredit","type":"uint256"}],"name":"exchangeSAssetToUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"address","name":"sAssetContract","type":"address"},{"internalType":"uint256","name":"usdcAmountToSpend","type":"uint256"},{"internalType":"uint256","name":"sAssetAmountToMint","type":"uint256"}],"name":"exchangeUSDCToSAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCXPTTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMembers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDCTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isRegisteredSynth","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"usdcFeeAmount","type":"uint256"}],"name":"recordFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"synthContract","type":"address"}],"name":"registerSynth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFeesCollectedUSDC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdcToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"withdrawAsCxpt","type":"bool"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"usdcAmount","type":"uint256"}],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userWallet","type":"address"},{"internalType":"address","name":"synthContract","type":"address"},{"internalType":"uint256","name":"sAssetAmount","type":"uint256"}],"name":"withdrawSynthFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7502":{"entryPoint":null,"id":7502,"parameterSlots":4,"returnSlots":0},"@_add_6235":{"entryPoint":null,"id":6235,"parameterSlots":2,"returnSlots":1},"@_contains_6381":{"entryPoint":null,"id":6381,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":621,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_651":{"entryPoint":565,"id":651,"parameterSlots":2,"returnSlots":1},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@add_6591":{"entryPoint":791,"id":6591,"parameterSlots":2,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory":{"entryPoint":906,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_stringliteral_c3fe1be505b000346304c811dc1968719aa106f725a15863d87db884f593cd83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cabb85905726238a61108ff7db33a260b54600229dbc1fcb2b45dcc15ee14228__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4143c608e759ac0a10480b0b64c5faf7bc609465f4d47050750e80b86c03c7e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc3ef930b84225a3d455e689feeef2f0f8eea2781e2791d7b43706604fe7b178__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:2089:25","nodeType":"YulBlock","src":"0:2089:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"74:117:25","nodeType":"YulBlock","src":"74:117:25","statements":[{"nativeSrc":"84:22:25","nodeType":"YulAssignment","src":"84:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:25","nodeType":"YulIdentifier","src":"99:6:25"}],"functionName":{"name":"mload","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"},"nativeSrc":"93:13:25","nodeType":"YulFunctionCall","src":"93:13:25"},"variableNames":[{"name":"value","nativeSrc":"84:5:25","nodeType":"YulIdentifier","src":"84:5:25"}]},{"body":{"nativeSrc":"169:16:25","nodeType":"YulBlock","src":"169:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:25","nodeType":"YulLiteral","src":"178:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:25","nodeType":"YulLiteral","src":"181:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:25","nodeType":"YulIdentifier","src":"171:6:25"},"nativeSrc":"171:12:25","nodeType":"YulFunctionCall","src":"171:12:25"},"nativeSrc":"171:12:25","nodeType":"YulExpressionStatement","src":"171:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:25","nodeType":"YulIdentifier","src":"128:5:25"},{"arguments":[{"name":"value","nativeSrc":"139:5:25","nodeType":"YulIdentifier","src":"139:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:25","nodeType":"YulLiteral","src":"154:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:25","nodeType":"YulLiteral","src":"159:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:25","nodeType":"YulIdentifier","src":"150:3:25"},"nativeSrc":"150:11:25","nodeType":"YulFunctionCall","src":"150:11:25"},{"kind":"number","nativeSrc":"163:1:25","nodeType":"YulLiteral","src":"163:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:25","nodeType":"YulIdentifier","src":"146:3:25"},"nativeSrc":"146:19:25","nodeType":"YulFunctionCall","src":"146:19:25"}],"functionName":{"name":"and","nativeSrc":"135:3:25","nodeType":"YulIdentifier","src":"135:3:25"},"nativeSrc":"135:31:25","nodeType":"YulFunctionCall","src":"135:31:25"}],"functionName":{"name":"eq","nativeSrc":"125:2:25","nodeType":"YulIdentifier","src":"125:2:25"},"nativeSrc":"125:42:25","nodeType":"YulFunctionCall","src":"125:42:25"}],"functionName":{"name":"iszero","nativeSrc":"118:6:25","nodeType":"YulIdentifier","src":"118:6:25"},"nativeSrc":"118:50:25","nodeType":"YulFunctionCall","src":"118:50:25"},"nativeSrc":"115:70:25","nodeType":"YulIf","src":"115:70:25"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:25","nodeType":"YulTypedName","src":"53:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:25","nodeType":"YulTypedName","src":"64:5:25","type":""}],"src":"14:177:25"},{"body":{"nativeSrc":"328:332:25","nodeType":"YulBlock","src":"328:332:25","statements":[{"body":{"nativeSrc":"375:16:25","nodeType":"YulBlock","src":"375:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"384:1:25","nodeType":"YulLiteral","src":"384:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"387:1:25","nodeType":"YulLiteral","src":"387:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"377:6:25","nodeType":"YulIdentifier","src":"377:6:25"},"nativeSrc":"377:12:25","nodeType":"YulFunctionCall","src":"377:12:25"},"nativeSrc":"377:12:25","nodeType":"YulExpressionStatement","src":"377:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"349:7:25","nodeType":"YulIdentifier","src":"349:7:25"},{"name":"headStart","nativeSrc":"358:9:25","nodeType":"YulIdentifier","src":"358:9:25"}],"functionName":{"name":"sub","nativeSrc":"345:3:25","nodeType":"YulIdentifier","src":"345:3:25"},"nativeSrc":"345:23:25","nodeType":"YulFunctionCall","src":"345:23:25"},{"kind":"number","nativeSrc":"370:3:25","nodeType":"YulLiteral","src":"370:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"341:3:25","nodeType":"YulIdentifier","src":"341:3:25"},"nativeSrc":"341:33:25","nodeType":"YulFunctionCall","src":"341:33:25"},"nativeSrc":"338:53:25","nodeType":"YulIf","src":"338:53:25"},{"nativeSrc":"400:50:25","nodeType":"YulAssignment","src":"400:50:25","value":{"arguments":[{"name":"headStart","nativeSrc":"440:9:25","nodeType":"YulIdentifier","src":"440:9:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"410:29:25","nodeType":"YulIdentifier","src":"410:29:25"},"nativeSrc":"410:40:25","nodeType":"YulFunctionCall","src":"410:40:25"},"variableNames":[{"name":"value0","nativeSrc":"400:6:25","nodeType":"YulIdentifier","src":"400:6:25"}]},{"nativeSrc":"459:59:25","nodeType":"YulAssignment","src":"459:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"503:9:25","nodeType":"YulIdentifier","src":"503:9:25"},{"kind":"number","nativeSrc":"514:2:25","nodeType":"YulLiteral","src":"514:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"499:3:25","nodeType":"YulIdentifier","src":"499:3:25"},"nativeSrc":"499:18:25","nodeType":"YulFunctionCall","src":"499:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"469:29:25","nodeType":"YulIdentifier","src":"469:29:25"},"nativeSrc":"469:49:25","nodeType":"YulFunctionCall","src":"469:49:25"},"variableNames":[{"name":"value1","nativeSrc":"459:6:25","nodeType":"YulIdentifier","src":"459:6:25"}]},{"nativeSrc":"527:59:25","nodeType":"YulAssignment","src":"527:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"571:9:25","nodeType":"YulIdentifier","src":"571:9:25"},{"kind":"number","nativeSrc":"582:2:25","nodeType":"YulLiteral","src":"582:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"567:3:25","nodeType":"YulIdentifier","src":"567:3:25"},"nativeSrc":"567:18:25","nodeType":"YulFunctionCall","src":"567:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"537:29:25","nodeType":"YulIdentifier","src":"537:29:25"},"nativeSrc":"537:49:25","nodeType":"YulFunctionCall","src":"537:49:25"},"variableNames":[{"name":"value2","nativeSrc":"527:6:25","nodeType":"YulIdentifier","src":"527:6:25"}]},{"nativeSrc":"595:59:25","nodeType":"YulAssignment","src":"595:59:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"639:9:25","nodeType":"YulIdentifier","src":"639:9:25"},{"kind":"number","nativeSrc":"650:2:25","nodeType":"YulLiteral","src":"650:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"635:3:25","nodeType":"YulIdentifier","src":"635:3:25"},"nativeSrc":"635:18:25","nodeType":"YulFunctionCall","src":"635:18:25"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"605:29:25","nodeType":"YulIdentifier","src":"605:29:25"},"nativeSrc":"605:49:25","nodeType":"YulFunctionCall","src":"605:49:25"},"variableNames":[{"name":"value3","nativeSrc":"595:6:25","nodeType":"YulIdentifier","src":"595:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory","nativeSrc":"196:464:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"270:9:25","nodeType":"YulTypedName","src":"270:9:25","type":""},{"name":"dataEnd","nativeSrc":"281:7:25","nodeType":"YulTypedName","src":"281:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"293:6:25","nodeType":"YulTypedName","src":"293:6:25","type":""},{"name":"value1","nativeSrc":"301:6:25","nodeType":"YulTypedName","src":"301:6:25","type":""},{"name":"value2","nativeSrc":"309:6:25","nodeType":"YulTypedName","src":"309:6:25","type":""},{"name":"value3","nativeSrc":"317:6:25","nodeType":"YulTypedName","src":"317:6:25","type":""}],"src":"196:464:25"},{"body":{"nativeSrc":"839:177:25","nodeType":"YulBlock","src":"839:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"856:9:25","nodeType":"YulIdentifier","src":"856:9:25"},{"kind":"number","nativeSrc":"867:2:25","nodeType":"YulLiteral","src":"867:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"849:6:25","nodeType":"YulIdentifier","src":"849:6:25"},"nativeSrc":"849:21:25","nodeType":"YulFunctionCall","src":"849:21:25"},"nativeSrc":"849:21:25","nodeType":"YulExpressionStatement","src":"849:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"890:9:25","nodeType":"YulIdentifier","src":"890:9:25"},{"kind":"number","nativeSrc":"901:2:25","nodeType":"YulLiteral","src":"901:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"886:3:25","nodeType":"YulIdentifier","src":"886:3:25"},"nativeSrc":"886:18:25","nodeType":"YulFunctionCall","src":"886:18:25"},{"kind":"number","nativeSrc":"906:2:25","nodeType":"YulLiteral","src":"906:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"879:6:25","nodeType":"YulIdentifier","src":"879:6:25"},"nativeSrc":"879:30:25","nodeType":"YulFunctionCall","src":"879:30:25"},"nativeSrc":"879:30:25","nodeType":"YulExpressionStatement","src":"879:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"929:9:25","nodeType":"YulIdentifier","src":"929:9:25"},{"kind":"number","nativeSrc":"940:2:25","nodeType":"YulLiteral","src":"940:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"925:3:25","nodeType":"YulIdentifier","src":"925:3:25"},"nativeSrc":"925:18:25","nodeType":"YulFunctionCall","src":"925:18:25"},{"hexValue":"5661756c743a20496e76616c696420555344432061646472657373","kind":"string","nativeSrc":"945:29:25","nodeType":"YulLiteral","src":"945:29:25","type":"","value":"Vault: Invalid USDC address"}],"functionName":{"name":"mstore","nativeSrc":"918:6:25","nodeType":"YulIdentifier","src":"918:6:25"},"nativeSrc":"918:57:25","nodeType":"YulFunctionCall","src":"918:57:25"},"nativeSrc":"918:57:25","nodeType":"YulExpressionStatement","src":"918:57:25"},{"nativeSrc":"984:26:25","nodeType":"YulAssignment","src":"984:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"996:9:25","nodeType":"YulIdentifier","src":"996:9:25"},{"kind":"number","nativeSrc":"1007:2:25","nodeType":"YulLiteral","src":"1007:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"992:3:25","nodeType":"YulIdentifier","src":"992:3:25"},"nativeSrc":"992:18:25","nodeType":"YulFunctionCall","src":"992:18:25"},"variableNames":[{"name":"tail","nativeSrc":"984:4:25","nodeType":"YulIdentifier","src":"984:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cabb85905726238a61108ff7db33a260b54600229dbc1fcb2b45dcc15ee14228__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"665:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"816:9:25","nodeType":"YulTypedName","src":"816:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"830:4:25","nodeType":"YulTypedName","src":"830:4:25","type":""}],"src":"665:351:25"},{"body":{"nativeSrc":"1195:177:25","nodeType":"YulBlock","src":"1195:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1212:9:25","nodeType":"YulIdentifier","src":"1212:9:25"},{"kind":"number","nativeSrc":"1223:2:25","nodeType":"YulLiteral","src":"1223:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1205:6:25","nodeType":"YulIdentifier","src":"1205:6:25"},"nativeSrc":"1205:21:25","nodeType":"YulFunctionCall","src":"1205:21:25"},"nativeSrc":"1205:21:25","nodeType":"YulExpressionStatement","src":"1205:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1246:9:25","nodeType":"YulIdentifier","src":"1246:9:25"},{"kind":"number","nativeSrc":"1257:2:25","nodeType":"YulLiteral","src":"1257:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1242:3:25","nodeType":"YulIdentifier","src":"1242:3:25"},"nativeSrc":"1242:18:25","nodeType":"YulFunctionCall","src":"1242:18:25"},{"kind":"number","nativeSrc":"1262:2:25","nodeType":"YulLiteral","src":"1262:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"1235:6:25","nodeType":"YulIdentifier","src":"1235:6:25"},"nativeSrc":"1235:30:25","nodeType":"YulFunctionCall","src":"1235:30:25"},"nativeSrc":"1235:30:25","nodeType":"YulExpressionStatement","src":"1235:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1285:9:25","nodeType":"YulIdentifier","src":"1285:9:25"},{"kind":"number","nativeSrc":"1296:2:25","nodeType":"YulLiteral","src":"1296:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1281:3:25","nodeType":"YulIdentifier","src":"1281:3:25"},"nativeSrc":"1281:18:25","nodeType":"YulFunctionCall","src":"1281:18:25"},{"hexValue":"5661756c743a20496e76616c696420435850542061646472657373","kind":"string","nativeSrc":"1301:29:25","nodeType":"YulLiteral","src":"1301:29:25","type":"","value":"Vault: Invalid CXPT address"}],"functionName":{"name":"mstore","nativeSrc":"1274:6:25","nodeType":"YulIdentifier","src":"1274:6:25"},"nativeSrc":"1274:57:25","nodeType":"YulFunctionCall","src":"1274:57:25"},"nativeSrc":"1274:57:25","nodeType":"YulExpressionStatement","src":"1274:57:25"},{"nativeSrc":"1340:26:25","nodeType":"YulAssignment","src":"1340:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1352:9:25","nodeType":"YulIdentifier","src":"1352:9:25"},{"kind":"number","nativeSrc":"1363:2:25","nodeType":"YulLiteral","src":"1363:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1348:3:25","nodeType":"YulIdentifier","src":"1348:3:25"},"nativeSrc":"1348:18:25","nodeType":"YulFunctionCall","src":"1348:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1340:4:25","nodeType":"YulIdentifier","src":"1340:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4143c608e759ac0a10480b0b64c5faf7bc609465f4d47050750e80b86c03c7e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1021:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1172:9:25","nodeType":"YulTypedName","src":"1172:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1186:4:25","nodeType":"YulTypedName","src":"1186:4:25","type":""}],"src":"1021:351:25"},{"body":{"nativeSrc":"1551:177:25","nodeType":"YulBlock","src":"1551:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1568:9:25","nodeType":"YulIdentifier","src":"1568:9:25"},{"kind":"number","nativeSrc":"1579:2:25","nodeType":"YulLiteral","src":"1579:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1561:6:25","nodeType":"YulIdentifier","src":"1561:6:25"},"nativeSrc":"1561:21:25","nodeType":"YulFunctionCall","src":"1561:21:25"},"nativeSrc":"1561:21:25","nodeType":"YulExpressionStatement","src":"1561:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1602:9:25","nodeType":"YulIdentifier","src":"1602:9:25"},{"kind":"number","nativeSrc":"1613:2:25","nodeType":"YulLiteral","src":"1613:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1598:3:25","nodeType":"YulIdentifier","src":"1598:3:25"},"nativeSrc":"1598:18:25","nodeType":"YulFunctionCall","src":"1598:18:25"},{"kind":"number","nativeSrc":"1618:2:25","nodeType":"YulLiteral","src":"1618:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"1591:6:25","nodeType":"YulIdentifier","src":"1591:6:25"},"nativeSrc":"1591:30:25","nodeType":"YulFunctionCall","src":"1591:30:25"},"nativeSrc":"1591:30:25","nodeType":"YulExpressionStatement","src":"1591:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1641:9:25","nodeType":"YulIdentifier","src":"1641:9:25"},{"kind":"number","nativeSrc":"1652:2:25","nodeType":"YulLiteral","src":"1652:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1637:3:25","nodeType":"YulIdentifier","src":"1637:3:25"},"nativeSrc":"1637:18:25","nodeType":"YulFunctionCall","src":"1637:18:25"},{"hexValue":"5661756c743a20496e76616c696420436f72652061646472657373","kind":"string","nativeSrc":"1657:29:25","nodeType":"YulLiteral","src":"1657:29:25","type":"","value":"Vault: Invalid Core address"}],"functionName":{"name":"mstore","nativeSrc":"1630:6:25","nodeType":"YulIdentifier","src":"1630:6:25"},"nativeSrc":"1630:57:25","nodeType":"YulFunctionCall","src":"1630:57:25"},"nativeSrc":"1630:57:25","nodeType":"YulExpressionStatement","src":"1630:57:25"},{"nativeSrc":"1696:26:25","nodeType":"YulAssignment","src":"1696:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1708:9:25","nodeType":"YulIdentifier","src":"1708:9:25"},{"kind":"number","nativeSrc":"1719:2:25","nodeType":"YulLiteral","src":"1719:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1704:3:25","nodeType":"YulIdentifier","src":"1704:3:25"},"nativeSrc":"1704:18:25","nodeType":"YulFunctionCall","src":"1704:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1696:4:25","nodeType":"YulIdentifier","src":"1696:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc3ef930b84225a3d455e689feeef2f0f8eea2781e2791d7b43706604fe7b178__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1377:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1528:9:25","nodeType":"YulTypedName","src":"1528:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1542:4:25","nodeType":"YulTypedName","src":"1542:4:25","type":""}],"src":"1377:351:25"},{"body":{"nativeSrc":"1907:180:25","nodeType":"YulBlock","src":"1907:180:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1924:9:25","nodeType":"YulIdentifier","src":"1924:9:25"},{"kind":"number","nativeSrc":"1935:2:25","nodeType":"YulLiteral","src":"1935:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1917:6:25","nodeType":"YulIdentifier","src":"1917:6:25"},"nativeSrc":"1917:21:25","nodeType":"YulFunctionCall","src":"1917:21:25"},"nativeSrc":"1917:21:25","nodeType":"YulExpressionStatement","src":"1917:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1958:9:25","nodeType":"YulIdentifier","src":"1958:9:25"},{"kind":"number","nativeSrc":"1969:2:25","nodeType":"YulLiteral","src":"1969:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1954:3:25","nodeType":"YulIdentifier","src":"1954:3:25"},"nativeSrc":"1954:18:25","nodeType":"YulFunctionCall","src":"1954:18:25"},{"kind":"number","nativeSrc":"1974:2:25","nodeType":"YulLiteral","src":"1974:2:25","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"1947:6:25","nodeType":"YulIdentifier","src":"1947:6:25"},"nativeSrc":"1947:30:25","nodeType":"YulFunctionCall","src":"1947:30:25"},"nativeSrc":"1947:30:25","nodeType":"YulExpressionStatement","src":"1947:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1997:9:25","nodeType":"YulIdentifier","src":"1997:9:25"},{"kind":"number","nativeSrc":"2008:2:25","nodeType":"YulLiteral","src":"2008:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1993:3:25","nodeType":"YulIdentifier","src":"1993:3:25"},"nativeSrc":"1993:18:25","nodeType":"YulFunctionCall","src":"1993:18:25"},{"hexValue":"5661756c743a20496e76616c696420476174657761792061646472657373","kind":"string","nativeSrc":"2013:32:25","nodeType":"YulLiteral","src":"2013:32:25","type":"","value":"Vault: Invalid Gateway address"}],"functionName":{"name":"mstore","nativeSrc":"1986:6:25","nodeType":"YulIdentifier","src":"1986:6:25"},"nativeSrc":"1986:60:25","nodeType":"YulFunctionCall","src":"1986:60:25"},"nativeSrc":"1986:60:25","nodeType":"YulExpressionStatement","src":"1986:60:25"},{"nativeSrc":"2055:26:25","nodeType":"YulAssignment","src":"2055:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2067:9:25","nodeType":"YulIdentifier","src":"2067:9:25"},{"kind":"number","nativeSrc":"2078:2:25","nodeType":"YulLiteral","src":"2078:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2063:3:25","nodeType":"YulIdentifier","src":"2063:3:25"},"nativeSrc":"2063:18:25","nodeType":"YulFunctionCall","src":"2063:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2055:4:25","nodeType":"YulIdentifier","src":"2055:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3fe1be505b000346304c811dc1968719aa106f725a15863d87db884f593cd83__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1733:354:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1884:9:25","nodeType":"YulTypedName","src":"1884:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1898:4:25","nodeType":"YulTypedName","src":"1898:4:25","type":""}],"src":"1733:354:25"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_cabb85905726238a61108ff7db33a260b54600229dbc1fcb2b45dcc15ee14228__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Vault: Invalid USDC address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4143c608e759ac0a10480b0b64c5faf7bc609465f4d47050750e80b86c03c7e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Vault: Invalid CXPT address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc3ef930b84225a3d455e689feeef2f0f8eea2781e2791d7b43706604fe7b178__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Vault: Invalid Core address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c3fe1be505b000346304c811dc1968719aa106f725a15863d87db884f593cd83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Vault: Invalid Gateway address\")\n        tail := add(headStart, 96)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b506040516123e03803806123e083398101604081905261002f9161038a565b6001600160a01b03841661008a5760405162461bcd60e51b815260206004820152601b60248201527f5661756c743a20496e76616c696420555344432061646472657373000000000060448201526064015b60405180910390fd5b6001600160a01b0383166100e05760405162461bcd60e51b815260206004820152601b60248201527f5661756c743a20496e76616c69642043585054206164647265737300000000006044820152606401610081565b6001600160a01b0382166101365760405162461bcd60e51b815260206004820152601b60248201527f5661756c743a20496e76616c696420436f7265206164647265737300000000006044820152606401610081565b6001600160a01b03811661018c5760405162461bcd60e51b815260206004820152601e60248201527f5661756c743a20496e76616c69642047617465776179206164647265737300006044820152606401610081565b6001600160a01b03808516608052831660a0526101aa600033610235565b506101d57fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610235565b506102007f502d3d275257923b2bea6ea25d9631f12369fb532871f13eb85eb09dc0fb484283610235565b5061022b7fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a82610235565b50505050506103de565b600080610242848461026d565b905080156102645760008481526001602052604090206102629084610317565b505b90505b92915050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff1661030f576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556102c73390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610267565b506000610267565b6000610264836001600160a01b038416600081815260018301602052604081205461030f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610267565b80516001600160a01b038116811461038557600080fd5b919050565b600080600080608085870312156103a057600080fd5b6103a98561036e565b93506103b76020860161036e565b92506103c56040860161036e565b91506103d36060860161036e565b905092959194509250565b60805160a051611f906104506000396000818161022d015281816102fc01526115250152600081816101f301528181610256015281816108960152818161099501528181610b3801528181610ef1015281816112280152818161134c015281816115dd01526116ce0152611f906000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806375b238fc116100f9578063c50d6dd911610097578063d547741f11610071578063d547741f14610458578063d68ceed81461046b578063ead5d3591461047e578063f36246d11461049157600080fd5b8063c50d6dd914610415578063c70908181461043c578063ca15c8731461044557600080fd5b8063a217fddf116100d3578063a217fddf146103c7578063a3246ad3146103cf578063ace5398a146103ef578063ad3b1b471461040257600080fd5b806375b238fc1461037a5780639010d07c146103a157806391d14854146103b457600080fd5b806336568abe1161016657806344ba2b241161014057806344ba2b241461031e5780634d394279146103315780634e2c151f1461035457806356b22bf21461036757600080fd5b806336568abe146102d15780633ab5ef82146102e45780633fa4d814146102f757600080fd5b806311eac855116101a257806311eac85514610251578063248a9ca3146102785780632a314e05146102a95780632f2ff15d146102be57600080fd5b806301ffc9a7146101c95780630c8a95b2146101f15780630e8f61a71461022b575b600080fd5b6101dc6101d7366004611b64565b6104a6565b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e8565b7f0000000000000000000000000000000000000000000000000000000000000000610213565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b61029b610286366004611b8e565b60009081526020819052604090206001015490565b6040519081526020016101e8565b6102bc6102b7366004611bc3565b6104d1565b005b6102bc6102cc366004611c00565b610705565b6102bc6102df366004611c00565b610730565b6102bc6102f2366004611c2c565b610768565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102bc61032c366004611c2c565b610a56565b6101dc61033f366004611c6e565b60026020526000908152604090205460ff1681565b6102bc610362366004611bc3565b610caf565b6102bc610375366004611c89565b610e67565b61029b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6102136103af366004611cb3565b610ff0565b6101dc6103c2366004611c00565b61100f565b61029b600081565b6103e26103dd366004611b8e565b611038565b6040516101e89190611cd5565b6102bc6103fd366004611c6e565b611052565b6102bc610410366004611c89565b611120565b61029b7fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a81565b61029b60035481565b61029b610453366004611b8e565b6113f7565b6102bc610466366004611c00565b61140e565b6102bc610479366004611b8e565b611433565b6102bc61048c366004611d2f565b61149b565b61029b600080516020611f3b83398151915281565b60006001600160e01b03198216635a05180f60e01b14806104cb57506104cb82611779565b92915050565b600080516020611f3b8339815191526104e9816117ae565b6001600160a01b0384166105185760405162461bcd60e51b815260040161050f90611d6f565b60405180910390fd5b6001600160a01b03831660009081526002602052604090205460ff166105505760405162461bcd60e51b815260040161050f90611da6565b600082116105705760405162461bcd60e51b815260040161050f90611ddd565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190611e14565b10156106345760405162461bcd60e51b815260206004820152602360248201527f5661756c743a20496e73756666696369656e742073415353455420696e2056616044820152621d5b1d60ea1b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611e2d565b50826001600160a01b0316846001600160a01b0316336001600160a01b03167f1adf7c474f4d4c8c8c445ac7bb8ddfd2ac3bc3d69602e520973e1e130b35d059856040516106f791815260200190565b60405180910390a450505050565b600082815260208190526040902060010154610720816117ae565b61072a83836117bb565b50505050565b6001600160a01b03811633146107595760405163334bd91960e11b815260040160405180910390fd5b61076382826117f0565b505050565b600080516020611f3b833981519152610780816117ae565b6001600160a01b0385166107a65760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03841660009081526002602052604090205460ff166107de5760405162461bcd60e51b815260040161050f90611da6565b600083116107fe5760405162461bcd60e51b815260040161050f90611e4a565b6000821161081e5760405162461bcd60e51b815260040161050f90611e8f565b60405163079cc67960e41b81526001600160a01b038681166004830152602482018590528516906379cc679090604401600060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528492507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a9190611e14565b101561096f5760405162461bcd60e51b815260206004820152602e60248201527f5661756c743a20496e73756666696369656e74205553444320696e205661756c60448201526d7420666f722065786368616e676560901b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190611e2d565b5060408051848152602081018490526001600160a01b03808716929088169133917f9b25b321600b34289c3cbb5c981301c953b6444e24e29b07642438020357470491015b60405180910390a45050505050565b600080516020611f3b833981519152610a6e816117ae565b6001600160a01b038516610a945760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03841660009081526002602052604090205460ff16610acc5760405162461bcd60e51b815260040161050f90611da6565b60008311610aec5760405162461bcd60e51b815260040161050f90611e8f565b60008211610b0c5760405162461bcd60e51b815260040161050f90611e4a565b6040516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba59190611e2d565b610c065760405162461bcd60e51b815260206004820152602c60248201527f5661756c743a2055534443207472616e7366657246726f6d20666f722065786360448201526b1a185b99d94819985a5b195960a21b606482015260840161050f565b6040516340c10f1960e01b81526001600160a01b038681166004830152602482018490528516906340c10f1990604401600060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b505060408051868152602081018690526001600160a01b0380891694508916925033917f0f98fef012e390f285dc060967b20ecc02d87aeb79d028669963fa048e07d5bd9101610a47565b600080516020611f3b833981519152610cc7816117ae565b6001600160a01b038416610ced5760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03831660009081526002602052604090205460ff16610d255760405162461bcd60e51b815260040161050f90611da6565b60008211610d455760405162461bcd60e51b815260040161050f90611ddd565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018490528416906323b872dd906064016020604051808303816000875af1158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190611e2d565b610e145760405162461bcd60e51b815260206004820152602160248201527f5661756c743a20734153534554207472616e7366657246726f6d206661696c656044820152601960fa1b606482015260840161050f565b826001600160a01b0316846001600160a01b03167f8f6bb1fe8136c1d257d77e7a1e5be2c656c9971040cbbf7cce283eb69a72989784604051610e5991815260200190565b60405180910390a350505050565b600080516020611f3b833981519152610e7f816117ae565b6001600160a01b038316610ea55760405162461bcd60e51b815260040161050f90611d6f565b60008211610ec55760405162461bcd60e51b815260040161050f90611ddd565b6040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e9190611e2d565b610faa5760405162461bcd60e51b815260206004820152601f60248201527f5661756c743a2055534443207472616e7366657246726f6d206661696c656400604482015260640161050f565b6040518281526001600160a01b0384169033907f5a860befdd305e7d99e384272a4b82aab613eab23cc3070774a4a8cc0f168100906020015b60405180910390a3505050565b6000828152600160205260408120611008908361181d565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604090206060906104cb90611829565b7fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a61107c816117ae565b6001600160a01b0382166110d25760405162461bcd60e51b815260206004820152601d60248201527f5661756c743a205a65726f206164647265737320666f722073796e7468000000604482015260640161050f565b6001600160a01b038216600081815260026020526040808220805460ff191660011790555133917fdb3823c581f8b10f079485fcda8dc823145456bf18ccf7606d21afdc5f53a04291a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561114a816117ae565b6001600160a01b0383166111b45760405162461bcd60e51b815260206004820152602b60248201527f5661756c743a2046656520726563697069656e742063616e6e6f74206265207a60448201526a65726f206164647265737360a81b606482015260840161050f565b8160035410156112115760405162461bcd60e51b815260206004820152602260248201527f5661756c743a20496e73756666696369656e7420636f6c6c6563746564206665604482015261657360f01b606482015260840161050f565b6040516370a0823160e01b815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b9190611e14565b101561130f5760405162461bcd60e51b815260206004820152603c60248201527f5661756c743a20496e73756666696369656e7420555344432062616c616e636560448201527f20696e205661756c7420666f7220666565207769746864726177616c00000000606482015260840161050f565b81600360008282546113219190611ee8565b909155505060405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b99190611e2d565b506040518281526001600160a01b0384169033907f5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa890602001610fe3565b60008181526001602052604081206104cb90611836565b600082815260208190526040902060010154611429816117ae565b61072a83836117f0565b600080516020611f3b83398151915261144b816117ae565b816003600082825461145d9190611efb565b909155505060405182815233907f1e24569f7c3f504b5551f16f646a25d65ffa8e302d9b65c1506c24fd10e1ca959060200160405180910390a25050565b600080516020611f3b8339815191526114b3816117ae565b6001600160a01b0384166114d95760405162461bcd60e51b815260040161050f90611d6f565b600083116114f95760405162461bcd60e51b815260040161050f90611ddd565b81156115c6576040516340c10f1960e01b81526001600160a01b038581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561156957600080fd5b505af115801561157d573d6000803e3d6000fd5b50506040518581526001600160a01b03871692503391507f92b755fa8e77bd21bd6dacacaa86ce4f43d5ca8568a52a401dc983cbd51bf67e9060200160405180910390a361072a565b6040516370a0823160e01b815230600482015283907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561162c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116509190611e14565b10156116a85760405162461bcd60e51b815260206004820152602160248201527f5661756c743a20496e73756666696369656e74205553444320696e205661756c6044820152601d60fa1b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b9190611e2d565b506040518381526001600160a01b0385169033907fa97afe0164ab246d52c034daf6c9025ccfc099b55129272a9bb868ec04669ea490602001610e59565b60006001600160e01b03198216637965db0b60e01b14806104cb57506301ffc9a760e01b6001600160e01b03198316146104cb565b6117b88133611840565b50565b6000806117c8848461187d565b905080156110085760008481526001602052604090206117e8908461190f565b509392505050565b6000806117fd8484611924565b905080156110085760008481526001602052604090206117e8908461198f565b600061100883836119a4565b60606000611008836119ce565b60006104cb825490565b61184a828261100f565b6118795760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161050f565b5050565b6000611889838361100f565b611907576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556118bf3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104cb565b5060006104cb565b6000611008836001600160a01b038416611a2a565b6000611930838361100f565b15611907576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104cb565b6000611008836001600160a01b038416611a71565b60008260000182815481106119bb576119bb611f0e565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611a1e57602002820191906000526020600020905b815481526020019060010190808311611a0a575b50505050509050919050565b6000818152600183016020526040812054611907575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104cb565b60008181526001830160205260408120548015611b5a576000611a95600183611ee8565b8554909150600090611aa990600190611ee8565b9050808214611b0e576000866000018281548110611ac957611ac9611f0e565b9060005260206000200154905080876000018481548110611aec57611aec611f0e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611b1f57611b1f611f24565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104cb565b60009150506104cb565b600060208284031215611b7657600080fd5b81356001600160e01b03198116811461100857600080fd5b600060208284031215611ba057600080fd5b5035919050565b80356001600160a01b0381168114611bbe57600080fd5b919050565b600080600060608486031215611bd857600080fd5b611be184611ba7565b9250611bef60208501611ba7565b929592945050506040919091013590565b60008060408385031215611c1357600080fd5b82359150611c2360208401611ba7565b90509250929050565b60008060008060808587031215611c4257600080fd5b611c4b85611ba7565b9350611c5960208601611ba7565b93969395505050506040820135916060013590565b600060208284031215611c8057600080fd5b61100882611ba7565b60008060408385031215611c9c57600080fd5b611ca583611ba7565b946020939093013593505050565b60008060408385031215611cc657600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015611d165783516001600160a01b0316835260209384019390920191600101611cef565b509095945050505050565b80151581146117b857600080fd5b600080600060608486031215611d4457600080fd5b611d4d84611ba7565b9250602084013591506040840135611d6481611d21565b809150509250925092565b6020808252601a908201527f5661756c743a20496e76616c696420757365722077616c6c6574000000000000604082015260600190565b6020808252601b908201527f5661756c743a2053796e7468206e6f7420726567697374657265640000000000604082015260600190565b6020808252601e908201527f5661756c743a20416d6f756e74206d75737420626520706f7369746976650000604082015260600190565b600060208284031215611e2657600080fd5b5051919050565b600060208284031215611e3f57600080fd5b815161100881611d21565b60208082526025908201527f5661756c743a2073415353455420616d6f756e74206d75737420626520706f73604082015264697469766560d81b606082015260800190565b60208082526023908201527f5661756c743a205553444320616d6f756e74206d75737420626520706f73697460408201526269766560e81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156104cb576104cb611ed2565b808201808211156104cb576104cb611ed2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfe502d3d275257923b2bea6ea25d9631f12369fb532871f13eb85eb09dc0fb4842a2646970667358221220dc7ee51b31a8d5973c22944946f88809f9d3e24f7e24cfe1e67bea4a75d5352064736f6c634300081c0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23E0 CODESIZE SUB DUP1 PUSH2 0x23E0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C6964205553444320616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C6964204358505420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C696420436F726520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C6964204761746577617920616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x80 MSTORE DUP4 AND PUSH1 0xA0 MSTORE PUSH2 0x1AA PUSH1 0x0 CALLER PUSH2 0x235 JUMP JUMPDEST POP PUSH2 0x1D5 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x235 JUMP JUMPDEST POP PUSH2 0x200 PUSH32 0x502D3D275257923B2BEA6EA25D9631F12369FB532871F13EB85EB09DC0FB4842 DUP4 PUSH2 0x235 JUMP JUMPDEST POP PUSH2 0x22B PUSH32 0xB90E9995C6170FFF8EA03E9AD6919878E483770C237F1A6F330CEAA7112B344A DUP3 PUSH2 0x235 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x242 DUP5 DUP5 PUSH2 0x26D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x262 SWAP1 DUP5 PUSH2 0x317 JUMP JUMPDEST POP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x30F JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2C7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x267 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x30F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x267 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A9 DUP6 PUSH2 0x36E JUMP JUMPDEST SWAP4 POP PUSH2 0x3B7 PUSH1 0x20 DUP7 ADD PUSH2 0x36E JUMP JUMPDEST SWAP3 POP PUSH2 0x3C5 PUSH1 0x40 DUP7 ADD PUSH2 0x36E JUMP JUMPDEST SWAP2 POP PUSH2 0x3D3 PUSH1 0x60 DUP7 ADD PUSH2 0x36E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1F90 PUSH2 0x450 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x22D ADD MSTORE DUP2 DUP2 PUSH2 0x2FC ADD MSTORE PUSH2 0x1525 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F3 ADD MSTORE DUP2 DUP2 PUSH2 0x256 ADD MSTORE DUP2 DUP2 PUSH2 0x896 ADD MSTORE DUP2 DUP2 PUSH2 0x995 ADD MSTORE DUP2 DUP2 PUSH2 0xB38 ADD MSTORE DUP2 DUP2 PUSH2 0xEF1 ADD MSTORE DUP2 DUP2 PUSH2 0x1228 ADD MSTORE DUP2 DUP2 PUSH2 0x134C ADD MSTORE DUP2 DUP2 PUSH2 0x15DD ADD MSTORE PUSH2 0x16CE ADD MSTORE PUSH2 0x1F90 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC50D6DD9 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xD68CEED8 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xEAD5D359 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF36246D1 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC50D6DD9 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xC7090818 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xACE5398A EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAD3B1B47 EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x44BA2B24 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x44BA2B24 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x4D394279 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x4E2C151F EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x56B22BF2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3AB5EF82 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x3FA4D814 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2A314E05 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xC8A95B2 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xE8F61A7 EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x213 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BC PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x29B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x29B PUSH32 0xB90E9995C6170FFF8EA03E9AD6919878E483770C237F1A6F330CEAA7112B344A DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4CB JUMPI POP PUSH2 0x4CB DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x4E9 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E742073415353455420696E205661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1ADF7C474F4D4C8C8C445AC7BB8DDFD2AC3BC3D69602E520973E1E130B35D059 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x720 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x17BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP3 DUP3 PUSH2 0x17F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x780 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP3 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E74205553444320696E205661756C PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x7420666F722065786368616E6765 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 SWAP1 DUP9 AND SWAP2 CALLER SWAP2 PUSH32 0x9B25B321600B34289C3CBB5C981301C953B6444E24E29B076424380203574704 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA6E DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2055534443207472616E7366657246726F6D20666F7220657863 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1A185B99D94819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP5 POP DUP10 AND SWAP3 POP CALLER SWAP2 PUSH32 0xF98FEF012E390F285DC060967B20ECC02D87AEB79D028669963FA048E07D5BD SWAP2 ADD PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCC7 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20734153534554207472616E7366657246726F6D206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8F6BB1FE8136C1D257D77E7A1E5BE2C656C9971040CBBF7CCE283EB69A729897 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE59 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE7F DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2055534443207472616E7366657246726F6D206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x5A860BEFDD305E7D99E384272A4B82AAB613EAB23CC3070774A4A8CC0F168100 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1008 SWAP1 DUP4 PUSH2 0x181D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x4CB SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH32 0xB90E9995C6170FFF8EA03E9AD6919878E483770C237F1A6F330CEAA7112B344A PUSH2 0x107C DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A205A65726F206164647265737320666F722073796E7468000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP2 PUSH32 0xDB3823C581F8B10F079485FCDA8DC823145456BF18CCF7606D21AFDC5F53A042 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x114A DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2046656520726563697069656E742063616E6E6F74206265207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x1211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E7420636F6C6C6563746564206665 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6573 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E7420555344432062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E205661756C7420666F7220666565207769746864726177616C00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1321 SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x5E110F8BC8A20B65DCC87F224BDF1CC039346E267118BAE2739847F07321FFA8 SWAP1 PUSH1 0x20 ADD PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4CB SWAP1 PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1429 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x144B DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1E24569F7C3F504B5551F16F646A25D65FFA8E302D9B65C1506C24FD10E1CA95 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14B3 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST DUP2 ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x92B755FA8E77BD21BD6DACACAA86CE4F43D5CA8568A52A401DC983CBD51BF67E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E74205553444320696E205661756C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xA97AFE0164AB246D52C034DAF6C9025CCFC099B55129272A9BB868EC04669EA4 SWAP1 PUSH1 0x20 ADD PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4CB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x17B8 DUP2 CALLER PUSH2 0x1840 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17C8 DUP5 DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17E8 SWAP1 DUP5 PUSH2 0x190F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17FD DUP5 DUP5 PUSH2 0x1924 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17E8 SWAP1 DUP5 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 DUP4 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184A DUP3 DUP3 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1879 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x50F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1907 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x18BF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1930 DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19BB JUMPI PUSH2 0x19BB PUSH2 0x1F0E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1A1E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1A0A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1907 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1B5A JUMPI PUSH1 0x0 PUSH2 0x1A95 PUSH1 0x1 DUP4 PUSH2 0x1EE8 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1AA9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1B0E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AC9 JUMPI PUSH2 0x1AC9 PUSH2 0x1F0E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AEC JUMPI PUSH2 0x1AEC PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BE1 DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BEF PUSH1 0x20 DUP6 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C23 PUSH1 0x20 DUP5 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C4B DUP6 PUSH2 0x1BA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C59 PUSH1 0x20 DUP7 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1008 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA5 DUP4 PUSH2 0x1BA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D16 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1CEF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4D DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1D64 DUP2 PUSH2 0x1D21 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C696420757365722077616C6C6574000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A2053796E7468206E6F7420726567697374657265640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A20416D6F756E74206D75737420626520706F7369746976650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1008 DUP2 PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A2073415353455420616D6F756E74206D75737420626520706F73 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6974697665 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A205553444320616D6F756E74206D75737420626520706F736974 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x1ED2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x1ED2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID POP 0x2D RETURNDATASIZE 0x27 MSTORE JUMPI SWAP3 EXTCODESIZE 0x2B 0xEA PUSH15 0xA25D9631F12369FB532871F13EB85E 0xB0 SWAP14 0xC0 0xFB BASEFEE TIMESTAMP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH31 0xE51B31A8D5973C22944946F88809F9D3E24F7E24CFE1E67BEA4A75D5352064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"775:10136:24:-:0;;;2569:794;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2734:26:24;;2726:66;;;;-1:-1:-1;;;2726:66:24;;867:2:25;2726:66:24;;;849:21:25;906:2;886:18;;;879:30;945:29;925:18;;;918:57;992:18;;2726:66:24;;;;;;;;;-1:-1:-1;;;;;2810:31:24;;2802:71;;;;-1:-1:-1;;;2802:71:24;;1223:2:25;2802:71:24;;;1205:21:25;1262:2;1242:18;;;1235:30;1301:29;1281:18;;;1274:57;1348:18;;2802:71:24;1021:351:25;2802:71:24;-1:-1:-1;;;;;2891:26:24;;2883:66;;;;-1:-1:-1;;;2883:66:24;;1579:2:25;2883:66:24;;;1561:21:25;1618:2;1598:18;;;1591:30;1657:29;1637:18;;;1630:57;1704:18;;2883:66:24;1377:351:25;2883:66:24;-1:-1:-1;;;;;2967:29:24;;2959:72;;;;-1:-1:-1;;;2959:72:24;;1935:2:25;2959:72:24;;;1917:21:25;1974:2;1954:18;;;1947:30;2013:32;1993:18;;;1986:60;2063:18;;2959:72:24;1733:354:25;2959:72:24;-1:-1:-1;;;;;3042:32:24;;;;;3084:40;;;;3174:42;2232:4:0;3205:10:24;3174;:42::i;:::-;-1:-1:-1;3226:34:24;994:23;3249:10;3226;:34::i;:::-;-1:-1:-1;3270:35:24;859:22;3292:12;3270:10;:35::i;:::-;-1:-1:-1;3315:41:24;926:25;3340:15;3315:10;:41::i;:::-;;2569:794;;;;775:10136;;2748:257:3;2834:4;;2865:31;2882:4;2888:7;2865:16;:31::i;:::-;2850:46;;2910:7;2906:69;;;2933:18;;;;:12;:18;;;;;:31;;2956:7;2933:22;:31::i;:::-;;2906:69;2991:7;-1:-1:-1;2748:257:3;;;;;:::o;6179:316:0:-;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;9332:150:20;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:20;;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;14:177:25;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;1733:354::-;775:10136:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_7318":{"entryPoint":null,"id":7318,"parameterSlots":0,"returnSlots":0},"@CORE_ROLE_7308":{"entryPoint":null,"id":7308,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@GATEWAY_ROLE_7313":{"entryPoint":null,"id":7313,"parameterSlots":0,"returnSlots":0},"@_add_6235":{"entryPoint":6698,"id":6235,"parameterSlots":2,"returnSlots":1},"@_at_6412":{"entryPoint":6564,"id":6412,"parameterSlots":2,"returnSlots":1},"@_checkRole_114":{"entryPoint":6208,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":6062,"id":93,"parameterSlots":1,"returnSlots":0},"@_contains_6381":{"entryPoint":null,"id":6381,"parameterSlots":2,"returnSlots":1},"@_grantRole_256":{"entryPoint":6269,"id":256,"parameterSlots":2,"returnSlots":1},"@_grantRole_651":{"entryPoint":6075,"id":651,"parameterSlots":2,"returnSlots":1},"@_length_6395":{"entryPoint":null,"id":6395,"parameterSlots":1,"returnSlots":1},"@_msgSender_2434":{"entryPoint":null,"id":2434,"parameterSlots":0,"returnSlots":1},"@_remove_6319":{"entryPoint":6769,"id":6319,"parameterSlots":2,"returnSlots":1},"@_revokeRole_294":{"entryPoint":6436,"id":294,"parameterSlots":2,"returnSlots":1},"@_revokeRole_683":{"entryPoint":6128,"id":683,"parameterSlots":2,"returnSlots":1},"@_values_6426":{"entryPoint":6606,"id":6426,"parameterSlots":1,"returnSlots":1},"@add_6591":{"entryPoint":6415,"id":6591,"parameterSlots":2,"returnSlots":1},"@at_6700":{"entryPoint":6173,"id":6700,"parameterSlots":2,"returnSlots":1},"@cxptToken_7324":{"entryPoint":null,"id":7324,"parameterSlots":0,"returnSlots":0},"@depositSynthToVault_7683":{"entryPoint":3247,"id":7683,"parameterSlots":3,"returnSlots":0},"@depositUSDC_7550":{"entryPoint":3687,"id":7550,"parameterSlots":2,"returnSlots":0},"@exchangeSAssetToUSDC_7910":{"entryPoint":1896,"id":7910,"parameterSlots":4,"returnSlots":0},"@exchangeUSDCToSAsset_7827":{"entryPoint":2646,"id":7827,"parameterSlots":4,"returnSlots":0},"@getCXPTTokenAddress_8041":{"entryPoint":null,"id":8041,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_603":{"entryPoint":5111,"id":603,"parameterSlots":1,"returnSlots":1},"@getRoleMember_588":{"entryPoint":4080,"id":588,"parameterSlots":2,"returnSlots":1},"@getRoleMembers_619":{"entryPoint":4152,"id":619,"parameterSlots":1,"returnSlots":1},"@getUSDCTokenAddress_8030":{"entryPoint":null,"id":8030,"parameterSlots":0,"returnSlots":1},"@grantRole_147":{"entryPoint":1797,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":4111,"id":80,"parameterSlots":2,"returnSlots":1},"@isRegisteredSynth_7328":{"entryPoint":null,"id":7328,"parameterSlots":0,"returnSlots":0},"@length_6673":{"entryPoint":6198,"id":6673,"parameterSlots":1,"returnSlots":1},"@recordFees_7960":{"entryPoint":5171,"id":7960,"parameterSlots":1,"returnSlots":0},"@registerSynth_7941":{"entryPoint":4178,"id":7941,"parameterSlots":1,"returnSlots":0},"@remove_6618":{"entryPoint":6543,"id":6618,"parameterSlots":2,"returnSlots":1},"@renounceRole_189":{"entryPoint":1840,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":5134,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2781":{"entryPoint":null,"id":2781,"parameterSlots":1,"returnSlots":1},"@supportsInterface_570":{"entryPoint":1190,"id":570,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":6009,"id":62,"parameterSlots":1,"returnSlots":1},"@totalFeesCollectedUSDC_7330":{"entryPoint":null,"id":7330,"parameterSlots":0,"returnSlots":0},"@usdcToken_7321":{"entryPoint":null,"id":7321,"parameterSlots":0,"returnSlots":0},"@values_6730":{"entryPoint":6185,"id":6730,"parameterSlots":1,"returnSlots":1},"@withdrawFees_8019":{"entryPoint":4384,"id":8019,"parameterSlots":2,"returnSlots":0},"@withdrawSynthFromVault_7751":{"entryPoint":1233,"id":7751,"parameterSlots":3,"returnSlots":0},"@withdraw_7625":{"entryPoint":5275,"id":7625,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":7079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7107,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":7212,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7305,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bool":{"entryPoint":7471,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":7054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7168,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":7347,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7700,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_CXPTToken_$6929__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1440__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_185445a2dcbbbc5aa0bd1de088f6d94ab416775bdc4b3c651d5225f6541d0a3c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b56fdf35b0944b7abaa7cc0ff3f36aa6f21016d8094fdbdb06fd85b8d0f57f7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7590,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ab4ac0d14c19251246b94a3c1a5cb3035cb7649317d129358c0793b3f07cfbe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7479dc5e57938a430032e96d216888e5f1fdef822747fc2e260d2da3d0d36248__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d6ae6e04de27a95a55697afc4104c9a57c9f9ed75cc00578b5cb6b42352eb1e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c77d5a563b6680470bb3bf944ade6bdcb6e242efde2c7524bfb416e13059f6c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc87779cc149742b4b4cb9bd5dce085bae2d1323af2305e873ac30f5826b8cff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e116318237572736871ad69c58d3727eddf7d47b8ba25d88d8d7bf40a22ced23__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed3db335e9fb351cc5d051bc5d7fd3270fa11914a949176a292335808a9cbaeb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f08a77ec6099f5cc0b388b1b7f87ebd6a79c089f8810caa9e155e76f4270c1fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7912,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7890,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7972,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7950,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":7457,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13554:25","nodeType":"YulBlock","src":"0:13554:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"83:217:25","nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nativeSrc":"129:16:25","nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:25","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:25","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:25","nodeType":"YulIdentifier","src":"131:6:25"},"nativeSrc":"131:12:25","nodeType":"YulFunctionCall","src":"131:12:25"},"nativeSrc":"131:12:25","nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:25","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nativeSrc":"113:9:25","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nativeSrc":"100:3:25","nodeType":"YulIdentifier","src":"100:3:25"},"nativeSrc":"100:23:25","nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nativeSrc":"125:2:25","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:25","nodeType":"YulIdentifier","src":"96:3:25"},"nativeSrc":"96:32:25","nodeType":"YulFunctionCall","src":"96:32:25"},"nativeSrc":"93:52:25","nodeType":"YulIf","src":"93:52:25"},{"nativeSrc":"154:36:25","nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:25","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:25","nodeType":"YulIdentifier","src":"167:12:25"},"nativeSrc":"167:23:25","nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nativeSrc":"158:5:25","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nativeSrc":"254:16:25","nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:25","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:25","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:25","nodeType":"YulIdentifier","src":"256:6:25"},"nativeSrc":"256:12:25","nodeType":"YulFunctionCall","src":"256:12:25"},"nativeSrc":"256:12:25","nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:25","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nativeSrc":"223:5:25","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nativeSrc":"234:3:25","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:25","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:25","nodeType":"YulIdentifier","src":"230:3:25"},"nativeSrc":"230:20:25","nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nativeSrc":"219:3:25","nodeType":"YulIdentifier","src":"219:3:25"},"nativeSrc":"219:32:25","nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nativeSrc":"209:2:25","nodeType":"YulIdentifier","src":"209:2:25"},"nativeSrc":"209:43:25","nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nativeSrc":"202:6:25","nodeType":"YulIdentifier","src":"202:6:25"},"nativeSrc":"202:51:25","nodeType":"YulFunctionCall","src":"202:51:25"},"nativeSrc":"199:71:25","nodeType":"YulIf","src":"199:71:25"},{"nativeSrc":"279:15:25","nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nativeSrc":"289:5:25","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nativeSrc":"279:6:25","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:25","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nativeSrc":"60:7:25","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:25","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nativeSrc":"400:92:25","nodeType":"YulBlock","src":"400:92:25","statements":[{"nativeSrc":"410:26:25","nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:25","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nativeSrc":"433:2:25","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:25","nodeType":"YulIdentifier","src":"418:3:25"},"nativeSrc":"418:18:25","nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nativeSrc":"410:4:25","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:25","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:25","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nativeSrc":"470:6:25","nodeType":"YulIdentifier","src":"470:6:25"},"nativeSrc":"470:14:25","nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nativeSrc":"463:6:25","nodeType":"YulIdentifier","src":"463:6:25"},"nativeSrc":"463:22:25","nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nativeSrc":"445:6:25","nodeType":"YulIdentifier","src":"445:6:25"},"nativeSrc":"445:41:25","nodeType":"YulFunctionCall","src":"445:41:25"},"nativeSrc":"445:41:25","nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:25","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nativeSrc":"380:6:25","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:25","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nativeSrc":"598:102:25","nodeType":"YulBlock","src":"598:102:25","statements":[{"nativeSrc":"608:26:25","nodeType":"YulAssignment","src":"608:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"620:9:25","nodeType":"YulIdentifier","src":"620:9:25"},{"kind":"number","nativeSrc":"631:2:25","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"616:3:25","nodeType":"YulIdentifier","src":"616:3:25"},"nativeSrc":"616:18:25","nodeType":"YulFunctionCall","src":"616:18:25"},"variableNames":[{"name":"tail","nativeSrc":"608:4:25","nodeType":"YulIdentifier","src":"608:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"650:9:25","nodeType":"YulIdentifier","src":"650:9:25"},{"arguments":[{"name":"value0","nativeSrc":"665:6:25","nodeType":"YulIdentifier","src":"665:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"681:3:25","nodeType":"YulLiteral","src":"681:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"686:1:25","nodeType":"YulLiteral","src":"686:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"677:3:25","nodeType":"YulIdentifier","src":"677:3:25"},"nativeSrc":"677:11:25","nodeType":"YulFunctionCall","src":"677:11:25"},{"kind":"number","nativeSrc":"690:1:25","nodeType":"YulLiteral","src":"690:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"673:3:25","nodeType":"YulIdentifier","src":"673:3:25"},"nativeSrc":"673:19:25","nodeType":"YulFunctionCall","src":"673:19:25"}],"functionName":{"name":"and","nativeSrc":"661:3:25","nodeType":"YulIdentifier","src":"661:3:25"},"nativeSrc":"661:32:25","nodeType":"YulFunctionCall","src":"661:32:25"}],"functionName":{"name":"mstore","nativeSrc":"643:6:25","nodeType":"YulIdentifier","src":"643:6:25"},"nativeSrc":"643:51:25","nodeType":"YulFunctionCall","src":"643:51:25"},"nativeSrc":"643:51:25","nodeType":"YulExpressionStatement","src":"643:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"497:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"567:9:25","nodeType":"YulTypedName","src":"567:9:25","type":""},{"name":"value0","nativeSrc":"578:6:25","nodeType":"YulTypedName","src":"578:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"589:4:25","nodeType":"YulTypedName","src":"589:4:25","type":""}],"src":"497:203:25"},{"body":{"nativeSrc":"821:102:25","nodeType":"YulBlock","src":"821:102:25","statements":[{"nativeSrc":"831:26:25","nodeType":"YulAssignment","src":"831:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"843:9:25","nodeType":"YulIdentifier","src":"843:9:25"},{"kind":"number","nativeSrc":"854:2:25","nodeType":"YulLiteral","src":"854:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"839:3:25","nodeType":"YulIdentifier","src":"839:3:25"},"nativeSrc":"839:18:25","nodeType":"YulFunctionCall","src":"839:18:25"},"variableNames":[{"name":"tail","nativeSrc":"831:4:25","nodeType":"YulIdentifier","src":"831:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"873:9:25","nodeType":"YulIdentifier","src":"873:9:25"},{"arguments":[{"name":"value0","nativeSrc":"888:6:25","nodeType":"YulIdentifier","src":"888:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"904:3:25","nodeType":"YulLiteral","src":"904:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"909:1:25","nodeType":"YulLiteral","src":"909:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"900:3:25","nodeType":"YulIdentifier","src":"900:3:25"},"nativeSrc":"900:11:25","nodeType":"YulFunctionCall","src":"900:11:25"},{"kind":"number","nativeSrc":"913:1:25","nodeType":"YulLiteral","src":"913:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"896:3:25","nodeType":"YulIdentifier","src":"896:3:25"},"nativeSrc":"896:19:25","nodeType":"YulFunctionCall","src":"896:19:25"}],"functionName":{"name":"and","nativeSrc":"884:3:25","nodeType":"YulIdentifier","src":"884:3:25"},"nativeSrc":"884:32:25","nodeType":"YulFunctionCall","src":"884:32:25"}],"functionName":{"name":"mstore","nativeSrc":"866:6:25","nodeType":"YulIdentifier","src":"866:6:25"},"nativeSrc":"866:51:25","nodeType":"YulFunctionCall","src":"866:51:25"},"nativeSrc":"866:51:25","nodeType":"YulExpressionStatement","src":"866:51:25"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1440__to_t_address__fromStack_reversed","nativeSrc":"705:218:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"790:9:25","nodeType":"YulTypedName","src":"790:9:25","type":""},{"name":"value0","nativeSrc":"801:6:25","nodeType":"YulTypedName","src":"801:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"812:4:25","nodeType":"YulTypedName","src":"812:4:25","type":""}],"src":"705:218:25"},{"body":{"nativeSrc":"998:156:25","nodeType":"YulBlock","src":"998:156:25","statements":[{"body":{"nativeSrc":"1044:16:25","nodeType":"YulBlock","src":"1044:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1053:1:25","nodeType":"YulLiteral","src":"1053:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1056:1:25","nodeType":"YulLiteral","src":"1056:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1046:6:25","nodeType":"YulIdentifier","src":"1046:6:25"},"nativeSrc":"1046:12:25","nodeType":"YulFunctionCall","src":"1046:12:25"},"nativeSrc":"1046:12:25","nodeType":"YulExpressionStatement","src":"1046:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1019:7:25","nodeType":"YulIdentifier","src":"1019:7:25"},{"name":"headStart","nativeSrc":"1028:9:25","nodeType":"YulIdentifier","src":"1028:9:25"}],"functionName":{"name":"sub","nativeSrc":"1015:3:25","nodeType":"YulIdentifier","src":"1015:3:25"},"nativeSrc":"1015:23:25","nodeType":"YulFunctionCall","src":"1015:23:25"},{"kind":"number","nativeSrc":"1040:2:25","nodeType":"YulLiteral","src":"1040:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1011:3:25","nodeType":"YulIdentifier","src":"1011:3:25"},"nativeSrc":"1011:32:25","nodeType":"YulFunctionCall","src":"1011:32:25"},"nativeSrc":"1008:52:25","nodeType":"YulIf","src":"1008:52:25"},{"nativeSrc":"1069:14:25","nodeType":"YulVariableDeclaration","src":"1069:14:25","value":{"kind":"number","nativeSrc":"1082:1:25","nodeType":"YulLiteral","src":"1082:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1073:5:25","nodeType":"YulTypedName","src":"1073:5:25","type":""}]},{"nativeSrc":"1092:32:25","nodeType":"YulAssignment","src":"1092:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1114:9:25","nodeType":"YulIdentifier","src":"1114:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"1101:12:25","nodeType":"YulIdentifier","src":"1101:12:25"},"nativeSrc":"1101:23:25","nodeType":"YulFunctionCall","src":"1101:23:25"},"variableNames":[{"name":"value","nativeSrc":"1092:5:25","nodeType":"YulIdentifier","src":"1092:5:25"}]},{"nativeSrc":"1133:15:25","nodeType":"YulAssignment","src":"1133:15:25","value":{"name":"value","nativeSrc":"1143:5:25","nodeType":"YulIdentifier","src":"1143:5:25"},"variableNames":[{"name":"value0","nativeSrc":"1133:6:25","nodeType":"YulIdentifier","src":"1133:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"928:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"964:9:25","nodeType":"YulTypedName","src":"964:9:25","type":""},{"name":"dataEnd","nativeSrc":"975:7:25","nodeType":"YulTypedName","src":"975:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"987:6:25","nodeType":"YulTypedName","src":"987:6:25","type":""}],"src":"928:226:25"},{"body":{"nativeSrc":"1260:76:25","nodeType":"YulBlock","src":"1260:76:25","statements":[{"nativeSrc":"1270:26:25","nodeType":"YulAssignment","src":"1270:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1282:9:25","nodeType":"YulIdentifier","src":"1282:9:25"},{"kind":"number","nativeSrc":"1293:2:25","nodeType":"YulLiteral","src":"1293:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1278:3:25","nodeType":"YulIdentifier","src":"1278:3:25"},"nativeSrc":"1278:18:25","nodeType":"YulFunctionCall","src":"1278:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1270:4:25","nodeType":"YulIdentifier","src":"1270:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1312:9:25","nodeType":"YulIdentifier","src":"1312:9:25"},{"name":"value0","nativeSrc":"1323:6:25","nodeType":"YulIdentifier","src":"1323:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1305:6:25","nodeType":"YulIdentifier","src":"1305:6:25"},"nativeSrc":"1305:25:25","nodeType":"YulFunctionCall","src":"1305:25:25"},"nativeSrc":"1305:25:25","nodeType":"YulExpressionStatement","src":"1305:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"1159:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:25","nodeType":"YulTypedName","src":"1229:9:25","type":""},{"name":"value0","nativeSrc":"1240:6:25","nodeType":"YulTypedName","src":"1240:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1251:4:25","nodeType":"YulTypedName","src":"1251:4:25","type":""}],"src":"1159:177:25"},{"body":{"nativeSrc":"1390:124:25","nodeType":"YulBlock","src":"1390:124:25","statements":[{"nativeSrc":"1400:29:25","nodeType":"YulAssignment","src":"1400:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1422:6:25","nodeType":"YulIdentifier","src":"1422:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1409:12:25","nodeType":"YulIdentifier","src":"1409:12:25"},"nativeSrc":"1409:20:25","nodeType":"YulFunctionCall","src":"1409:20:25"},"variableNames":[{"name":"value","nativeSrc":"1400:5:25","nodeType":"YulIdentifier","src":"1400:5:25"}]},{"body":{"nativeSrc":"1492:16:25","nodeType":"YulBlock","src":"1492:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1501:1:25","nodeType":"YulLiteral","src":"1501:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1504:1:25","nodeType":"YulLiteral","src":"1504:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1494:6:25","nodeType":"YulIdentifier","src":"1494:6:25"},"nativeSrc":"1494:12:25","nodeType":"YulFunctionCall","src":"1494:12:25"},"nativeSrc":"1494:12:25","nodeType":"YulExpressionStatement","src":"1494:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1451:5:25","nodeType":"YulIdentifier","src":"1451:5:25"},{"arguments":[{"name":"value","nativeSrc":"1462:5:25","nodeType":"YulIdentifier","src":"1462:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1477:3:25","nodeType":"YulLiteral","src":"1477:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1482:1:25","nodeType":"YulLiteral","src":"1482:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1473:3:25","nodeType":"YulIdentifier","src":"1473:3:25"},"nativeSrc":"1473:11:25","nodeType":"YulFunctionCall","src":"1473:11:25"},{"kind":"number","nativeSrc":"1486:1:25","nodeType":"YulLiteral","src":"1486:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1469:3:25","nodeType":"YulIdentifier","src":"1469:3:25"},"nativeSrc":"1469:19:25","nodeType":"YulFunctionCall","src":"1469:19:25"}],"functionName":{"name":"and","nativeSrc":"1458:3:25","nodeType":"YulIdentifier","src":"1458:3:25"},"nativeSrc":"1458:31:25","nodeType":"YulFunctionCall","src":"1458:31:25"}],"functionName":{"name":"eq","nativeSrc":"1448:2:25","nodeType":"YulIdentifier","src":"1448:2:25"},"nativeSrc":"1448:42:25","nodeType":"YulFunctionCall","src":"1448:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1441:6:25","nodeType":"YulIdentifier","src":"1441:6:25"},"nativeSrc":"1441:50:25","nodeType":"YulFunctionCall","src":"1441:50:25"},"nativeSrc":"1438:70:25","nodeType":"YulIf","src":"1438:70:25"}]},"name":"abi_decode_address","nativeSrc":"1341:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1369:6:25","nodeType":"YulTypedName","src":"1369:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1380:5:25","nodeType":"YulTypedName","src":"1380:5:25","type":""}],"src":"1341:173:25"},{"body":{"nativeSrc":"1623:270:25","nodeType":"YulBlock","src":"1623:270:25","statements":[{"body":{"nativeSrc":"1669:16:25","nodeType":"YulBlock","src":"1669:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1678:1:25","nodeType":"YulLiteral","src":"1678:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1681:1:25","nodeType":"YulLiteral","src":"1681:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1671:6:25","nodeType":"YulIdentifier","src":"1671:6:25"},"nativeSrc":"1671:12:25","nodeType":"YulFunctionCall","src":"1671:12:25"},"nativeSrc":"1671:12:25","nodeType":"YulExpressionStatement","src":"1671:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1644:7:25","nodeType":"YulIdentifier","src":"1644:7:25"},{"name":"headStart","nativeSrc":"1653:9:25","nodeType":"YulIdentifier","src":"1653:9:25"}],"functionName":{"name":"sub","nativeSrc":"1640:3:25","nodeType":"YulIdentifier","src":"1640:3:25"},"nativeSrc":"1640:23:25","nodeType":"YulFunctionCall","src":"1640:23:25"},{"kind":"number","nativeSrc":"1665:2:25","nodeType":"YulLiteral","src":"1665:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1636:3:25","nodeType":"YulIdentifier","src":"1636:3:25"},"nativeSrc":"1636:32:25","nodeType":"YulFunctionCall","src":"1636:32:25"},"nativeSrc":"1633:52:25","nodeType":"YulIf","src":"1633:52:25"},{"nativeSrc":"1694:39:25","nodeType":"YulAssignment","src":"1694:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1723:9:25","nodeType":"YulIdentifier","src":"1723:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1704:18:25","nodeType":"YulIdentifier","src":"1704:18:25"},"nativeSrc":"1704:29:25","nodeType":"YulFunctionCall","src":"1704:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1694:6:25","nodeType":"YulIdentifier","src":"1694:6:25"}]},{"nativeSrc":"1742:48:25","nodeType":"YulAssignment","src":"1742:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1775:9:25","nodeType":"YulIdentifier","src":"1775:9:25"},{"kind":"number","nativeSrc":"1786:2:25","nodeType":"YulLiteral","src":"1786:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1771:3:25","nodeType":"YulIdentifier","src":"1771:3:25"},"nativeSrc":"1771:18:25","nodeType":"YulFunctionCall","src":"1771:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1752:18:25","nodeType":"YulIdentifier","src":"1752:18:25"},"nativeSrc":"1752:38:25","nodeType":"YulFunctionCall","src":"1752:38:25"},"variableNames":[{"name":"value1","nativeSrc":"1742:6:25","nodeType":"YulIdentifier","src":"1742:6:25"}]},{"nativeSrc":"1799:14:25","nodeType":"YulVariableDeclaration","src":"1799:14:25","value":{"kind":"number","nativeSrc":"1812:1:25","nodeType":"YulLiteral","src":"1812:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1803:5:25","nodeType":"YulTypedName","src":"1803:5:25","type":""}]},{"nativeSrc":"1822:41:25","nodeType":"YulAssignment","src":"1822:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1848:9:25","nodeType":"YulIdentifier","src":"1848:9:25"},{"kind":"number","nativeSrc":"1859:2:25","nodeType":"YulLiteral","src":"1859:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1844:3:25","nodeType":"YulIdentifier","src":"1844:3:25"},"nativeSrc":"1844:18:25","nodeType":"YulFunctionCall","src":"1844:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"1831:12:25","nodeType":"YulIdentifier","src":"1831:12:25"},"nativeSrc":"1831:32:25","nodeType":"YulFunctionCall","src":"1831:32:25"},"variableNames":[{"name":"value","nativeSrc":"1822:5:25","nodeType":"YulIdentifier","src":"1822:5:25"}]},{"nativeSrc":"1872:15:25","nodeType":"YulAssignment","src":"1872:15:25","value":{"name":"value","nativeSrc":"1882:5:25","nodeType":"YulIdentifier","src":"1882:5:25"},"variableNames":[{"name":"value2","nativeSrc":"1872:6:25","nodeType":"YulIdentifier","src":"1872:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1519:374:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1573:9:25","nodeType":"YulTypedName","src":"1573:9:25","type":""},{"name":"dataEnd","nativeSrc":"1584:7:25","nodeType":"YulTypedName","src":"1584:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1596:6:25","nodeType":"YulTypedName","src":"1596:6:25","type":""},{"name":"value1","nativeSrc":"1604:6:25","nodeType":"YulTypedName","src":"1604:6:25","type":""},{"name":"value2","nativeSrc":"1612:6:25","nodeType":"YulTypedName","src":"1612:6:25","type":""}],"src":"1519:374:25"},{"body":{"nativeSrc":"1985:213:25","nodeType":"YulBlock","src":"1985:213:25","statements":[{"body":{"nativeSrc":"2031:16:25","nodeType":"YulBlock","src":"2031:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2040:1:25","nodeType":"YulLiteral","src":"2040:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2043:1:25","nodeType":"YulLiteral","src":"2043:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2033:6:25","nodeType":"YulIdentifier","src":"2033:6:25"},"nativeSrc":"2033:12:25","nodeType":"YulFunctionCall","src":"2033:12:25"},"nativeSrc":"2033:12:25","nodeType":"YulExpressionStatement","src":"2033:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2006:7:25","nodeType":"YulIdentifier","src":"2006:7:25"},{"name":"headStart","nativeSrc":"2015:9:25","nodeType":"YulIdentifier","src":"2015:9:25"}],"functionName":{"name":"sub","nativeSrc":"2002:3:25","nodeType":"YulIdentifier","src":"2002:3:25"},"nativeSrc":"2002:23:25","nodeType":"YulFunctionCall","src":"2002:23:25"},{"kind":"number","nativeSrc":"2027:2:25","nodeType":"YulLiteral","src":"2027:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1998:3:25","nodeType":"YulIdentifier","src":"1998:3:25"},"nativeSrc":"1998:32:25","nodeType":"YulFunctionCall","src":"1998:32:25"},"nativeSrc":"1995:52:25","nodeType":"YulIf","src":"1995:52:25"},{"nativeSrc":"2056:14:25","nodeType":"YulVariableDeclaration","src":"2056:14:25","value":{"kind":"number","nativeSrc":"2069:1:25","nodeType":"YulLiteral","src":"2069:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2060:5:25","nodeType":"YulTypedName","src":"2060:5:25","type":""}]},{"nativeSrc":"2079:32:25","nodeType":"YulAssignment","src":"2079:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2101:9:25","nodeType":"YulIdentifier","src":"2101:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2088:12:25","nodeType":"YulIdentifier","src":"2088:12:25"},"nativeSrc":"2088:23:25","nodeType":"YulFunctionCall","src":"2088:23:25"},"variableNames":[{"name":"value","nativeSrc":"2079:5:25","nodeType":"YulIdentifier","src":"2079:5:25"}]},{"nativeSrc":"2120:15:25","nodeType":"YulAssignment","src":"2120:15:25","value":{"name":"value","nativeSrc":"2130:5:25","nodeType":"YulIdentifier","src":"2130:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2120:6:25","nodeType":"YulIdentifier","src":"2120:6:25"}]},{"nativeSrc":"2144:48:25","nodeType":"YulAssignment","src":"2144:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2177:9:25","nodeType":"YulIdentifier","src":"2177:9:25"},{"kind":"number","nativeSrc":"2188:2:25","nodeType":"YulLiteral","src":"2188:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2173:3:25","nodeType":"YulIdentifier","src":"2173:3:25"},"nativeSrc":"2173:18:25","nodeType":"YulFunctionCall","src":"2173:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2154:18:25","nodeType":"YulIdentifier","src":"2154:18:25"},"nativeSrc":"2154:38:25","nodeType":"YulFunctionCall","src":"2154:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2144:6:25","nodeType":"YulIdentifier","src":"2144:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"1898:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1943:9:25","nodeType":"YulTypedName","src":"1943:9:25","type":""},{"name":"dataEnd","nativeSrc":"1954:7:25","nodeType":"YulTypedName","src":"1954:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1966:6:25","nodeType":"YulTypedName","src":"1966:6:25","type":""},{"name":"value1","nativeSrc":"1974:6:25","nodeType":"YulTypedName","src":"1974:6:25","type":""}],"src":"1898:300:25"},{"body":{"nativeSrc":"2324:374:25","nodeType":"YulBlock","src":"2324:374:25","statements":[{"body":{"nativeSrc":"2371:16:25","nodeType":"YulBlock","src":"2371:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2380:1:25","nodeType":"YulLiteral","src":"2380:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2383:1:25","nodeType":"YulLiteral","src":"2383:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2373:6:25","nodeType":"YulIdentifier","src":"2373:6:25"},"nativeSrc":"2373:12:25","nodeType":"YulFunctionCall","src":"2373:12:25"},"nativeSrc":"2373:12:25","nodeType":"YulExpressionStatement","src":"2373:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2345:7:25","nodeType":"YulIdentifier","src":"2345:7:25"},{"name":"headStart","nativeSrc":"2354:9:25","nodeType":"YulIdentifier","src":"2354:9:25"}],"functionName":{"name":"sub","nativeSrc":"2341:3:25","nodeType":"YulIdentifier","src":"2341:3:25"},"nativeSrc":"2341:23:25","nodeType":"YulFunctionCall","src":"2341:23:25"},{"kind":"number","nativeSrc":"2366:3:25","nodeType":"YulLiteral","src":"2366:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2337:3:25","nodeType":"YulIdentifier","src":"2337:3:25"},"nativeSrc":"2337:33:25","nodeType":"YulFunctionCall","src":"2337:33:25"},"nativeSrc":"2334:53:25","nodeType":"YulIf","src":"2334:53:25"},{"nativeSrc":"2396:39:25","nodeType":"YulAssignment","src":"2396:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2425:9:25","nodeType":"YulIdentifier","src":"2425:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2406:18:25","nodeType":"YulIdentifier","src":"2406:18:25"},"nativeSrc":"2406:29:25","nodeType":"YulFunctionCall","src":"2406:29:25"},"variableNames":[{"name":"value0","nativeSrc":"2396:6:25","nodeType":"YulIdentifier","src":"2396:6:25"}]},{"nativeSrc":"2444:48:25","nodeType":"YulAssignment","src":"2444:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2477:9:25","nodeType":"YulIdentifier","src":"2477:9:25"},{"kind":"number","nativeSrc":"2488:2:25","nodeType":"YulLiteral","src":"2488:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2473:3:25","nodeType":"YulIdentifier","src":"2473:3:25"},"nativeSrc":"2473:18:25","nodeType":"YulFunctionCall","src":"2473:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2454:18:25","nodeType":"YulIdentifier","src":"2454:18:25"},"nativeSrc":"2454:38:25","nodeType":"YulFunctionCall","src":"2454:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2444:6:25","nodeType":"YulIdentifier","src":"2444:6:25"}]},{"nativeSrc":"2501:14:25","nodeType":"YulVariableDeclaration","src":"2501:14:25","value":{"kind":"number","nativeSrc":"2514:1:25","nodeType":"YulLiteral","src":"2514:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2505:5:25","nodeType":"YulTypedName","src":"2505:5:25","type":""}]},{"nativeSrc":"2524:41:25","nodeType":"YulAssignment","src":"2524:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2550:9:25","nodeType":"YulIdentifier","src":"2550:9:25"},{"kind":"number","nativeSrc":"2561:2:25","nodeType":"YulLiteral","src":"2561:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2546:3:25","nodeType":"YulIdentifier","src":"2546:3:25"},"nativeSrc":"2546:18:25","nodeType":"YulFunctionCall","src":"2546:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2533:12:25","nodeType":"YulIdentifier","src":"2533:12:25"},"nativeSrc":"2533:32:25","nodeType":"YulFunctionCall","src":"2533:32:25"},"variableNames":[{"name":"value","nativeSrc":"2524:5:25","nodeType":"YulIdentifier","src":"2524:5:25"}]},{"nativeSrc":"2574:15:25","nodeType":"YulAssignment","src":"2574:15:25","value":{"name":"value","nativeSrc":"2584:5:25","nodeType":"YulIdentifier","src":"2584:5:25"},"variableNames":[{"name":"value2","nativeSrc":"2574:6:25","nodeType":"YulIdentifier","src":"2574:6:25"}]},{"nativeSrc":"2598:16:25","nodeType":"YulVariableDeclaration","src":"2598:16:25","value":{"kind":"number","nativeSrc":"2613:1:25","nodeType":"YulLiteral","src":"2613:1:25","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"2602:7:25","nodeType":"YulTypedName","src":"2602:7:25","type":""}]},{"nativeSrc":"2623:43:25","nodeType":"YulAssignment","src":"2623:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2651:9:25","nodeType":"YulIdentifier","src":"2651:9:25"},{"kind":"number","nativeSrc":"2662:2:25","nodeType":"YulLiteral","src":"2662:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2647:3:25","nodeType":"YulIdentifier","src":"2647:3:25"},"nativeSrc":"2647:18:25","nodeType":"YulFunctionCall","src":"2647:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2634:12:25","nodeType":"YulIdentifier","src":"2634:12:25"},"nativeSrc":"2634:32:25","nodeType":"YulFunctionCall","src":"2634:32:25"},"variableNames":[{"name":"value_1","nativeSrc":"2623:7:25","nodeType":"YulIdentifier","src":"2623:7:25"}]},{"nativeSrc":"2675:17:25","nodeType":"YulAssignment","src":"2675:17:25","value":{"name":"value_1","nativeSrc":"2685:7:25","nodeType":"YulIdentifier","src":"2685:7:25"},"variableNames":[{"name":"value3","nativeSrc":"2675:6:25","nodeType":"YulIdentifier","src":"2675:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nativeSrc":"2203:495:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2266:9:25","nodeType":"YulTypedName","src":"2266:9:25","type":""},{"name":"dataEnd","nativeSrc":"2277:7:25","nodeType":"YulTypedName","src":"2277:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2289:6:25","nodeType":"YulTypedName","src":"2289:6:25","type":""},{"name":"value1","nativeSrc":"2297:6:25","nodeType":"YulTypedName","src":"2297:6:25","type":""},{"name":"value2","nativeSrc":"2305:6:25","nodeType":"YulTypedName","src":"2305:6:25","type":""},{"name":"value3","nativeSrc":"2313:6:25","nodeType":"YulTypedName","src":"2313:6:25","type":""}],"src":"2203:495:25"},{"body":{"nativeSrc":"2822:102:25","nodeType":"YulBlock","src":"2822:102:25","statements":[{"nativeSrc":"2832:26:25","nodeType":"YulAssignment","src":"2832:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2844:9:25","nodeType":"YulIdentifier","src":"2844:9:25"},{"kind":"number","nativeSrc":"2855:2:25","nodeType":"YulLiteral","src":"2855:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2840:3:25","nodeType":"YulIdentifier","src":"2840:3:25"},"nativeSrc":"2840:18:25","nodeType":"YulFunctionCall","src":"2840:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2832:4:25","nodeType":"YulIdentifier","src":"2832:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2874:9:25","nodeType":"YulIdentifier","src":"2874:9:25"},{"arguments":[{"name":"value0","nativeSrc":"2889:6:25","nodeType":"YulIdentifier","src":"2889:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2905:3:25","nodeType":"YulLiteral","src":"2905:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"2910:1:25","nodeType":"YulLiteral","src":"2910:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2901:3:25","nodeType":"YulIdentifier","src":"2901:3:25"},"nativeSrc":"2901:11:25","nodeType":"YulFunctionCall","src":"2901:11:25"},{"kind":"number","nativeSrc":"2914:1:25","nodeType":"YulLiteral","src":"2914:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2897:3:25","nodeType":"YulIdentifier","src":"2897:3:25"},"nativeSrc":"2897:19:25","nodeType":"YulFunctionCall","src":"2897:19:25"}],"functionName":{"name":"and","nativeSrc":"2885:3:25","nodeType":"YulIdentifier","src":"2885:3:25"},"nativeSrc":"2885:32:25","nodeType":"YulFunctionCall","src":"2885:32:25"}],"functionName":{"name":"mstore","nativeSrc":"2867:6:25","nodeType":"YulIdentifier","src":"2867:6:25"},"nativeSrc":"2867:51:25","nodeType":"YulFunctionCall","src":"2867:51:25"},"nativeSrc":"2867:51:25","nodeType":"YulExpressionStatement","src":"2867:51:25"}]},"name":"abi_encode_tuple_t_contract$_CXPTToken_$6929__to_t_address__fromStack_reversed","nativeSrc":"2703:221:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2791:9:25","nodeType":"YulTypedName","src":"2791:9:25","type":""},{"name":"value0","nativeSrc":"2802:6:25","nodeType":"YulTypedName","src":"2802:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2813:4:25","nodeType":"YulTypedName","src":"2813:4:25","type":""}],"src":"2703:221:25"},{"body":{"nativeSrc":"2999:116:25","nodeType":"YulBlock","src":"2999:116:25","statements":[{"body":{"nativeSrc":"3045:16:25","nodeType":"YulBlock","src":"3045:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:25","nodeType":"YulLiteral","src":"3054:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:25","nodeType":"YulLiteral","src":"3057:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:25","nodeType":"YulIdentifier","src":"3047:6:25"},"nativeSrc":"3047:12:25","nodeType":"YulFunctionCall","src":"3047:12:25"},"nativeSrc":"3047:12:25","nodeType":"YulExpressionStatement","src":"3047:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3020:7:25","nodeType":"YulIdentifier","src":"3020:7:25"},{"name":"headStart","nativeSrc":"3029:9:25","nodeType":"YulIdentifier","src":"3029:9:25"}],"functionName":{"name":"sub","nativeSrc":"3016:3:25","nodeType":"YulIdentifier","src":"3016:3:25"},"nativeSrc":"3016:23:25","nodeType":"YulFunctionCall","src":"3016:23:25"},{"kind":"number","nativeSrc":"3041:2:25","nodeType":"YulLiteral","src":"3041:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3012:3:25","nodeType":"YulIdentifier","src":"3012:3:25"},"nativeSrc":"3012:32:25","nodeType":"YulFunctionCall","src":"3012:32:25"},"nativeSrc":"3009:52:25","nodeType":"YulIf","src":"3009:52:25"},{"nativeSrc":"3070:39:25","nodeType":"YulAssignment","src":"3070:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3099:9:25","nodeType":"YulIdentifier","src":"3099:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3080:18:25","nodeType":"YulIdentifier","src":"3080:18:25"},"nativeSrc":"3080:29:25","nodeType":"YulFunctionCall","src":"3080:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3070:6:25","nodeType":"YulIdentifier","src":"3070:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2929:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2965:9:25","nodeType":"YulTypedName","src":"2965:9:25","type":""},{"name":"dataEnd","nativeSrc":"2976:7:25","nodeType":"YulTypedName","src":"2976:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2988:6:25","nodeType":"YulTypedName","src":"2988:6:25","type":""}],"src":"2929:186:25"},{"body":{"nativeSrc":"3207:213:25","nodeType":"YulBlock","src":"3207:213:25","statements":[{"body":{"nativeSrc":"3253:16:25","nodeType":"YulBlock","src":"3253:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3262:1:25","nodeType":"YulLiteral","src":"3262:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3265:1:25","nodeType":"YulLiteral","src":"3265:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3255:6:25","nodeType":"YulIdentifier","src":"3255:6:25"},"nativeSrc":"3255:12:25","nodeType":"YulFunctionCall","src":"3255:12:25"},"nativeSrc":"3255:12:25","nodeType":"YulExpressionStatement","src":"3255:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3228:7:25","nodeType":"YulIdentifier","src":"3228:7:25"},{"name":"headStart","nativeSrc":"3237:9:25","nodeType":"YulIdentifier","src":"3237:9:25"}],"functionName":{"name":"sub","nativeSrc":"3224:3:25","nodeType":"YulIdentifier","src":"3224:3:25"},"nativeSrc":"3224:23:25","nodeType":"YulFunctionCall","src":"3224:23:25"},{"kind":"number","nativeSrc":"3249:2:25","nodeType":"YulLiteral","src":"3249:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3220:3:25","nodeType":"YulIdentifier","src":"3220:3:25"},"nativeSrc":"3220:32:25","nodeType":"YulFunctionCall","src":"3220:32:25"},"nativeSrc":"3217:52:25","nodeType":"YulIf","src":"3217:52:25"},{"nativeSrc":"3278:39:25","nodeType":"YulAssignment","src":"3278:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3307:9:25","nodeType":"YulIdentifier","src":"3307:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3288:18:25","nodeType":"YulIdentifier","src":"3288:18:25"},"nativeSrc":"3288:29:25","nodeType":"YulFunctionCall","src":"3288:29:25"},"variableNames":[{"name":"value0","nativeSrc":"3278:6:25","nodeType":"YulIdentifier","src":"3278:6:25"}]},{"nativeSrc":"3326:14:25","nodeType":"YulVariableDeclaration","src":"3326:14:25","value":{"kind":"number","nativeSrc":"3339:1:25","nodeType":"YulLiteral","src":"3339:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3330:5:25","nodeType":"YulTypedName","src":"3330:5:25","type":""}]},{"nativeSrc":"3349:41:25","nodeType":"YulAssignment","src":"3349:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3375:9:25","nodeType":"YulIdentifier","src":"3375:9:25"},{"kind":"number","nativeSrc":"3386:2:25","nodeType":"YulLiteral","src":"3386:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3371:3:25","nodeType":"YulIdentifier","src":"3371:3:25"},"nativeSrc":"3371:18:25","nodeType":"YulFunctionCall","src":"3371:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"3358:12:25","nodeType":"YulIdentifier","src":"3358:12:25"},"nativeSrc":"3358:32:25","nodeType":"YulFunctionCall","src":"3358:32:25"},"variableNames":[{"name":"value","nativeSrc":"3349:5:25","nodeType":"YulIdentifier","src":"3349:5:25"}]},{"nativeSrc":"3399:15:25","nodeType":"YulAssignment","src":"3399:15:25","value":{"name":"value","nativeSrc":"3409:5:25","nodeType":"YulIdentifier","src":"3409:5:25"},"variableNames":[{"name":"value1","nativeSrc":"3399:6:25","nodeType":"YulIdentifier","src":"3399:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3120:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3165:9:25","nodeType":"YulTypedName","src":"3165:9:25","type":""},{"name":"dataEnd","nativeSrc":"3176:7:25","nodeType":"YulTypedName","src":"3176:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3188:6:25","nodeType":"YulTypedName","src":"3188:6:25","type":""},{"name":"value1","nativeSrc":"3196:6:25","nodeType":"YulTypedName","src":"3196:6:25","type":""}],"src":"3120:300:25"},{"body":{"nativeSrc":"3512:259:25","nodeType":"YulBlock","src":"3512:259:25","statements":[{"body":{"nativeSrc":"3558:16:25","nodeType":"YulBlock","src":"3558:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3567:1:25","nodeType":"YulLiteral","src":"3567:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3570:1:25","nodeType":"YulLiteral","src":"3570:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3560:6:25","nodeType":"YulIdentifier","src":"3560:6:25"},"nativeSrc":"3560:12:25","nodeType":"YulFunctionCall","src":"3560:12:25"},"nativeSrc":"3560:12:25","nodeType":"YulExpressionStatement","src":"3560:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3533:7:25","nodeType":"YulIdentifier","src":"3533:7:25"},{"name":"headStart","nativeSrc":"3542:9:25","nodeType":"YulIdentifier","src":"3542:9:25"}],"functionName":{"name":"sub","nativeSrc":"3529:3:25","nodeType":"YulIdentifier","src":"3529:3:25"},"nativeSrc":"3529:23:25","nodeType":"YulFunctionCall","src":"3529:23:25"},{"kind":"number","nativeSrc":"3554:2:25","nodeType":"YulLiteral","src":"3554:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3525:3:25","nodeType":"YulIdentifier","src":"3525:3:25"},"nativeSrc":"3525:32:25","nodeType":"YulFunctionCall","src":"3525:32:25"},"nativeSrc":"3522:52:25","nodeType":"YulIf","src":"3522:52:25"},{"nativeSrc":"3583:14:25","nodeType":"YulVariableDeclaration","src":"3583:14:25","value":{"kind":"number","nativeSrc":"3596:1:25","nodeType":"YulLiteral","src":"3596:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3587:5:25","nodeType":"YulTypedName","src":"3587:5:25","type":""}]},{"nativeSrc":"3606:32:25","nodeType":"YulAssignment","src":"3606:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3628:9:25","nodeType":"YulIdentifier","src":"3628:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3615:12:25","nodeType":"YulIdentifier","src":"3615:12:25"},"nativeSrc":"3615:23:25","nodeType":"YulFunctionCall","src":"3615:23:25"},"variableNames":[{"name":"value","nativeSrc":"3606:5:25","nodeType":"YulIdentifier","src":"3606:5:25"}]},{"nativeSrc":"3647:15:25","nodeType":"YulAssignment","src":"3647:15:25","value":{"name":"value","nativeSrc":"3657:5:25","nodeType":"YulIdentifier","src":"3657:5:25"},"variableNames":[{"name":"value0","nativeSrc":"3647:6:25","nodeType":"YulIdentifier","src":"3647:6:25"}]},{"nativeSrc":"3671:16:25","nodeType":"YulVariableDeclaration","src":"3671:16:25","value":{"kind":"number","nativeSrc":"3686:1:25","nodeType":"YulLiteral","src":"3686:1:25","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"3675:7:25","nodeType":"YulTypedName","src":"3675:7:25","type":""}]},{"nativeSrc":"3696:43:25","nodeType":"YulAssignment","src":"3696:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3724:9:25","nodeType":"YulIdentifier","src":"3724:9:25"},{"kind":"number","nativeSrc":"3735:2:25","nodeType":"YulLiteral","src":"3735:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3720:3:25","nodeType":"YulIdentifier","src":"3720:3:25"},"nativeSrc":"3720:18:25","nodeType":"YulFunctionCall","src":"3720:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"3707:12:25","nodeType":"YulIdentifier","src":"3707:12:25"},"nativeSrc":"3707:32:25","nodeType":"YulFunctionCall","src":"3707:32:25"},"variableNames":[{"name":"value_1","nativeSrc":"3696:7:25","nodeType":"YulIdentifier","src":"3696:7:25"}]},{"nativeSrc":"3748:17:25","nodeType":"YulAssignment","src":"3748:17:25","value":{"name":"value_1","nativeSrc":"3758:7:25","nodeType":"YulIdentifier","src":"3758:7:25"},"variableNames":[{"name":"value1","nativeSrc":"3748:6:25","nodeType":"YulIdentifier","src":"3748:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"3425:346:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3470:9:25","nodeType":"YulTypedName","src":"3470:9:25","type":""},{"name":"dataEnd","nativeSrc":"3481:7:25","nodeType":"YulTypedName","src":"3481:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3493:6:25","nodeType":"YulTypedName","src":"3493:6:25","type":""},{"name":"value1","nativeSrc":"3501:6:25","nodeType":"YulTypedName","src":"3501:6:25","type":""}],"src":"3425:346:25"},{"body":{"nativeSrc":"3927:486:25","nodeType":"YulBlock","src":"3927:486:25","statements":[{"nativeSrc":"3937:32:25","nodeType":"YulVariableDeclaration","src":"3937:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3955:9:25","nodeType":"YulIdentifier","src":"3955:9:25"},{"kind":"number","nativeSrc":"3966:2:25","nodeType":"YulLiteral","src":"3966:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3951:3:25","nodeType":"YulIdentifier","src":"3951:3:25"},"nativeSrc":"3951:18:25","nodeType":"YulFunctionCall","src":"3951:18:25"},"variables":[{"name":"tail_1","nativeSrc":"3941:6:25","nodeType":"YulTypedName","src":"3941:6:25","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3985:9:25","nodeType":"YulIdentifier","src":"3985:9:25"},{"kind":"number","nativeSrc":"3996:2:25","nodeType":"YulLiteral","src":"3996:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3978:6:25","nodeType":"YulIdentifier","src":"3978:6:25"},"nativeSrc":"3978:21:25","nodeType":"YulFunctionCall","src":"3978:21:25"},"nativeSrc":"3978:21:25","nodeType":"YulExpressionStatement","src":"3978:21:25"},{"nativeSrc":"4008:17:25","nodeType":"YulVariableDeclaration","src":"4008:17:25","value":{"name":"tail_1","nativeSrc":"4019:6:25","nodeType":"YulIdentifier","src":"4019:6:25"},"variables":[{"name":"pos","nativeSrc":"4012:3:25","nodeType":"YulTypedName","src":"4012:3:25","type":""}]},{"nativeSrc":"4034:27:25","nodeType":"YulVariableDeclaration","src":"4034:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"4054:6:25","nodeType":"YulIdentifier","src":"4054:6:25"}],"functionName":{"name":"mload","nativeSrc":"4048:5:25","nodeType":"YulIdentifier","src":"4048:5:25"},"nativeSrc":"4048:13:25","nodeType":"YulFunctionCall","src":"4048:13:25"},"variables":[{"name":"length","nativeSrc":"4038:6:25","nodeType":"YulTypedName","src":"4038:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"4077:6:25","nodeType":"YulIdentifier","src":"4077:6:25"},{"name":"length","nativeSrc":"4085:6:25","nodeType":"YulIdentifier","src":"4085:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4070:6:25","nodeType":"YulIdentifier","src":"4070:6:25"},"nativeSrc":"4070:22:25","nodeType":"YulFunctionCall","src":"4070:22:25"},"nativeSrc":"4070:22:25","nodeType":"YulExpressionStatement","src":"4070:22:25"},{"nativeSrc":"4101:25:25","nodeType":"YulAssignment","src":"4101:25:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4112:9:25","nodeType":"YulIdentifier","src":"4112:9:25"},{"kind":"number","nativeSrc":"4123:2:25","nodeType":"YulLiteral","src":"4123:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4108:3:25","nodeType":"YulIdentifier","src":"4108:3:25"},"nativeSrc":"4108:18:25","nodeType":"YulFunctionCall","src":"4108:18:25"},"variableNames":[{"name":"pos","nativeSrc":"4101:3:25","nodeType":"YulIdentifier","src":"4101:3:25"}]},{"nativeSrc":"4135:29:25","nodeType":"YulVariableDeclaration","src":"4135:29:25","value":{"arguments":[{"name":"value0","nativeSrc":"4153:6:25","nodeType":"YulIdentifier","src":"4153:6:25"},{"kind":"number","nativeSrc":"4161:2:25","nodeType":"YulLiteral","src":"4161:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4149:3:25","nodeType":"YulIdentifier","src":"4149:3:25"},"nativeSrc":"4149:15:25","nodeType":"YulFunctionCall","src":"4149:15:25"},"variables":[{"name":"srcPtr","nativeSrc":"4139:6:25","nodeType":"YulTypedName","src":"4139:6:25","type":""}]},{"nativeSrc":"4173:10:25","nodeType":"YulVariableDeclaration","src":"4173:10:25","value":{"kind":"number","nativeSrc":"4182:1:25","nodeType":"YulLiteral","src":"4182:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4177:1:25","nodeType":"YulTypedName","src":"4177:1:25","type":""}]},{"body":{"nativeSrc":"4241:146:25","nodeType":"YulBlock","src":"4241:146:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4262:3:25","nodeType":"YulIdentifier","src":"4262:3:25"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"4277:6:25","nodeType":"YulIdentifier","src":"4277:6:25"}],"functionName":{"name":"mload","nativeSrc":"4271:5:25","nodeType":"YulIdentifier","src":"4271:5:25"},"nativeSrc":"4271:13:25","nodeType":"YulFunctionCall","src":"4271:13:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4294:3:25","nodeType":"YulLiteral","src":"4294:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4299:1:25","nodeType":"YulLiteral","src":"4299:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4290:3:25","nodeType":"YulIdentifier","src":"4290:3:25"},"nativeSrc":"4290:11:25","nodeType":"YulFunctionCall","src":"4290:11:25"},{"kind":"number","nativeSrc":"4303:1:25","nodeType":"YulLiteral","src":"4303:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4286:3:25","nodeType":"YulIdentifier","src":"4286:3:25"},"nativeSrc":"4286:19:25","nodeType":"YulFunctionCall","src":"4286:19:25"}],"functionName":{"name":"and","nativeSrc":"4267:3:25","nodeType":"YulIdentifier","src":"4267:3:25"},"nativeSrc":"4267:39:25","nodeType":"YulFunctionCall","src":"4267:39:25"}],"functionName":{"name":"mstore","nativeSrc":"4255:6:25","nodeType":"YulIdentifier","src":"4255:6:25"},"nativeSrc":"4255:52:25","nodeType":"YulFunctionCall","src":"4255:52:25"},"nativeSrc":"4255:52:25","nodeType":"YulExpressionStatement","src":"4255:52:25"},{"nativeSrc":"4320:19:25","nodeType":"YulAssignment","src":"4320:19:25","value":{"arguments":[{"name":"pos","nativeSrc":"4331:3:25","nodeType":"YulIdentifier","src":"4331:3:25"},{"kind":"number","nativeSrc":"4336:2:25","nodeType":"YulLiteral","src":"4336:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4327:3:25","nodeType":"YulIdentifier","src":"4327:3:25"},"nativeSrc":"4327:12:25","nodeType":"YulFunctionCall","src":"4327:12:25"},"variableNames":[{"name":"pos","nativeSrc":"4320:3:25","nodeType":"YulIdentifier","src":"4320:3:25"}]},{"nativeSrc":"4352:25:25","nodeType":"YulAssignment","src":"4352:25:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4366:6:25","nodeType":"YulIdentifier","src":"4366:6:25"},{"kind":"number","nativeSrc":"4374:2:25","nodeType":"YulLiteral","src":"4374:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4362:3:25","nodeType":"YulIdentifier","src":"4362:3:25"},"nativeSrc":"4362:15:25","nodeType":"YulFunctionCall","src":"4362:15:25"},"variableNames":[{"name":"srcPtr","nativeSrc":"4352:6:25","nodeType":"YulIdentifier","src":"4352:6:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4203:1:25","nodeType":"YulIdentifier","src":"4203:1:25"},{"name":"length","nativeSrc":"4206:6:25","nodeType":"YulIdentifier","src":"4206:6:25"}],"functionName":{"name":"lt","nativeSrc":"4200:2:25","nodeType":"YulIdentifier","src":"4200:2:25"},"nativeSrc":"4200:13:25","nodeType":"YulFunctionCall","src":"4200:13:25"},"nativeSrc":"4192:195:25","nodeType":"YulForLoop","post":{"nativeSrc":"4214:18:25","nodeType":"YulBlock","src":"4214:18:25","statements":[{"nativeSrc":"4216:14:25","nodeType":"YulAssignment","src":"4216:14:25","value":{"arguments":[{"name":"i","nativeSrc":"4225:1:25","nodeType":"YulIdentifier","src":"4225:1:25"},{"kind":"number","nativeSrc":"4228:1:25","nodeType":"YulLiteral","src":"4228:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4221:3:25","nodeType":"YulIdentifier","src":"4221:3:25"},"nativeSrc":"4221:9:25","nodeType":"YulFunctionCall","src":"4221:9:25"},"variableNames":[{"name":"i","nativeSrc":"4216:1:25","nodeType":"YulIdentifier","src":"4216:1:25"}]}]},"pre":{"nativeSrc":"4196:3:25","nodeType":"YulBlock","src":"4196:3:25","statements":[]},"src":"4192:195:25"},{"nativeSrc":"4396:11:25","nodeType":"YulAssignment","src":"4396:11:25","value":{"name":"pos","nativeSrc":"4404:3:25","nodeType":"YulIdentifier","src":"4404:3:25"},"variableNames":[{"name":"tail","nativeSrc":"4396:4:25","nodeType":"YulIdentifier","src":"4396:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3776:637:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3896:9:25","nodeType":"YulTypedName","src":"3896:9:25","type":""},{"name":"value0","nativeSrc":"3907:6:25","nodeType":"YulTypedName","src":"3907:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3918:4:25","nodeType":"YulTypedName","src":"3918:4:25","type":""}],"src":"3776:637:25"},{"body":{"nativeSrc":"4519:76:25","nodeType":"YulBlock","src":"4519:76:25","statements":[{"nativeSrc":"4529:26:25","nodeType":"YulAssignment","src":"4529:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4541:9:25","nodeType":"YulIdentifier","src":"4541:9:25"},{"kind":"number","nativeSrc":"4552:2:25","nodeType":"YulLiteral","src":"4552:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4537:3:25","nodeType":"YulIdentifier","src":"4537:3:25"},"nativeSrc":"4537:18:25","nodeType":"YulFunctionCall","src":"4537:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4529:4:25","nodeType":"YulIdentifier","src":"4529:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4571:9:25","nodeType":"YulIdentifier","src":"4571:9:25"},{"name":"value0","nativeSrc":"4582:6:25","nodeType":"YulIdentifier","src":"4582:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4564:6:25","nodeType":"YulIdentifier","src":"4564:6:25"},"nativeSrc":"4564:25:25","nodeType":"YulFunctionCall","src":"4564:25:25"},"nativeSrc":"4564:25:25","nodeType":"YulExpressionStatement","src":"4564:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4418:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4488:9:25","nodeType":"YulTypedName","src":"4488:9:25","type":""},{"name":"value0","nativeSrc":"4499:6:25","nodeType":"YulTypedName","src":"4499:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4510:4:25","nodeType":"YulTypedName","src":"4510:4:25","type":""}],"src":"4418:177:25"},{"body":{"nativeSrc":"4670:156:25","nodeType":"YulBlock","src":"4670:156:25","statements":[{"body":{"nativeSrc":"4716:16:25","nodeType":"YulBlock","src":"4716:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4725:1:25","nodeType":"YulLiteral","src":"4725:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4728:1:25","nodeType":"YulLiteral","src":"4728:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4718:6:25","nodeType":"YulIdentifier","src":"4718:6:25"},"nativeSrc":"4718:12:25","nodeType":"YulFunctionCall","src":"4718:12:25"},"nativeSrc":"4718:12:25","nodeType":"YulExpressionStatement","src":"4718:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4691:7:25","nodeType":"YulIdentifier","src":"4691:7:25"},{"name":"headStart","nativeSrc":"4700:9:25","nodeType":"YulIdentifier","src":"4700:9:25"}],"functionName":{"name":"sub","nativeSrc":"4687:3:25","nodeType":"YulIdentifier","src":"4687:3:25"},"nativeSrc":"4687:23:25","nodeType":"YulFunctionCall","src":"4687:23:25"},{"kind":"number","nativeSrc":"4712:2:25","nodeType":"YulLiteral","src":"4712:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4683:3:25","nodeType":"YulIdentifier","src":"4683:3:25"},"nativeSrc":"4683:32:25","nodeType":"YulFunctionCall","src":"4683:32:25"},"nativeSrc":"4680:52:25","nodeType":"YulIf","src":"4680:52:25"},{"nativeSrc":"4741:14:25","nodeType":"YulVariableDeclaration","src":"4741:14:25","value":{"kind":"number","nativeSrc":"4754:1:25","nodeType":"YulLiteral","src":"4754:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4745:5:25","nodeType":"YulTypedName","src":"4745:5:25","type":""}]},{"nativeSrc":"4764:32:25","nodeType":"YulAssignment","src":"4764:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4786:9:25","nodeType":"YulIdentifier","src":"4786:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"4773:12:25","nodeType":"YulIdentifier","src":"4773:12:25"},"nativeSrc":"4773:23:25","nodeType":"YulFunctionCall","src":"4773:23:25"},"variableNames":[{"name":"value","nativeSrc":"4764:5:25","nodeType":"YulIdentifier","src":"4764:5:25"}]},{"nativeSrc":"4805:15:25","nodeType":"YulAssignment","src":"4805:15:25","value":{"name":"value","nativeSrc":"4815:5:25","nodeType":"YulIdentifier","src":"4815:5:25"},"variableNames":[{"name":"value0","nativeSrc":"4805:6:25","nodeType":"YulIdentifier","src":"4805:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4600:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4636:9:25","nodeType":"YulTypedName","src":"4636:9:25","type":""},{"name":"dataEnd","nativeSrc":"4647:7:25","nodeType":"YulTypedName","src":"4647:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4659:6:25","nodeType":"YulTypedName","src":"4659:6:25","type":""}],"src":"4600:226:25"},{"body":{"nativeSrc":"4873:76:25","nodeType":"YulBlock","src":"4873:76:25","statements":[{"body":{"nativeSrc":"4927:16:25","nodeType":"YulBlock","src":"4927:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4936:1:25","nodeType":"YulLiteral","src":"4936:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4939:1:25","nodeType":"YulLiteral","src":"4939:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4929:6:25","nodeType":"YulIdentifier","src":"4929:6:25"},"nativeSrc":"4929:12:25","nodeType":"YulFunctionCall","src":"4929:12:25"},"nativeSrc":"4929:12:25","nodeType":"YulExpressionStatement","src":"4929:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4896:5:25","nodeType":"YulIdentifier","src":"4896:5:25"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4917:5:25","nodeType":"YulIdentifier","src":"4917:5:25"}],"functionName":{"name":"iszero","nativeSrc":"4910:6:25","nodeType":"YulIdentifier","src":"4910:6:25"},"nativeSrc":"4910:13:25","nodeType":"YulFunctionCall","src":"4910:13:25"}],"functionName":{"name":"iszero","nativeSrc":"4903:6:25","nodeType":"YulIdentifier","src":"4903:6:25"},"nativeSrc":"4903:21:25","nodeType":"YulFunctionCall","src":"4903:21:25"}],"functionName":{"name":"eq","nativeSrc":"4893:2:25","nodeType":"YulIdentifier","src":"4893:2:25"},"nativeSrc":"4893:32:25","nodeType":"YulFunctionCall","src":"4893:32:25"}],"functionName":{"name":"iszero","nativeSrc":"4886:6:25","nodeType":"YulIdentifier","src":"4886:6:25"},"nativeSrc":"4886:40:25","nodeType":"YulFunctionCall","src":"4886:40:25"},"nativeSrc":"4883:60:25","nodeType":"YulIf","src":"4883:60:25"}]},"name":"validator_revert_bool","nativeSrc":"4831:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4862:5:25","nodeType":"YulTypedName","src":"4862:5:25","type":""}],"src":"4831:118:25"},{"body":{"nativeSrc":"5055:334:25","nodeType":"YulBlock","src":"5055:334:25","statements":[{"body":{"nativeSrc":"5101:16:25","nodeType":"YulBlock","src":"5101:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5110:1:25","nodeType":"YulLiteral","src":"5110:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5113:1:25","nodeType":"YulLiteral","src":"5113:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5103:6:25","nodeType":"YulIdentifier","src":"5103:6:25"},"nativeSrc":"5103:12:25","nodeType":"YulFunctionCall","src":"5103:12:25"},"nativeSrc":"5103:12:25","nodeType":"YulExpressionStatement","src":"5103:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5076:7:25","nodeType":"YulIdentifier","src":"5076:7:25"},{"name":"headStart","nativeSrc":"5085:9:25","nodeType":"YulIdentifier","src":"5085:9:25"}],"functionName":{"name":"sub","nativeSrc":"5072:3:25","nodeType":"YulIdentifier","src":"5072:3:25"},"nativeSrc":"5072:23:25","nodeType":"YulFunctionCall","src":"5072:23:25"},{"kind":"number","nativeSrc":"5097:2:25","nodeType":"YulLiteral","src":"5097:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5068:3:25","nodeType":"YulIdentifier","src":"5068:3:25"},"nativeSrc":"5068:32:25","nodeType":"YulFunctionCall","src":"5068:32:25"},"nativeSrc":"5065:52:25","nodeType":"YulIf","src":"5065:52:25"},{"nativeSrc":"5126:39:25","nodeType":"YulAssignment","src":"5126:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5155:9:25","nodeType":"YulIdentifier","src":"5155:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5136:18:25","nodeType":"YulIdentifier","src":"5136:18:25"},"nativeSrc":"5136:29:25","nodeType":"YulFunctionCall","src":"5136:29:25"},"variableNames":[{"name":"value0","nativeSrc":"5126:6:25","nodeType":"YulIdentifier","src":"5126:6:25"}]},{"nativeSrc":"5174:14:25","nodeType":"YulVariableDeclaration","src":"5174:14:25","value":{"kind":"number","nativeSrc":"5187:1:25","nodeType":"YulLiteral","src":"5187:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5178:5:25","nodeType":"YulTypedName","src":"5178:5:25","type":""}]},{"nativeSrc":"5197:41:25","nodeType":"YulAssignment","src":"5197:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5223:9:25","nodeType":"YulIdentifier","src":"5223:9:25"},{"kind":"number","nativeSrc":"5234:2:25","nodeType":"YulLiteral","src":"5234:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5219:3:25","nodeType":"YulIdentifier","src":"5219:3:25"},"nativeSrc":"5219:18:25","nodeType":"YulFunctionCall","src":"5219:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5206:12:25","nodeType":"YulIdentifier","src":"5206:12:25"},"nativeSrc":"5206:32:25","nodeType":"YulFunctionCall","src":"5206:32:25"},"variableNames":[{"name":"value","nativeSrc":"5197:5:25","nodeType":"YulIdentifier","src":"5197:5:25"}]},{"nativeSrc":"5247:15:25","nodeType":"YulAssignment","src":"5247:15:25","value":{"name":"value","nativeSrc":"5257:5:25","nodeType":"YulIdentifier","src":"5257:5:25"},"variableNames":[{"name":"value1","nativeSrc":"5247:6:25","nodeType":"YulIdentifier","src":"5247:6:25"}]},{"nativeSrc":"5271:47:25","nodeType":"YulVariableDeclaration","src":"5271:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5303:9:25","nodeType":"YulIdentifier","src":"5303:9:25"},{"kind":"number","nativeSrc":"5314:2:25","nodeType":"YulLiteral","src":"5314:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5299:3:25","nodeType":"YulIdentifier","src":"5299:3:25"},"nativeSrc":"5299:18:25","nodeType":"YulFunctionCall","src":"5299:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5286:12:25","nodeType":"YulIdentifier","src":"5286:12:25"},"nativeSrc":"5286:32:25","nodeType":"YulFunctionCall","src":"5286:32:25"},"variables":[{"name":"value_1","nativeSrc":"5275:7:25","nodeType":"YulTypedName","src":"5275:7:25","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"5349:7:25","nodeType":"YulIdentifier","src":"5349:7:25"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"5327:21:25","nodeType":"YulIdentifier","src":"5327:21:25"},"nativeSrc":"5327:30:25","nodeType":"YulFunctionCall","src":"5327:30:25"},"nativeSrc":"5327:30:25","nodeType":"YulExpressionStatement","src":"5327:30:25"},{"nativeSrc":"5366:17:25","nodeType":"YulAssignment","src":"5366:17:25","value":{"name":"value_1","nativeSrc":"5376:7:25","nodeType":"YulIdentifier","src":"5376:7:25"},"variableNames":[{"name":"value2","nativeSrc":"5366:6:25","nodeType":"YulIdentifier","src":"5366:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bool","nativeSrc":"4954:435:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5005:9:25","nodeType":"YulTypedName","src":"5005:9:25","type":""},{"name":"dataEnd","nativeSrc":"5016:7:25","nodeType":"YulTypedName","src":"5016:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5028:6:25","nodeType":"YulTypedName","src":"5028:6:25","type":""},{"name":"value1","nativeSrc":"5036:6:25","nodeType":"YulTypedName","src":"5036:6:25","type":""},{"name":"value2","nativeSrc":"5044:6:25","nodeType":"YulTypedName","src":"5044:6:25","type":""}],"src":"4954:435:25"},{"body":{"nativeSrc":"5568:176:25","nodeType":"YulBlock","src":"5568:176:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5585:9:25","nodeType":"YulIdentifier","src":"5585:9:25"},{"kind":"number","nativeSrc":"5596:2:25","nodeType":"YulLiteral","src":"5596:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5578:6:25","nodeType":"YulIdentifier","src":"5578:6:25"},"nativeSrc":"5578:21:25","nodeType":"YulFunctionCall","src":"5578:21:25"},"nativeSrc":"5578:21:25","nodeType":"YulExpressionStatement","src":"5578:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5619:9:25","nodeType":"YulIdentifier","src":"5619:9:25"},{"kind":"number","nativeSrc":"5630:2:25","nodeType":"YulLiteral","src":"5630:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5615:3:25","nodeType":"YulIdentifier","src":"5615:3:25"},"nativeSrc":"5615:18:25","nodeType":"YulFunctionCall","src":"5615:18:25"},{"kind":"number","nativeSrc":"5635:2:25","nodeType":"YulLiteral","src":"5635:2:25","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"5608:6:25","nodeType":"YulIdentifier","src":"5608:6:25"},"nativeSrc":"5608:30:25","nodeType":"YulFunctionCall","src":"5608:30:25"},"nativeSrc":"5608:30:25","nodeType":"YulExpressionStatement","src":"5608:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5658:9:25","nodeType":"YulIdentifier","src":"5658:9:25"},{"kind":"number","nativeSrc":"5669:2:25","nodeType":"YulLiteral","src":"5669:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5654:3:25","nodeType":"YulIdentifier","src":"5654:3:25"},"nativeSrc":"5654:18:25","nodeType":"YulFunctionCall","src":"5654:18:25"},{"hexValue":"5661756c743a20496e76616c696420757365722077616c6c6574","kind":"string","nativeSrc":"5674:28:25","nodeType":"YulLiteral","src":"5674:28:25","type":"","value":"Vault: Invalid user wallet"}],"functionName":{"name":"mstore","nativeSrc":"5647:6:25","nodeType":"YulIdentifier","src":"5647:6:25"},"nativeSrc":"5647:56:25","nodeType":"YulFunctionCall","src":"5647:56:25"},"nativeSrc":"5647:56:25","nodeType":"YulExpressionStatement","src":"5647:56:25"},{"nativeSrc":"5712:26:25","nodeType":"YulAssignment","src":"5712:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5724:9:25","nodeType":"YulIdentifier","src":"5724:9:25"},{"kind":"number","nativeSrc":"5735:2:25","nodeType":"YulLiteral","src":"5735:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5720:3:25","nodeType":"YulIdentifier","src":"5720:3:25"},"nativeSrc":"5720:18:25","nodeType":"YulFunctionCall","src":"5720:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5712:4:25","nodeType":"YulIdentifier","src":"5712:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5394:350:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5545:9:25","nodeType":"YulTypedName","src":"5545:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5559:4:25","nodeType":"YulTypedName","src":"5559:4:25","type":""}],"src":"5394:350:25"},{"body":{"nativeSrc":"5923:177:25","nodeType":"YulBlock","src":"5923:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5940:9:25","nodeType":"YulIdentifier","src":"5940:9:25"},{"kind":"number","nativeSrc":"5951:2:25","nodeType":"YulLiteral","src":"5951:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5933:6:25","nodeType":"YulIdentifier","src":"5933:6:25"},"nativeSrc":"5933:21:25","nodeType":"YulFunctionCall","src":"5933:21:25"},"nativeSrc":"5933:21:25","nodeType":"YulExpressionStatement","src":"5933:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5974:9:25","nodeType":"YulIdentifier","src":"5974:9:25"},{"kind":"number","nativeSrc":"5985:2:25","nodeType":"YulLiteral","src":"5985:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5970:3:25","nodeType":"YulIdentifier","src":"5970:3:25"},"nativeSrc":"5970:18:25","nodeType":"YulFunctionCall","src":"5970:18:25"},{"kind":"number","nativeSrc":"5990:2:25","nodeType":"YulLiteral","src":"5990:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"5963:6:25","nodeType":"YulIdentifier","src":"5963:6:25"},"nativeSrc":"5963:30:25","nodeType":"YulFunctionCall","src":"5963:30:25"},"nativeSrc":"5963:30:25","nodeType":"YulExpressionStatement","src":"5963:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6013:9:25","nodeType":"YulIdentifier","src":"6013:9:25"},{"kind":"number","nativeSrc":"6024:2:25","nodeType":"YulLiteral","src":"6024:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6009:3:25","nodeType":"YulIdentifier","src":"6009:3:25"},"nativeSrc":"6009:18:25","nodeType":"YulFunctionCall","src":"6009:18:25"},{"hexValue":"5661756c743a2053796e7468206e6f742072656769737465726564","kind":"string","nativeSrc":"6029:29:25","nodeType":"YulLiteral","src":"6029:29:25","type":"","value":"Vault: Synth not registered"}],"functionName":{"name":"mstore","nativeSrc":"6002:6:25","nodeType":"YulIdentifier","src":"6002:6:25"},"nativeSrc":"6002:57:25","nodeType":"YulFunctionCall","src":"6002:57:25"},"nativeSrc":"6002:57:25","nodeType":"YulExpressionStatement","src":"6002:57:25"},{"nativeSrc":"6068:26:25","nodeType":"YulAssignment","src":"6068:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6080:9:25","nodeType":"YulIdentifier","src":"6080:9:25"},{"kind":"number","nativeSrc":"6091:2:25","nodeType":"YulLiteral","src":"6091:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6076:3:25","nodeType":"YulIdentifier","src":"6076:3:25"},"nativeSrc":"6076:18:25","nodeType":"YulFunctionCall","src":"6076:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6068:4:25","nodeType":"YulIdentifier","src":"6068:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5749:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5900:9:25","nodeType":"YulTypedName","src":"5900:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5914:4:25","nodeType":"YulTypedName","src":"5914:4:25","type":""}],"src":"5749:351:25"},{"body":{"nativeSrc":"6279:180:25","nodeType":"YulBlock","src":"6279:180:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6296:9:25","nodeType":"YulIdentifier","src":"6296:9:25"},{"kind":"number","nativeSrc":"6307:2:25","nodeType":"YulLiteral","src":"6307:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6289:6:25","nodeType":"YulIdentifier","src":"6289:6:25"},"nativeSrc":"6289:21:25","nodeType":"YulFunctionCall","src":"6289:21:25"},"nativeSrc":"6289:21:25","nodeType":"YulExpressionStatement","src":"6289:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6330:9:25","nodeType":"YulIdentifier","src":"6330:9:25"},{"kind":"number","nativeSrc":"6341:2:25","nodeType":"YulLiteral","src":"6341:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6326:3:25","nodeType":"YulIdentifier","src":"6326:3:25"},"nativeSrc":"6326:18:25","nodeType":"YulFunctionCall","src":"6326:18:25"},{"kind":"number","nativeSrc":"6346:2:25","nodeType":"YulLiteral","src":"6346:2:25","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"6319:6:25","nodeType":"YulIdentifier","src":"6319:6:25"},"nativeSrc":"6319:30:25","nodeType":"YulFunctionCall","src":"6319:30:25"},"nativeSrc":"6319:30:25","nodeType":"YulExpressionStatement","src":"6319:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6369:9:25","nodeType":"YulIdentifier","src":"6369:9:25"},{"kind":"number","nativeSrc":"6380:2:25","nodeType":"YulLiteral","src":"6380:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6365:3:25","nodeType":"YulIdentifier","src":"6365:3:25"},"nativeSrc":"6365:18:25","nodeType":"YulFunctionCall","src":"6365:18:25"},{"hexValue":"5661756c743a20416d6f756e74206d75737420626520706f736974697665","kind":"string","nativeSrc":"6385:32:25","nodeType":"YulLiteral","src":"6385:32:25","type":"","value":"Vault: Amount must be positive"}],"functionName":{"name":"mstore","nativeSrc":"6358:6:25","nodeType":"YulIdentifier","src":"6358:6:25"},"nativeSrc":"6358:60:25","nodeType":"YulFunctionCall","src":"6358:60:25"},"nativeSrc":"6358:60:25","nodeType":"YulExpressionStatement","src":"6358:60:25"},{"nativeSrc":"6427:26:25","nodeType":"YulAssignment","src":"6427:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6439:9:25","nodeType":"YulIdentifier","src":"6439:9:25"},{"kind":"number","nativeSrc":"6450:2:25","nodeType":"YulLiteral","src":"6450:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6435:3:25","nodeType":"YulIdentifier","src":"6435:3:25"},"nativeSrc":"6435:18:25","nodeType":"YulFunctionCall","src":"6435:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6427:4:25","nodeType":"YulIdentifier","src":"6427:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6105:354:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6256:9:25","nodeType":"YulTypedName","src":"6256:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6270:4:25","nodeType":"YulTypedName","src":"6270:4:25","type":""}],"src":"6105:354:25"},{"body":{"nativeSrc":"6545:103:25","nodeType":"YulBlock","src":"6545:103:25","statements":[{"body":{"nativeSrc":"6591:16:25","nodeType":"YulBlock","src":"6591:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6600:1:25","nodeType":"YulLiteral","src":"6600:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6603:1:25","nodeType":"YulLiteral","src":"6603:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6593:6:25","nodeType":"YulIdentifier","src":"6593:6:25"},"nativeSrc":"6593:12:25","nodeType":"YulFunctionCall","src":"6593:12:25"},"nativeSrc":"6593:12:25","nodeType":"YulExpressionStatement","src":"6593:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6566:7:25","nodeType":"YulIdentifier","src":"6566:7:25"},{"name":"headStart","nativeSrc":"6575:9:25","nodeType":"YulIdentifier","src":"6575:9:25"}],"functionName":{"name":"sub","nativeSrc":"6562:3:25","nodeType":"YulIdentifier","src":"6562:3:25"},"nativeSrc":"6562:23:25","nodeType":"YulFunctionCall","src":"6562:23:25"},{"kind":"number","nativeSrc":"6587:2:25","nodeType":"YulLiteral","src":"6587:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6558:3:25","nodeType":"YulIdentifier","src":"6558:3:25"},"nativeSrc":"6558:32:25","nodeType":"YulFunctionCall","src":"6558:32:25"},"nativeSrc":"6555:52:25","nodeType":"YulIf","src":"6555:52:25"},{"nativeSrc":"6616:26:25","nodeType":"YulAssignment","src":"6616:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6632:9:25","nodeType":"YulIdentifier","src":"6632:9:25"}],"functionName":{"name":"mload","nativeSrc":"6626:5:25","nodeType":"YulIdentifier","src":"6626:5:25"},"nativeSrc":"6626:16:25","nodeType":"YulFunctionCall","src":"6626:16:25"},"variableNames":[{"name":"value0","nativeSrc":"6616:6:25","nodeType":"YulIdentifier","src":"6616:6:25"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"6464:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6511:9:25","nodeType":"YulTypedName","src":"6511:9:25","type":""},{"name":"dataEnd","nativeSrc":"6522:7:25","nodeType":"YulTypedName","src":"6522:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6534:6:25","nodeType":"YulTypedName","src":"6534:6:25","type":""}],"src":"6464:184:25"},{"body":{"nativeSrc":"6827:225:25","nodeType":"YulBlock","src":"6827:225:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6844:9:25","nodeType":"YulIdentifier","src":"6844:9:25"},{"kind":"number","nativeSrc":"6855:2:25","nodeType":"YulLiteral","src":"6855:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6837:6:25","nodeType":"YulIdentifier","src":"6837:6:25"},"nativeSrc":"6837:21:25","nodeType":"YulFunctionCall","src":"6837:21:25"},"nativeSrc":"6837:21:25","nodeType":"YulExpressionStatement","src":"6837:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6878:9:25","nodeType":"YulIdentifier","src":"6878:9:25"},{"kind":"number","nativeSrc":"6889:2:25","nodeType":"YulLiteral","src":"6889:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6874:3:25","nodeType":"YulIdentifier","src":"6874:3:25"},"nativeSrc":"6874:18:25","nodeType":"YulFunctionCall","src":"6874:18:25"},{"kind":"number","nativeSrc":"6894:2:25","nodeType":"YulLiteral","src":"6894:2:25","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"6867:6:25","nodeType":"YulIdentifier","src":"6867:6:25"},"nativeSrc":"6867:30:25","nodeType":"YulFunctionCall","src":"6867:30:25"},"nativeSrc":"6867:30:25","nodeType":"YulExpressionStatement","src":"6867:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6917:9:25","nodeType":"YulIdentifier","src":"6917:9:25"},{"kind":"number","nativeSrc":"6928:2:25","nodeType":"YulLiteral","src":"6928:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6913:3:25","nodeType":"YulIdentifier","src":"6913:3:25"},"nativeSrc":"6913:18:25","nodeType":"YulFunctionCall","src":"6913:18:25"},{"hexValue":"5661756c743a20496e73756666696369656e742073415353455420696e205661","kind":"string","nativeSrc":"6933:34:25","nodeType":"YulLiteral","src":"6933:34:25","type":"","value":"Vault: Insufficient sASSET in Va"}],"functionName":{"name":"mstore","nativeSrc":"6906:6:25","nodeType":"YulIdentifier","src":"6906:6:25"},"nativeSrc":"6906:62:25","nodeType":"YulFunctionCall","src":"6906:62:25"},"nativeSrc":"6906:62:25","nodeType":"YulExpressionStatement","src":"6906:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6988:9:25","nodeType":"YulIdentifier","src":"6988:9:25"},{"kind":"number","nativeSrc":"6999:2:25","nodeType":"YulLiteral","src":"6999:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6984:3:25","nodeType":"YulIdentifier","src":"6984:3:25"},"nativeSrc":"6984:18:25","nodeType":"YulFunctionCall","src":"6984:18:25"},{"hexValue":"756c74","kind":"string","nativeSrc":"7004:5:25","nodeType":"YulLiteral","src":"7004:5:25","type":"","value":"ult"}],"functionName":{"name":"mstore","nativeSrc":"6977:6:25","nodeType":"YulIdentifier","src":"6977:6:25"},"nativeSrc":"6977:33:25","nodeType":"YulFunctionCall","src":"6977:33:25"},"nativeSrc":"6977:33:25","nodeType":"YulExpressionStatement","src":"6977:33:25"},{"nativeSrc":"7019:27:25","nodeType":"YulAssignment","src":"7019:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7031:9:25","nodeType":"YulIdentifier","src":"7031:9:25"},{"kind":"number","nativeSrc":"7042:3:25","nodeType":"YulLiteral","src":"7042:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7027:3:25","nodeType":"YulIdentifier","src":"7027:3:25"},"nativeSrc":"7027:19:25","nodeType":"YulFunctionCall","src":"7027:19:25"},"variableNames":[{"name":"tail","nativeSrc":"7019:4:25","nodeType":"YulIdentifier","src":"7019:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc87779cc149742b4b4cb9bd5dce085bae2d1323af2305e873ac30f5826b8cff__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6653:399:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6804:9:25","nodeType":"YulTypedName","src":"6804:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6818:4:25","nodeType":"YulTypedName","src":"6818:4:25","type":""}],"src":"6653:399:25"},{"body":{"nativeSrc":"7186:145:25","nodeType":"YulBlock","src":"7186:145:25","statements":[{"nativeSrc":"7196:26:25","nodeType":"YulAssignment","src":"7196:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7208:9:25","nodeType":"YulIdentifier","src":"7208:9:25"},{"kind":"number","nativeSrc":"7219:2:25","nodeType":"YulLiteral","src":"7219:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7204:3:25","nodeType":"YulIdentifier","src":"7204:3:25"},"nativeSrc":"7204:18:25","nodeType":"YulFunctionCall","src":"7204:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7196:4:25","nodeType":"YulIdentifier","src":"7196:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7238:9:25","nodeType":"YulIdentifier","src":"7238:9:25"},{"arguments":[{"name":"value0","nativeSrc":"7253:6:25","nodeType":"YulIdentifier","src":"7253:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7269:3:25","nodeType":"YulLiteral","src":"7269:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"7274:1:25","nodeType":"YulLiteral","src":"7274:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7265:3:25","nodeType":"YulIdentifier","src":"7265:3:25"},"nativeSrc":"7265:11:25","nodeType":"YulFunctionCall","src":"7265:11:25"},{"kind":"number","nativeSrc":"7278:1:25","nodeType":"YulLiteral","src":"7278:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7261:3:25","nodeType":"YulIdentifier","src":"7261:3:25"},"nativeSrc":"7261:19:25","nodeType":"YulFunctionCall","src":"7261:19:25"}],"functionName":{"name":"and","nativeSrc":"7249:3:25","nodeType":"YulIdentifier","src":"7249:3:25"},"nativeSrc":"7249:32:25","nodeType":"YulFunctionCall","src":"7249:32:25"}],"functionName":{"name":"mstore","nativeSrc":"7231:6:25","nodeType":"YulIdentifier","src":"7231:6:25"},"nativeSrc":"7231:51:25","nodeType":"YulFunctionCall","src":"7231:51:25"},"nativeSrc":"7231:51:25","nodeType":"YulExpressionStatement","src":"7231:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7302:9:25","nodeType":"YulIdentifier","src":"7302:9:25"},{"kind":"number","nativeSrc":"7313:2:25","nodeType":"YulLiteral","src":"7313:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7298:3:25","nodeType":"YulIdentifier","src":"7298:3:25"},"nativeSrc":"7298:18:25","nodeType":"YulFunctionCall","src":"7298:18:25"},{"name":"value1","nativeSrc":"7318:6:25","nodeType":"YulIdentifier","src":"7318:6:25"}],"functionName":{"name":"mstore","nativeSrc":"7291:6:25","nodeType":"YulIdentifier","src":"7291:6:25"},"nativeSrc":"7291:34:25","nodeType":"YulFunctionCall","src":"7291:34:25"},"nativeSrc":"7291:34:25","nodeType":"YulExpressionStatement","src":"7291:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"7057:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7147:9:25","nodeType":"YulTypedName","src":"7147:9:25","type":""},{"name":"value1","nativeSrc":"7158:6:25","nodeType":"YulTypedName","src":"7158:6:25","type":""},{"name":"value0","nativeSrc":"7166:6:25","nodeType":"YulTypedName","src":"7166:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7177:4:25","nodeType":"YulTypedName","src":"7177:4:25","type":""}],"src":"7057:274:25"},{"body":{"nativeSrc":"7414:167:25","nodeType":"YulBlock","src":"7414:167:25","statements":[{"body":{"nativeSrc":"7460:16:25","nodeType":"YulBlock","src":"7460:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7469:1:25","nodeType":"YulLiteral","src":"7469:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7472:1:25","nodeType":"YulLiteral","src":"7472:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7462:6:25","nodeType":"YulIdentifier","src":"7462:6:25"},"nativeSrc":"7462:12:25","nodeType":"YulFunctionCall","src":"7462:12:25"},"nativeSrc":"7462:12:25","nodeType":"YulExpressionStatement","src":"7462:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7435:7:25","nodeType":"YulIdentifier","src":"7435:7:25"},{"name":"headStart","nativeSrc":"7444:9:25","nodeType":"YulIdentifier","src":"7444:9:25"}],"functionName":{"name":"sub","nativeSrc":"7431:3:25","nodeType":"YulIdentifier","src":"7431:3:25"},"nativeSrc":"7431:23:25","nodeType":"YulFunctionCall","src":"7431:23:25"},{"kind":"number","nativeSrc":"7456:2:25","nodeType":"YulLiteral","src":"7456:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7427:3:25","nodeType":"YulIdentifier","src":"7427:3:25"},"nativeSrc":"7427:32:25","nodeType":"YulFunctionCall","src":"7427:32:25"},"nativeSrc":"7424:52:25","nodeType":"YulIf","src":"7424:52:25"},{"nativeSrc":"7485:29:25","nodeType":"YulVariableDeclaration","src":"7485:29:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7504:9:25","nodeType":"YulIdentifier","src":"7504:9:25"}],"functionName":{"name":"mload","nativeSrc":"7498:5:25","nodeType":"YulIdentifier","src":"7498:5:25"},"nativeSrc":"7498:16:25","nodeType":"YulFunctionCall","src":"7498:16:25"},"variables":[{"name":"value","nativeSrc":"7489:5:25","nodeType":"YulTypedName","src":"7489:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7545:5:25","nodeType":"YulIdentifier","src":"7545:5:25"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"7523:21:25","nodeType":"YulIdentifier","src":"7523:21:25"},"nativeSrc":"7523:28:25","nodeType":"YulFunctionCall","src":"7523:28:25"},"nativeSrc":"7523:28:25","nodeType":"YulExpressionStatement","src":"7523:28:25"},{"nativeSrc":"7560:15:25","nodeType":"YulAssignment","src":"7560:15:25","value":{"name":"value","nativeSrc":"7570:5:25","nodeType":"YulIdentifier","src":"7570:5:25"},"variableNames":[{"name":"value0","nativeSrc":"7560:6:25","nodeType":"YulIdentifier","src":"7560:6:25"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"7336:245:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7380:9:25","nodeType":"YulTypedName","src":"7380:9:25","type":""},{"name":"dataEnd","nativeSrc":"7391:7:25","nodeType":"YulTypedName","src":"7391:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7403:6:25","nodeType":"YulTypedName","src":"7403:6:25","type":""}],"src":"7336:245:25"},{"body":{"nativeSrc":"7760:227:25","nodeType":"YulBlock","src":"7760:227:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7777:9:25","nodeType":"YulIdentifier","src":"7777:9:25"},{"kind":"number","nativeSrc":"7788:2:25","nodeType":"YulLiteral","src":"7788:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7770:6:25","nodeType":"YulIdentifier","src":"7770:6:25"},"nativeSrc":"7770:21:25","nodeType":"YulFunctionCall","src":"7770:21:25"},"nativeSrc":"7770:21:25","nodeType":"YulExpressionStatement","src":"7770:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7811:9:25","nodeType":"YulIdentifier","src":"7811:9:25"},{"kind":"number","nativeSrc":"7822:2:25","nodeType":"YulLiteral","src":"7822:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7807:3:25","nodeType":"YulIdentifier","src":"7807:3:25"},"nativeSrc":"7807:18:25","nodeType":"YulFunctionCall","src":"7807:18:25"},{"kind":"number","nativeSrc":"7827:2:25","nodeType":"YulLiteral","src":"7827:2:25","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"7800:6:25","nodeType":"YulIdentifier","src":"7800:6:25"},"nativeSrc":"7800:30:25","nodeType":"YulFunctionCall","src":"7800:30:25"},"nativeSrc":"7800:30:25","nodeType":"YulExpressionStatement","src":"7800:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7850:9:25","nodeType":"YulIdentifier","src":"7850:9:25"},{"kind":"number","nativeSrc":"7861:2:25","nodeType":"YulLiteral","src":"7861:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7846:3:25","nodeType":"YulIdentifier","src":"7846:3:25"},"nativeSrc":"7846:18:25","nodeType":"YulFunctionCall","src":"7846:18:25"},{"hexValue":"5661756c743a2073415353455420616d6f756e74206d75737420626520706f73","kind":"string","nativeSrc":"7866:34:25","nodeType":"YulLiteral","src":"7866:34:25","type":"","value":"Vault: sASSET amount must be pos"}],"functionName":{"name":"mstore","nativeSrc":"7839:6:25","nodeType":"YulIdentifier","src":"7839:6:25"},"nativeSrc":"7839:62:25","nodeType":"YulFunctionCall","src":"7839:62:25"},"nativeSrc":"7839:62:25","nodeType":"YulExpressionStatement","src":"7839:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7921:9:25","nodeType":"YulIdentifier","src":"7921:9:25"},{"kind":"number","nativeSrc":"7932:2:25","nodeType":"YulLiteral","src":"7932:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7917:3:25","nodeType":"YulIdentifier","src":"7917:3:25"},"nativeSrc":"7917:18:25","nodeType":"YulFunctionCall","src":"7917:18:25"},{"hexValue":"6974697665","kind":"string","nativeSrc":"7937:7:25","nodeType":"YulLiteral","src":"7937:7:25","type":"","value":"itive"}],"functionName":{"name":"mstore","nativeSrc":"7910:6:25","nodeType":"YulIdentifier","src":"7910:6:25"},"nativeSrc":"7910:35:25","nodeType":"YulFunctionCall","src":"7910:35:25"},"nativeSrc":"7910:35:25","nodeType":"YulExpressionStatement","src":"7910:35:25"},{"nativeSrc":"7954:27:25","nodeType":"YulAssignment","src":"7954:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7966:9:25","nodeType":"YulIdentifier","src":"7966:9:25"},{"kind":"number","nativeSrc":"7977:3:25","nodeType":"YulLiteral","src":"7977:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7962:3:25","nodeType":"YulIdentifier","src":"7962:3:25"},"nativeSrc":"7962:19:25","nodeType":"YulFunctionCall","src":"7962:19:25"},"variableNames":[{"name":"tail","nativeSrc":"7954:4:25","nodeType":"YulIdentifier","src":"7954:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7586:401:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7737:9:25","nodeType":"YulTypedName","src":"7737:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7751:4:25","nodeType":"YulTypedName","src":"7751:4:25","type":""}],"src":"7586:401:25"},{"body":{"nativeSrc":"8166:225:25","nodeType":"YulBlock","src":"8166:225:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8183:9:25","nodeType":"YulIdentifier","src":"8183:9:25"},{"kind":"number","nativeSrc":"8194:2:25","nodeType":"YulLiteral","src":"8194:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8176:6:25","nodeType":"YulIdentifier","src":"8176:6:25"},"nativeSrc":"8176:21:25","nodeType":"YulFunctionCall","src":"8176:21:25"},"nativeSrc":"8176:21:25","nodeType":"YulExpressionStatement","src":"8176:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8217:9:25","nodeType":"YulIdentifier","src":"8217:9:25"},{"kind":"number","nativeSrc":"8228:2:25","nodeType":"YulLiteral","src":"8228:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8213:3:25","nodeType":"YulIdentifier","src":"8213:3:25"},"nativeSrc":"8213:18:25","nodeType":"YulFunctionCall","src":"8213:18:25"},{"kind":"number","nativeSrc":"8233:2:25","nodeType":"YulLiteral","src":"8233:2:25","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"8206:6:25","nodeType":"YulIdentifier","src":"8206:6:25"},"nativeSrc":"8206:30:25","nodeType":"YulFunctionCall","src":"8206:30:25"},"nativeSrc":"8206:30:25","nodeType":"YulExpressionStatement","src":"8206:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8256:9:25","nodeType":"YulIdentifier","src":"8256:9:25"},{"kind":"number","nativeSrc":"8267:2:25","nodeType":"YulLiteral","src":"8267:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8252:3:25","nodeType":"YulIdentifier","src":"8252:3:25"},"nativeSrc":"8252:18:25","nodeType":"YulFunctionCall","src":"8252:18:25"},{"hexValue":"5661756c743a205553444320616d6f756e74206d75737420626520706f736974","kind":"string","nativeSrc":"8272:34:25","nodeType":"YulLiteral","src":"8272:34:25","type":"","value":"Vault: USDC amount must be posit"}],"functionName":{"name":"mstore","nativeSrc":"8245:6:25","nodeType":"YulIdentifier","src":"8245:6:25"},"nativeSrc":"8245:62:25","nodeType":"YulFunctionCall","src":"8245:62:25"},"nativeSrc":"8245:62:25","nodeType":"YulExpressionStatement","src":"8245:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8327:9:25","nodeType":"YulIdentifier","src":"8327:9:25"},{"kind":"number","nativeSrc":"8338:2:25","nodeType":"YulLiteral","src":"8338:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8323:3:25","nodeType":"YulIdentifier","src":"8323:3:25"},"nativeSrc":"8323:18:25","nodeType":"YulFunctionCall","src":"8323:18:25"},{"hexValue":"697665","kind":"string","nativeSrc":"8343:5:25","nodeType":"YulLiteral","src":"8343:5:25","type":"","value":"ive"}],"functionName":{"name":"mstore","nativeSrc":"8316:6:25","nodeType":"YulIdentifier","src":"8316:6:25"},"nativeSrc":"8316:33:25","nodeType":"YulFunctionCall","src":"8316:33:25"},"nativeSrc":"8316:33:25","nodeType":"YulExpressionStatement","src":"8316:33:25"},{"nativeSrc":"8358:27:25","nodeType":"YulAssignment","src":"8358:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8370:9:25","nodeType":"YulIdentifier","src":"8370:9:25"},{"kind":"number","nativeSrc":"8381:3:25","nodeType":"YulLiteral","src":"8381:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8366:3:25","nodeType":"YulIdentifier","src":"8366:3:25"},"nativeSrc":"8366:19:25","nodeType":"YulFunctionCall","src":"8366:19:25"},"variableNames":[{"name":"tail","nativeSrc":"8358:4:25","nodeType":"YulIdentifier","src":"8358:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7992:399:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8143:9:25","nodeType":"YulTypedName","src":"8143:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8157:4:25","nodeType":"YulTypedName","src":"8157:4:25","type":""}],"src":"7992:399:25"},{"body":{"nativeSrc":"8570:236:25","nodeType":"YulBlock","src":"8570:236:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8587:9:25","nodeType":"YulIdentifier","src":"8587:9:25"},{"kind":"number","nativeSrc":"8598:2:25","nodeType":"YulLiteral","src":"8598:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8580:6:25","nodeType":"YulIdentifier","src":"8580:6:25"},"nativeSrc":"8580:21:25","nodeType":"YulFunctionCall","src":"8580:21:25"},"nativeSrc":"8580:21:25","nodeType":"YulExpressionStatement","src":"8580:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8621:9:25","nodeType":"YulIdentifier","src":"8621:9:25"},{"kind":"number","nativeSrc":"8632:2:25","nodeType":"YulLiteral","src":"8632:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8617:3:25","nodeType":"YulIdentifier","src":"8617:3:25"},"nativeSrc":"8617:18:25","nodeType":"YulFunctionCall","src":"8617:18:25"},{"kind":"number","nativeSrc":"8637:2:25","nodeType":"YulLiteral","src":"8637:2:25","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"8610:6:25","nodeType":"YulIdentifier","src":"8610:6:25"},"nativeSrc":"8610:30:25","nodeType":"YulFunctionCall","src":"8610:30:25"},"nativeSrc":"8610:30:25","nodeType":"YulExpressionStatement","src":"8610:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8660:9:25","nodeType":"YulIdentifier","src":"8660:9:25"},{"kind":"number","nativeSrc":"8671:2:25","nodeType":"YulLiteral","src":"8671:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8656:3:25","nodeType":"YulIdentifier","src":"8656:3:25"},"nativeSrc":"8656:18:25","nodeType":"YulFunctionCall","src":"8656:18:25"},{"hexValue":"5661756c743a20496e73756666696369656e74205553444320696e205661756c","kind":"string","nativeSrc":"8676:34:25","nodeType":"YulLiteral","src":"8676:34:25","type":"","value":"Vault: Insufficient USDC in Vaul"}],"functionName":{"name":"mstore","nativeSrc":"8649:6:25","nodeType":"YulIdentifier","src":"8649:6:25"},"nativeSrc":"8649:62:25","nodeType":"YulFunctionCall","src":"8649:62:25"},"nativeSrc":"8649:62:25","nodeType":"YulExpressionStatement","src":"8649:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8731:9:25","nodeType":"YulIdentifier","src":"8731:9:25"},{"kind":"number","nativeSrc":"8742:2:25","nodeType":"YulLiteral","src":"8742:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8727:3:25","nodeType":"YulIdentifier","src":"8727:3:25"},"nativeSrc":"8727:18:25","nodeType":"YulFunctionCall","src":"8727:18:25"},{"hexValue":"7420666f722065786368616e6765","kind":"string","nativeSrc":"8747:16:25","nodeType":"YulLiteral","src":"8747:16:25","type":"","value":"t for exchange"}],"functionName":{"name":"mstore","nativeSrc":"8720:6:25","nodeType":"YulIdentifier","src":"8720:6:25"},"nativeSrc":"8720:44:25","nodeType":"YulFunctionCall","src":"8720:44:25"},"nativeSrc":"8720:44:25","nodeType":"YulExpressionStatement","src":"8720:44:25"},{"nativeSrc":"8773:27:25","nodeType":"YulAssignment","src":"8773:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8785:9:25","nodeType":"YulIdentifier","src":"8785:9:25"},{"kind":"number","nativeSrc":"8796:3:25","nodeType":"YulLiteral","src":"8796:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8781:3:25","nodeType":"YulIdentifier","src":"8781:3:25"},"nativeSrc":"8781:19:25","nodeType":"YulFunctionCall","src":"8781:19:25"},"variableNames":[{"name":"tail","nativeSrc":"8773:4:25","nodeType":"YulIdentifier","src":"8773:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ab4ac0d14c19251246b94a3c1a5cb3035cb7649317d129358c0793b3f07cfbe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8396:410:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8547:9:25","nodeType":"YulTypedName","src":"8547:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8561:4:25","nodeType":"YulTypedName","src":"8561:4:25","type":""}],"src":"8396:410:25"},{"body":{"nativeSrc":"8940:119:25","nodeType":"YulBlock","src":"8940:119:25","statements":[{"nativeSrc":"8950:26:25","nodeType":"YulAssignment","src":"8950:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8962:9:25","nodeType":"YulIdentifier","src":"8962:9:25"},{"kind":"number","nativeSrc":"8973:2:25","nodeType":"YulLiteral","src":"8973:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8958:3:25","nodeType":"YulIdentifier","src":"8958:3:25"},"nativeSrc":"8958:18:25","nodeType":"YulFunctionCall","src":"8958:18:25"},"variableNames":[{"name":"tail","nativeSrc":"8950:4:25","nodeType":"YulIdentifier","src":"8950:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8992:9:25","nodeType":"YulIdentifier","src":"8992:9:25"},{"name":"value0","nativeSrc":"9003:6:25","nodeType":"YulIdentifier","src":"9003:6:25"}],"functionName":{"name":"mstore","nativeSrc":"8985:6:25","nodeType":"YulIdentifier","src":"8985:6:25"},"nativeSrc":"8985:25:25","nodeType":"YulFunctionCall","src":"8985:25:25"},"nativeSrc":"8985:25:25","nodeType":"YulExpressionStatement","src":"8985:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9030:9:25","nodeType":"YulIdentifier","src":"9030:9:25"},{"kind":"number","nativeSrc":"9041:2:25","nodeType":"YulLiteral","src":"9041:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9026:3:25","nodeType":"YulIdentifier","src":"9026:3:25"},"nativeSrc":"9026:18:25","nodeType":"YulFunctionCall","src":"9026:18:25"},{"name":"value1","nativeSrc":"9046:6:25","nodeType":"YulIdentifier","src":"9046:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9019:6:25","nodeType":"YulIdentifier","src":"9019:6:25"},"nativeSrc":"9019:34:25","nodeType":"YulFunctionCall","src":"9019:34:25"},"nativeSrc":"9019:34:25","nodeType":"YulExpressionStatement","src":"9019:34:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8811:248:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8901:9:25","nodeType":"YulTypedName","src":"8901:9:25","type":""},{"name":"value1","nativeSrc":"8912:6:25","nodeType":"YulTypedName","src":"8912:6:25","type":""},{"name":"value0","nativeSrc":"8920:6:25","nodeType":"YulTypedName","src":"8920:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8931:4:25","nodeType":"YulTypedName","src":"8931:4:25","type":""}],"src":"8811:248:25"},{"body":{"nativeSrc":"9221:214:25","nodeType":"YulBlock","src":"9221:214:25","statements":[{"nativeSrc":"9231:26:25","nodeType":"YulAssignment","src":"9231:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"9243:9:25","nodeType":"YulIdentifier","src":"9243:9:25"},{"kind":"number","nativeSrc":"9254:2:25","nodeType":"YulLiteral","src":"9254:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9239:3:25","nodeType":"YulIdentifier","src":"9239:3:25"},"nativeSrc":"9239:18:25","nodeType":"YulFunctionCall","src":"9239:18:25"},"variableNames":[{"name":"tail","nativeSrc":"9231:4:25","nodeType":"YulIdentifier","src":"9231:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9273:9:25","nodeType":"YulIdentifier","src":"9273:9:25"},{"arguments":[{"name":"value0","nativeSrc":"9288:6:25","nodeType":"YulIdentifier","src":"9288:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9304:3:25","nodeType":"YulLiteral","src":"9304:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"9309:1:25","nodeType":"YulLiteral","src":"9309:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9300:3:25","nodeType":"YulIdentifier","src":"9300:3:25"},"nativeSrc":"9300:11:25","nodeType":"YulFunctionCall","src":"9300:11:25"},{"kind":"number","nativeSrc":"9313:1:25","nodeType":"YulLiteral","src":"9313:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9296:3:25","nodeType":"YulIdentifier","src":"9296:3:25"},"nativeSrc":"9296:19:25","nodeType":"YulFunctionCall","src":"9296:19:25"}],"functionName":{"name":"and","nativeSrc":"9284:3:25","nodeType":"YulIdentifier","src":"9284:3:25"},"nativeSrc":"9284:32:25","nodeType":"YulFunctionCall","src":"9284:32:25"}],"functionName":{"name":"mstore","nativeSrc":"9266:6:25","nodeType":"YulIdentifier","src":"9266:6:25"},"nativeSrc":"9266:51:25","nodeType":"YulFunctionCall","src":"9266:51:25"},"nativeSrc":"9266:51:25","nodeType":"YulExpressionStatement","src":"9266:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9337:9:25","nodeType":"YulIdentifier","src":"9337:9:25"},{"kind":"number","nativeSrc":"9348:2:25","nodeType":"YulLiteral","src":"9348:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9333:3:25","nodeType":"YulIdentifier","src":"9333:3:25"},"nativeSrc":"9333:18:25","nodeType":"YulFunctionCall","src":"9333:18:25"},{"arguments":[{"name":"value1","nativeSrc":"9357:6:25","nodeType":"YulIdentifier","src":"9357:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9373:3:25","nodeType":"YulLiteral","src":"9373:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"9378:1:25","nodeType":"YulLiteral","src":"9378:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9369:3:25","nodeType":"YulIdentifier","src":"9369:3:25"},"nativeSrc":"9369:11:25","nodeType":"YulFunctionCall","src":"9369:11:25"},{"kind":"number","nativeSrc":"9382:1:25","nodeType":"YulLiteral","src":"9382:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9365:3:25","nodeType":"YulIdentifier","src":"9365:3:25"},"nativeSrc":"9365:19:25","nodeType":"YulFunctionCall","src":"9365:19:25"}],"functionName":{"name":"and","nativeSrc":"9353:3:25","nodeType":"YulIdentifier","src":"9353:3:25"},"nativeSrc":"9353:32:25","nodeType":"YulFunctionCall","src":"9353:32:25"}],"functionName":{"name":"mstore","nativeSrc":"9326:6:25","nodeType":"YulIdentifier","src":"9326:6:25"},"nativeSrc":"9326:60:25","nodeType":"YulFunctionCall","src":"9326:60:25"},"nativeSrc":"9326:60:25","nodeType":"YulExpressionStatement","src":"9326:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9406:9:25","nodeType":"YulIdentifier","src":"9406:9:25"},{"kind":"number","nativeSrc":"9417:2:25","nodeType":"YulLiteral","src":"9417:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9402:3:25","nodeType":"YulIdentifier","src":"9402:3:25"},"nativeSrc":"9402:18:25","nodeType":"YulFunctionCall","src":"9402:18:25"},{"name":"value2","nativeSrc":"9422:6:25","nodeType":"YulIdentifier","src":"9422:6:25"}],"functionName":{"name":"mstore","nativeSrc":"9395:6:25","nodeType":"YulIdentifier","src":"9395:6:25"},"nativeSrc":"9395:34:25","nodeType":"YulFunctionCall","src":"9395:34:25"},"nativeSrc":"9395:34:25","nodeType":"YulExpressionStatement","src":"9395:34:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"9064:371:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9174:9:25","nodeType":"YulTypedName","src":"9174:9:25","type":""},{"name":"value2","nativeSrc":"9185:6:25","nodeType":"YulTypedName","src":"9185:6:25","type":""},{"name":"value1","nativeSrc":"9193:6:25","nodeType":"YulTypedName","src":"9193:6:25","type":""},{"name":"value0","nativeSrc":"9201:6:25","nodeType":"YulTypedName","src":"9201:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9212:4:25","nodeType":"YulTypedName","src":"9212:4:25","type":""}],"src":"9064:371:25"},{"body":{"nativeSrc":"9614:234:25","nodeType":"YulBlock","src":"9614:234:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9631:9:25","nodeType":"YulIdentifier","src":"9631:9:25"},{"kind":"number","nativeSrc":"9642:2:25","nodeType":"YulLiteral","src":"9642:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9624:6:25","nodeType":"YulIdentifier","src":"9624:6:25"},"nativeSrc":"9624:21:25","nodeType":"YulFunctionCall","src":"9624:21:25"},"nativeSrc":"9624:21:25","nodeType":"YulExpressionStatement","src":"9624:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9665:9:25","nodeType":"YulIdentifier","src":"9665:9:25"},{"kind":"number","nativeSrc":"9676:2:25","nodeType":"YulLiteral","src":"9676:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9661:3:25","nodeType":"YulIdentifier","src":"9661:3:25"},"nativeSrc":"9661:18:25","nodeType":"YulFunctionCall","src":"9661:18:25"},{"kind":"number","nativeSrc":"9681:2:25","nodeType":"YulLiteral","src":"9681:2:25","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"9654:6:25","nodeType":"YulIdentifier","src":"9654:6:25"},"nativeSrc":"9654:30:25","nodeType":"YulFunctionCall","src":"9654:30:25"},"nativeSrc":"9654:30:25","nodeType":"YulExpressionStatement","src":"9654:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9704:9:25","nodeType":"YulIdentifier","src":"9704:9:25"},{"kind":"number","nativeSrc":"9715:2:25","nodeType":"YulLiteral","src":"9715:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9700:3:25","nodeType":"YulIdentifier","src":"9700:3:25"},"nativeSrc":"9700:18:25","nodeType":"YulFunctionCall","src":"9700:18:25"},{"hexValue":"5661756c743a2055534443207472616e7366657246726f6d20666f7220657863","kind":"string","nativeSrc":"9720:34:25","nodeType":"YulLiteral","src":"9720:34:25","type":"","value":"Vault: USDC transferFrom for exc"}],"functionName":{"name":"mstore","nativeSrc":"9693:6:25","nodeType":"YulIdentifier","src":"9693:6:25"},"nativeSrc":"9693:62:25","nodeType":"YulFunctionCall","src":"9693:62:25"},"nativeSrc":"9693:62:25","nodeType":"YulExpressionStatement","src":"9693:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9775:9:25","nodeType":"YulIdentifier","src":"9775:9:25"},{"kind":"number","nativeSrc":"9786:2:25","nodeType":"YulLiteral","src":"9786:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9771:3:25","nodeType":"YulIdentifier","src":"9771:3:25"},"nativeSrc":"9771:18:25","nodeType":"YulFunctionCall","src":"9771:18:25"},{"hexValue":"68616e6765206661696c6564","kind":"string","nativeSrc":"9791:14:25","nodeType":"YulLiteral","src":"9791:14:25","type":"","value":"hange failed"}],"functionName":{"name":"mstore","nativeSrc":"9764:6:25","nodeType":"YulIdentifier","src":"9764:6:25"},"nativeSrc":"9764:42:25","nodeType":"YulFunctionCall","src":"9764:42:25"},"nativeSrc":"9764:42:25","nodeType":"YulExpressionStatement","src":"9764:42:25"},{"nativeSrc":"9815:27:25","nodeType":"YulAssignment","src":"9815:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"9827:9:25","nodeType":"YulIdentifier","src":"9827:9:25"},{"kind":"number","nativeSrc":"9838:3:25","nodeType":"YulLiteral","src":"9838:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9823:3:25","nodeType":"YulIdentifier","src":"9823:3:25"},"nativeSrc":"9823:19:25","nodeType":"YulFunctionCall","src":"9823:19:25"},"variableNames":[{"name":"tail","nativeSrc":"9815:4:25","nodeType":"YulIdentifier","src":"9815:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c77d5a563b6680470bb3bf944ade6bdcb6e242efde2c7524bfb416e13059f6c5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9440:408:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9591:9:25","nodeType":"YulTypedName","src":"9591:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9605:4:25","nodeType":"YulTypedName","src":"9605:4:25","type":""}],"src":"9440:408:25"},{"body":{"nativeSrc":"10027:223:25","nodeType":"YulBlock","src":"10027:223:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10044:9:25","nodeType":"YulIdentifier","src":"10044:9:25"},{"kind":"number","nativeSrc":"10055:2:25","nodeType":"YulLiteral","src":"10055:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10037:6:25","nodeType":"YulIdentifier","src":"10037:6:25"},"nativeSrc":"10037:21:25","nodeType":"YulFunctionCall","src":"10037:21:25"},"nativeSrc":"10037:21:25","nodeType":"YulExpressionStatement","src":"10037:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10078:9:25","nodeType":"YulIdentifier","src":"10078:9:25"},{"kind":"number","nativeSrc":"10089:2:25","nodeType":"YulLiteral","src":"10089:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10074:3:25","nodeType":"YulIdentifier","src":"10074:3:25"},"nativeSrc":"10074:18:25","nodeType":"YulFunctionCall","src":"10074:18:25"},{"kind":"number","nativeSrc":"10094:2:25","nodeType":"YulLiteral","src":"10094:2:25","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"10067:6:25","nodeType":"YulIdentifier","src":"10067:6:25"},"nativeSrc":"10067:30:25","nodeType":"YulFunctionCall","src":"10067:30:25"},"nativeSrc":"10067:30:25","nodeType":"YulExpressionStatement","src":"10067:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10117:9:25","nodeType":"YulIdentifier","src":"10117:9:25"},{"kind":"number","nativeSrc":"10128:2:25","nodeType":"YulLiteral","src":"10128:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10113:3:25","nodeType":"YulIdentifier","src":"10113:3:25"},"nativeSrc":"10113:18:25","nodeType":"YulFunctionCall","src":"10113:18:25"},{"hexValue":"5661756c743a20734153534554207472616e7366657246726f6d206661696c65","kind":"string","nativeSrc":"10133:34:25","nodeType":"YulLiteral","src":"10133:34:25","type":"","value":"Vault: sASSET transferFrom faile"}],"functionName":{"name":"mstore","nativeSrc":"10106:6:25","nodeType":"YulIdentifier","src":"10106:6:25"},"nativeSrc":"10106:62:25","nodeType":"YulFunctionCall","src":"10106:62:25"},"nativeSrc":"10106:62:25","nodeType":"YulExpressionStatement","src":"10106:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10188:9:25","nodeType":"YulIdentifier","src":"10188:9:25"},{"kind":"number","nativeSrc":"10199:2:25","nodeType":"YulLiteral","src":"10199:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10184:3:25","nodeType":"YulIdentifier","src":"10184:3:25"},"nativeSrc":"10184:18:25","nodeType":"YulFunctionCall","src":"10184:18:25"},{"hexValue":"64","kind":"string","nativeSrc":"10204:3:25","nodeType":"YulLiteral","src":"10204:3:25","type":"","value":"d"}],"functionName":{"name":"mstore","nativeSrc":"10177:6:25","nodeType":"YulIdentifier","src":"10177:6:25"},"nativeSrc":"10177:31:25","nodeType":"YulFunctionCall","src":"10177:31:25"},"nativeSrc":"10177:31:25","nodeType":"YulExpressionStatement","src":"10177:31:25"},{"nativeSrc":"10217:27:25","nodeType":"YulAssignment","src":"10217:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10229:9:25","nodeType":"YulIdentifier","src":"10229:9:25"},{"kind":"number","nativeSrc":"10240:3:25","nodeType":"YulLiteral","src":"10240:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10225:3:25","nodeType":"YulIdentifier","src":"10225:3:25"},"nativeSrc":"10225:19:25","nodeType":"YulFunctionCall","src":"10225:19:25"},"variableNames":[{"name":"tail","nativeSrc":"10217:4:25","nodeType":"YulIdentifier","src":"10217:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed3db335e9fb351cc5d051bc5d7fd3270fa11914a949176a292335808a9cbaeb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9853:397:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10004:9:25","nodeType":"YulTypedName","src":"10004:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10018:4:25","nodeType":"YulTypedName","src":"10018:4:25","type":""}],"src":"9853:397:25"},{"body":{"nativeSrc":"10429:181:25","nodeType":"YulBlock","src":"10429:181:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10446:9:25","nodeType":"YulIdentifier","src":"10446:9:25"},{"kind":"number","nativeSrc":"10457:2:25","nodeType":"YulLiteral","src":"10457:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10439:6:25","nodeType":"YulIdentifier","src":"10439:6:25"},"nativeSrc":"10439:21:25","nodeType":"YulFunctionCall","src":"10439:21:25"},"nativeSrc":"10439:21:25","nodeType":"YulExpressionStatement","src":"10439:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10480:9:25","nodeType":"YulIdentifier","src":"10480:9:25"},{"kind":"number","nativeSrc":"10491:2:25","nodeType":"YulLiteral","src":"10491:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10476:3:25","nodeType":"YulIdentifier","src":"10476:3:25"},"nativeSrc":"10476:18:25","nodeType":"YulFunctionCall","src":"10476:18:25"},{"kind":"number","nativeSrc":"10496:2:25","nodeType":"YulLiteral","src":"10496:2:25","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"10469:6:25","nodeType":"YulIdentifier","src":"10469:6:25"},"nativeSrc":"10469:30:25","nodeType":"YulFunctionCall","src":"10469:30:25"},"nativeSrc":"10469:30:25","nodeType":"YulExpressionStatement","src":"10469:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10519:9:25","nodeType":"YulIdentifier","src":"10519:9:25"},{"kind":"number","nativeSrc":"10530:2:25","nodeType":"YulLiteral","src":"10530:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10515:3:25","nodeType":"YulIdentifier","src":"10515:3:25"},"nativeSrc":"10515:18:25","nodeType":"YulFunctionCall","src":"10515:18:25"},{"hexValue":"5661756c743a2055534443207472616e7366657246726f6d206661696c6564","kind":"string","nativeSrc":"10535:33:25","nodeType":"YulLiteral","src":"10535:33:25","type":"","value":"Vault: USDC transferFrom failed"}],"functionName":{"name":"mstore","nativeSrc":"10508:6:25","nodeType":"YulIdentifier","src":"10508:6:25"},"nativeSrc":"10508:61:25","nodeType":"YulFunctionCall","src":"10508:61:25"},"nativeSrc":"10508:61:25","nodeType":"YulExpressionStatement","src":"10508:61:25"},{"nativeSrc":"10578:26:25","nodeType":"YulAssignment","src":"10578:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10590:9:25","nodeType":"YulIdentifier","src":"10590:9:25"},{"kind":"number","nativeSrc":"10601:2:25","nodeType":"YulLiteral","src":"10601:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10586:3:25","nodeType":"YulIdentifier","src":"10586:3:25"},"nativeSrc":"10586:18:25","nodeType":"YulFunctionCall","src":"10586:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10578:4:25","nodeType":"YulIdentifier","src":"10578:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d6ae6e04de27a95a55697afc4104c9a57c9f9ed75cc00578b5cb6b42352eb1e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10255:355:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10406:9:25","nodeType":"YulTypedName","src":"10406:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10420:4:25","nodeType":"YulTypedName","src":"10420:4:25","type":""}],"src":"10255:355:25"},{"body":{"nativeSrc":"10789:179:25","nodeType":"YulBlock","src":"10789:179:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10806:9:25","nodeType":"YulIdentifier","src":"10806:9:25"},{"kind":"number","nativeSrc":"10817:2:25","nodeType":"YulLiteral","src":"10817:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10799:6:25","nodeType":"YulIdentifier","src":"10799:6:25"},"nativeSrc":"10799:21:25","nodeType":"YulFunctionCall","src":"10799:21:25"},"nativeSrc":"10799:21:25","nodeType":"YulExpressionStatement","src":"10799:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10840:9:25","nodeType":"YulIdentifier","src":"10840:9:25"},{"kind":"number","nativeSrc":"10851:2:25","nodeType":"YulLiteral","src":"10851:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10836:3:25","nodeType":"YulIdentifier","src":"10836:3:25"},"nativeSrc":"10836:18:25","nodeType":"YulFunctionCall","src":"10836:18:25"},{"kind":"number","nativeSrc":"10856:2:25","nodeType":"YulLiteral","src":"10856:2:25","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"10829:6:25","nodeType":"YulIdentifier","src":"10829:6:25"},"nativeSrc":"10829:30:25","nodeType":"YulFunctionCall","src":"10829:30:25"},"nativeSrc":"10829:30:25","nodeType":"YulExpressionStatement","src":"10829:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10879:9:25","nodeType":"YulIdentifier","src":"10879:9:25"},{"kind":"number","nativeSrc":"10890:2:25","nodeType":"YulLiteral","src":"10890:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10875:3:25","nodeType":"YulIdentifier","src":"10875:3:25"},"nativeSrc":"10875:18:25","nodeType":"YulFunctionCall","src":"10875:18:25"},{"hexValue":"5661756c743a205a65726f206164647265737320666f722073796e7468","kind":"string","nativeSrc":"10895:31:25","nodeType":"YulLiteral","src":"10895:31:25","type":"","value":"Vault: Zero address for synth"}],"functionName":{"name":"mstore","nativeSrc":"10868:6:25","nodeType":"YulIdentifier","src":"10868:6:25"},"nativeSrc":"10868:59:25","nodeType":"YulFunctionCall","src":"10868:59:25"},"nativeSrc":"10868:59:25","nodeType":"YulExpressionStatement","src":"10868:59:25"},{"nativeSrc":"10936:26:25","nodeType":"YulAssignment","src":"10936:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10948:9:25","nodeType":"YulIdentifier","src":"10948:9:25"},{"kind":"number","nativeSrc":"10959:2:25","nodeType":"YulLiteral","src":"10959:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10944:3:25","nodeType":"YulIdentifier","src":"10944:3:25"},"nativeSrc":"10944:18:25","nodeType":"YulFunctionCall","src":"10944:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10936:4:25","nodeType":"YulIdentifier","src":"10936:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7479dc5e57938a430032e96d216888e5f1fdef822747fc2e260d2da3d0d36248__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10615:353:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10766:9:25","nodeType":"YulTypedName","src":"10766:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10780:4:25","nodeType":"YulTypedName","src":"10780:4:25","type":""}],"src":"10615:353:25"},{"body":{"nativeSrc":"11147:233:25","nodeType":"YulBlock","src":"11147:233:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11164:9:25","nodeType":"YulIdentifier","src":"11164:9:25"},{"kind":"number","nativeSrc":"11175:2:25","nodeType":"YulLiteral","src":"11175:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11157:6:25","nodeType":"YulIdentifier","src":"11157:6:25"},"nativeSrc":"11157:21:25","nodeType":"YulFunctionCall","src":"11157:21:25"},"nativeSrc":"11157:21:25","nodeType":"YulExpressionStatement","src":"11157:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11198:9:25","nodeType":"YulIdentifier","src":"11198:9:25"},{"kind":"number","nativeSrc":"11209:2:25","nodeType":"YulLiteral","src":"11209:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11194:3:25","nodeType":"YulIdentifier","src":"11194:3:25"},"nativeSrc":"11194:18:25","nodeType":"YulFunctionCall","src":"11194:18:25"},{"kind":"number","nativeSrc":"11214:2:25","nodeType":"YulLiteral","src":"11214:2:25","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"11187:6:25","nodeType":"YulIdentifier","src":"11187:6:25"},"nativeSrc":"11187:30:25","nodeType":"YulFunctionCall","src":"11187:30:25"},"nativeSrc":"11187:30:25","nodeType":"YulExpressionStatement","src":"11187:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11237:9:25","nodeType":"YulIdentifier","src":"11237:9:25"},{"kind":"number","nativeSrc":"11248:2:25","nodeType":"YulLiteral","src":"11248:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11233:3:25","nodeType":"YulIdentifier","src":"11233:3:25"},"nativeSrc":"11233:18:25","nodeType":"YulFunctionCall","src":"11233:18:25"},{"hexValue":"5661756c743a2046656520726563697069656e742063616e6e6f74206265207a","kind":"string","nativeSrc":"11253:34:25","nodeType":"YulLiteral","src":"11253:34:25","type":"","value":"Vault: Fee recipient cannot be z"}],"functionName":{"name":"mstore","nativeSrc":"11226:6:25","nodeType":"YulIdentifier","src":"11226:6:25"},"nativeSrc":"11226:62:25","nodeType":"YulFunctionCall","src":"11226:62:25"},"nativeSrc":"11226:62:25","nodeType":"YulExpressionStatement","src":"11226:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11308:9:25","nodeType":"YulIdentifier","src":"11308:9:25"},{"kind":"number","nativeSrc":"11319:2:25","nodeType":"YulLiteral","src":"11319:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11304:3:25","nodeType":"YulIdentifier","src":"11304:3:25"},"nativeSrc":"11304:18:25","nodeType":"YulFunctionCall","src":"11304:18:25"},{"hexValue":"65726f2061646472657373","kind":"string","nativeSrc":"11324:13:25","nodeType":"YulLiteral","src":"11324:13:25","type":"","value":"ero address"}],"functionName":{"name":"mstore","nativeSrc":"11297:6:25","nodeType":"YulIdentifier","src":"11297:6:25"},"nativeSrc":"11297:41:25","nodeType":"YulFunctionCall","src":"11297:41:25"},"nativeSrc":"11297:41:25","nodeType":"YulExpressionStatement","src":"11297:41:25"},{"nativeSrc":"11347:27:25","nodeType":"YulAssignment","src":"11347:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11359:9:25","nodeType":"YulIdentifier","src":"11359:9:25"},{"kind":"number","nativeSrc":"11370:3:25","nodeType":"YulLiteral","src":"11370:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11355:3:25","nodeType":"YulIdentifier","src":"11355:3:25"},"nativeSrc":"11355:19:25","nodeType":"YulFunctionCall","src":"11355:19:25"},"variableNames":[{"name":"tail","nativeSrc":"11347:4:25","nodeType":"YulIdentifier","src":"11347:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e116318237572736871ad69c58d3727eddf7d47b8ba25d88d8d7bf40a22ced23__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10973:407:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11124:9:25","nodeType":"YulTypedName","src":"11124:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11138:4:25","nodeType":"YulTypedName","src":"11138:4:25","type":""}],"src":"10973:407:25"},{"body":{"nativeSrc":"11559:224:25","nodeType":"YulBlock","src":"11559:224:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11576:9:25","nodeType":"YulIdentifier","src":"11576:9:25"},{"kind":"number","nativeSrc":"11587:2:25","nodeType":"YulLiteral","src":"11587:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11569:6:25","nodeType":"YulIdentifier","src":"11569:6:25"},"nativeSrc":"11569:21:25","nodeType":"YulFunctionCall","src":"11569:21:25"},"nativeSrc":"11569:21:25","nodeType":"YulExpressionStatement","src":"11569:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11610:9:25","nodeType":"YulIdentifier","src":"11610:9:25"},{"kind":"number","nativeSrc":"11621:2:25","nodeType":"YulLiteral","src":"11621:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11606:3:25","nodeType":"YulIdentifier","src":"11606:3:25"},"nativeSrc":"11606:18:25","nodeType":"YulFunctionCall","src":"11606:18:25"},{"kind":"number","nativeSrc":"11626:2:25","nodeType":"YulLiteral","src":"11626:2:25","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"11599:6:25","nodeType":"YulIdentifier","src":"11599:6:25"},"nativeSrc":"11599:30:25","nodeType":"YulFunctionCall","src":"11599:30:25"},"nativeSrc":"11599:30:25","nodeType":"YulExpressionStatement","src":"11599:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11649:9:25","nodeType":"YulIdentifier","src":"11649:9:25"},{"kind":"number","nativeSrc":"11660:2:25","nodeType":"YulLiteral","src":"11660:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11645:3:25","nodeType":"YulIdentifier","src":"11645:3:25"},"nativeSrc":"11645:18:25","nodeType":"YulFunctionCall","src":"11645:18:25"},{"hexValue":"5661756c743a20496e73756666696369656e7420636f6c6c6563746564206665","kind":"string","nativeSrc":"11665:34:25","nodeType":"YulLiteral","src":"11665:34:25","type":"","value":"Vault: Insufficient collected fe"}],"functionName":{"name":"mstore","nativeSrc":"11638:6:25","nodeType":"YulIdentifier","src":"11638:6:25"},"nativeSrc":"11638:62:25","nodeType":"YulFunctionCall","src":"11638:62:25"},"nativeSrc":"11638:62:25","nodeType":"YulExpressionStatement","src":"11638:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11720:9:25","nodeType":"YulIdentifier","src":"11720:9:25"},{"kind":"number","nativeSrc":"11731:2:25","nodeType":"YulLiteral","src":"11731:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11716:3:25","nodeType":"YulIdentifier","src":"11716:3:25"},"nativeSrc":"11716:18:25","nodeType":"YulFunctionCall","src":"11716:18:25"},{"hexValue":"6573","kind":"string","nativeSrc":"11736:4:25","nodeType":"YulLiteral","src":"11736:4:25","type":"","value":"es"}],"functionName":{"name":"mstore","nativeSrc":"11709:6:25","nodeType":"YulIdentifier","src":"11709:6:25"},"nativeSrc":"11709:32:25","nodeType":"YulFunctionCall","src":"11709:32:25"},"nativeSrc":"11709:32:25","nodeType":"YulExpressionStatement","src":"11709:32:25"},{"nativeSrc":"11750:27:25","nodeType":"YulAssignment","src":"11750:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11762:9:25","nodeType":"YulIdentifier","src":"11762:9:25"},{"kind":"number","nativeSrc":"11773:3:25","nodeType":"YulLiteral","src":"11773:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11758:3:25","nodeType":"YulIdentifier","src":"11758:3:25"},"nativeSrc":"11758:19:25","nodeType":"YulFunctionCall","src":"11758:19:25"},"variableNames":[{"name":"tail","nativeSrc":"11750:4:25","nodeType":"YulIdentifier","src":"11750:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_185445a2dcbbbc5aa0bd1de088f6d94ab416775bdc4b3c651d5225f6541d0a3c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11385:398:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11536:9:25","nodeType":"YulTypedName","src":"11536:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11550:4:25","nodeType":"YulTypedName","src":"11550:4:25","type":""}],"src":"11385:398:25"},{"body":{"nativeSrc":"11962:250:25","nodeType":"YulBlock","src":"11962:250:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11979:9:25","nodeType":"YulIdentifier","src":"11979:9:25"},{"kind":"number","nativeSrc":"11990:2:25","nodeType":"YulLiteral","src":"11990:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11972:6:25","nodeType":"YulIdentifier","src":"11972:6:25"},"nativeSrc":"11972:21:25","nodeType":"YulFunctionCall","src":"11972:21:25"},"nativeSrc":"11972:21:25","nodeType":"YulExpressionStatement","src":"11972:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12013:9:25","nodeType":"YulIdentifier","src":"12013:9:25"},{"kind":"number","nativeSrc":"12024:2:25","nodeType":"YulLiteral","src":"12024:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12009:3:25","nodeType":"YulIdentifier","src":"12009:3:25"},"nativeSrc":"12009:18:25","nodeType":"YulFunctionCall","src":"12009:18:25"},{"kind":"number","nativeSrc":"12029:2:25","nodeType":"YulLiteral","src":"12029:2:25","type":"","value":"60"}],"functionName":{"name":"mstore","nativeSrc":"12002:6:25","nodeType":"YulIdentifier","src":"12002:6:25"},"nativeSrc":"12002:30:25","nodeType":"YulFunctionCall","src":"12002:30:25"},"nativeSrc":"12002:30:25","nodeType":"YulExpressionStatement","src":"12002:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12052:9:25","nodeType":"YulIdentifier","src":"12052:9:25"},{"kind":"number","nativeSrc":"12063:2:25","nodeType":"YulLiteral","src":"12063:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12048:3:25","nodeType":"YulIdentifier","src":"12048:3:25"},"nativeSrc":"12048:18:25","nodeType":"YulFunctionCall","src":"12048:18:25"},{"hexValue":"5661756c743a20496e73756666696369656e7420555344432062616c616e6365","kind":"string","nativeSrc":"12068:34:25","nodeType":"YulLiteral","src":"12068:34:25","type":"","value":"Vault: Insufficient USDC balance"}],"functionName":{"name":"mstore","nativeSrc":"12041:6:25","nodeType":"YulIdentifier","src":"12041:6:25"},"nativeSrc":"12041:62:25","nodeType":"YulFunctionCall","src":"12041:62:25"},"nativeSrc":"12041:62:25","nodeType":"YulExpressionStatement","src":"12041:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12123:9:25","nodeType":"YulIdentifier","src":"12123:9:25"},{"kind":"number","nativeSrc":"12134:2:25","nodeType":"YulLiteral","src":"12134:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12119:3:25","nodeType":"YulIdentifier","src":"12119:3:25"},"nativeSrc":"12119:18:25","nodeType":"YulFunctionCall","src":"12119:18:25"},{"hexValue":"20696e205661756c7420666f7220666565207769746864726177616c","kind":"string","nativeSrc":"12139:30:25","nodeType":"YulLiteral","src":"12139:30:25","type":"","value":" in Vault for fee withdrawal"}],"functionName":{"name":"mstore","nativeSrc":"12112:6:25","nodeType":"YulIdentifier","src":"12112:6:25"},"nativeSrc":"12112:58:25","nodeType":"YulFunctionCall","src":"12112:58:25"},"nativeSrc":"12112:58:25","nodeType":"YulExpressionStatement","src":"12112:58:25"},{"nativeSrc":"12179:27:25","nodeType":"YulAssignment","src":"12179:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12191:9:25","nodeType":"YulIdentifier","src":"12191:9:25"},{"kind":"number","nativeSrc":"12202:3:25","nodeType":"YulLiteral","src":"12202:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12187:3:25","nodeType":"YulIdentifier","src":"12187:3:25"},"nativeSrc":"12187:19:25","nodeType":"YulFunctionCall","src":"12187:19:25"},"variableNames":[{"name":"tail","nativeSrc":"12179:4:25","nodeType":"YulIdentifier","src":"12179:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b56fdf35b0944b7abaa7cc0ff3f36aa6f21016d8094fdbdb06fd85b8d0f57f7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11788:424:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11939:9:25","nodeType":"YulTypedName","src":"11939:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11953:4:25","nodeType":"YulTypedName","src":"11953:4:25","type":""}],"src":"11788:424:25"},{"body":{"nativeSrc":"12249:95:25","nodeType":"YulBlock","src":"12249:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12266:1:25","nodeType":"YulLiteral","src":"12266:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12273:3:25","nodeType":"YulLiteral","src":"12273:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"12278:10:25","nodeType":"YulLiteral","src":"12278:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12269:3:25","nodeType":"YulIdentifier","src":"12269:3:25"},"nativeSrc":"12269:20:25","nodeType":"YulFunctionCall","src":"12269:20:25"}],"functionName":{"name":"mstore","nativeSrc":"12259:6:25","nodeType":"YulIdentifier","src":"12259:6:25"},"nativeSrc":"12259:31:25","nodeType":"YulFunctionCall","src":"12259:31:25"},"nativeSrc":"12259:31:25","nodeType":"YulExpressionStatement","src":"12259:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12306:1:25","nodeType":"YulLiteral","src":"12306:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"12309:4:25","nodeType":"YulLiteral","src":"12309:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"12299:6:25","nodeType":"YulIdentifier","src":"12299:6:25"},"nativeSrc":"12299:15:25","nodeType":"YulFunctionCall","src":"12299:15:25"},"nativeSrc":"12299:15:25","nodeType":"YulExpressionStatement","src":"12299:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12330:1:25","nodeType":"YulLiteral","src":"12330:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"12333:4:25","nodeType":"YulLiteral","src":"12333:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12323:6:25","nodeType":"YulIdentifier","src":"12323:6:25"},"nativeSrc":"12323:15:25","nodeType":"YulFunctionCall","src":"12323:15:25"},"nativeSrc":"12323:15:25","nodeType":"YulExpressionStatement","src":"12323:15:25"}]},"name":"panic_error_0x11","nativeSrc":"12217:127:25","nodeType":"YulFunctionDefinition","src":"12217:127:25"},{"body":{"nativeSrc":"12398:79:25","nodeType":"YulBlock","src":"12398:79:25","statements":[{"nativeSrc":"12408:17:25","nodeType":"YulAssignment","src":"12408:17:25","value":{"arguments":[{"name":"x","nativeSrc":"12420:1:25","nodeType":"YulIdentifier","src":"12420:1:25"},{"name":"y","nativeSrc":"12423:1:25","nodeType":"YulIdentifier","src":"12423:1:25"}],"functionName":{"name":"sub","nativeSrc":"12416:3:25","nodeType":"YulIdentifier","src":"12416:3:25"},"nativeSrc":"12416:9:25","nodeType":"YulFunctionCall","src":"12416:9:25"},"variableNames":[{"name":"diff","nativeSrc":"12408:4:25","nodeType":"YulIdentifier","src":"12408:4:25"}]},{"body":{"nativeSrc":"12449:22:25","nodeType":"YulBlock","src":"12449:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12451:16:25","nodeType":"YulIdentifier","src":"12451:16:25"},"nativeSrc":"12451:18:25","nodeType":"YulFunctionCall","src":"12451:18:25"},"nativeSrc":"12451:18:25","nodeType":"YulExpressionStatement","src":"12451:18:25"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"12440:4:25","nodeType":"YulIdentifier","src":"12440:4:25"},{"name":"x","nativeSrc":"12446:1:25","nodeType":"YulIdentifier","src":"12446:1:25"}],"functionName":{"name":"gt","nativeSrc":"12437:2:25","nodeType":"YulIdentifier","src":"12437:2:25"},"nativeSrc":"12437:11:25","nodeType":"YulFunctionCall","src":"12437:11:25"},"nativeSrc":"12434:37:25","nodeType":"YulIf","src":"12434:37:25"}]},"name":"checked_sub_t_uint256","nativeSrc":"12349:128:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12380:1:25","nodeType":"YulTypedName","src":"12380:1:25","type":""},{"name":"y","nativeSrc":"12383:1:25","nodeType":"YulTypedName","src":"12383:1:25","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"12389:4:25","nodeType":"YulTypedName","src":"12389:4:25","type":""}],"src":"12349:128:25"},{"body":{"nativeSrc":"12530:77:25","nodeType":"YulBlock","src":"12530:77:25","statements":[{"nativeSrc":"12540:16:25","nodeType":"YulAssignment","src":"12540:16:25","value":{"arguments":[{"name":"x","nativeSrc":"12551:1:25","nodeType":"YulIdentifier","src":"12551:1:25"},{"name":"y","nativeSrc":"12554:1:25","nodeType":"YulIdentifier","src":"12554:1:25"}],"functionName":{"name":"add","nativeSrc":"12547:3:25","nodeType":"YulIdentifier","src":"12547:3:25"},"nativeSrc":"12547:9:25","nodeType":"YulFunctionCall","src":"12547:9:25"},"variableNames":[{"name":"sum","nativeSrc":"12540:3:25","nodeType":"YulIdentifier","src":"12540:3:25"}]},{"body":{"nativeSrc":"12579:22:25","nodeType":"YulBlock","src":"12579:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12581:16:25","nodeType":"YulIdentifier","src":"12581:16:25"},"nativeSrc":"12581:18:25","nodeType":"YulFunctionCall","src":"12581:18:25"},"nativeSrc":"12581:18:25","nodeType":"YulExpressionStatement","src":"12581:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12571:1:25","nodeType":"YulIdentifier","src":"12571:1:25"},{"name":"sum","nativeSrc":"12574:3:25","nodeType":"YulIdentifier","src":"12574:3:25"}],"functionName":{"name":"gt","nativeSrc":"12568:2:25","nodeType":"YulIdentifier","src":"12568:2:25"},"nativeSrc":"12568:10:25","nodeType":"YulFunctionCall","src":"12568:10:25"},"nativeSrc":"12565:36:25","nodeType":"YulIf","src":"12565:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"12482:125:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12513:1:25","nodeType":"YulTypedName","src":"12513:1:25","type":""},{"name":"y","nativeSrc":"12516:1:25","nodeType":"YulTypedName","src":"12516:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12522:3:25","nodeType":"YulTypedName","src":"12522:3:25","type":""}],"src":"12482:125:25"},{"body":{"nativeSrc":"12786:223:25","nodeType":"YulBlock","src":"12786:223:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12803:9:25","nodeType":"YulIdentifier","src":"12803:9:25"},{"kind":"number","nativeSrc":"12814:2:25","nodeType":"YulLiteral","src":"12814:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12796:6:25","nodeType":"YulIdentifier","src":"12796:6:25"},"nativeSrc":"12796:21:25","nodeType":"YulFunctionCall","src":"12796:21:25"},"nativeSrc":"12796:21:25","nodeType":"YulExpressionStatement","src":"12796:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12837:9:25","nodeType":"YulIdentifier","src":"12837:9:25"},{"kind":"number","nativeSrc":"12848:2:25","nodeType":"YulLiteral","src":"12848:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12833:3:25","nodeType":"YulIdentifier","src":"12833:3:25"},"nativeSrc":"12833:18:25","nodeType":"YulFunctionCall","src":"12833:18:25"},{"kind":"number","nativeSrc":"12853:2:25","nodeType":"YulLiteral","src":"12853:2:25","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"12826:6:25","nodeType":"YulIdentifier","src":"12826:6:25"},"nativeSrc":"12826:30:25","nodeType":"YulFunctionCall","src":"12826:30:25"},"nativeSrc":"12826:30:25","nodeType":"YulExpressionStatement","src":"12826:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12876:9:25","nodeType":"YulIdentifier","src":"12876:9:25"},{"kind":"number","nativeSrc":"12887:2:25","nodeType":"YulLiteral","src":"12887:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12872:3:25","nodeType":"YulIdentifier","src":"12872:3:25"},"nativeSrc":"12872:18:25","nodeType":"YulFunctionCall","src":"12872:18:25"},{"hexValue":"5661756c743a20496e73756666696369656e74205553444320696e205661756c","kind":"string","nativeSrc":"12892:34:25","nodeType":"YulLiteral","src":"12892:34:25","type":"","value":"Vault: Insufficient USDC in Vaul"}],"functionName":{"name":"mstore","nativeSrc":"12865:6:25","nodeType":"YulIdentifier","src":"12865:6:25"},"nativeSrc":"12865:62:25","nodeType":"YulFunctionCall","src":"12865:62:25"},"nativeSrc":"12865:62:25","nodeType":"YulExpressionStatement","src":"12865:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12947:9:25","nodeType":"YulIdentifier","src":"12947:9:25"},{"kind":"number","nativeSrc":"12958:2:25","nodeType":"YulLiteral","src":"12958:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12943:3:25","nodeType":"YulIdentifier","src":"12943:3:25"},"nativeSrc":"12943:18:25","nodeType":"YulFunctionCall","src":"12943:18:25"},{"hexValue":"74","kind":"string","nativeSrc":"12963:3:25","nodeType":"YulLiteral","src":"12963:3:25","type":"","value":"t"}],"functionName":{"name":"mstore","nativeSrc":"12936:6:25","nodeType":"YulIdentifier","src":"12936:6:25"},"nativeSrc":"12936:31:25","nodeType":"YulFunctionCall","src":"12936:31:25"},"nativeSrc":"12936:31:25","nodeType":"YulExpressionStatement","src":"12936:31:25"},{"nativeSrc":"12976:27:25","nodeType":"YulAssignment","src":"12976:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12988:9:25","nodeType":"YulIdentifier","src":"12988:9:25"},{"kind":"number","nativeSrc":"12999:3:25","nodeType":"YulLiteral","src":"12999:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12984:3:25","nodeType":"YulIdentifier","src":"12984:3:25"},"nativeSrc":"12984:19:25","nodeType":"YulFunctionCall","src":"12984:19:25"},"variableNames":[{"name":"tail","nativeSrc":"12976:4:25","nodeType":"YulIdentifier","src":"12976:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_f08a77ec6099f5cc0b388b1b7f87ebd6a79c089f8810caa9e155e76f4270c1fd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12612:397:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12763:9:25","nodeType":"YulTypedName","src":"12763:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12777:4:25","nodeType":"YulTypedName","src":"12777:4:25","type":""}],"src":"12612:397:25"},{"body":{"nativeSrc":"13143:145:25","nodeType":"YulBlock","src":"13143:145:25","statements":[{"nativeSrc":"13153:26:25","nodeType":"YulAssignment","src":"13153:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"13165:9:25","nodeType":"YulIdentifier","src":"13165:9:25"},{"kind":"number","nativeSrc":"13176:2:25","nodeType":"YulLiteral","src":"13176:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13161:3:25","nodeType":"YulIdentifier","src":"13161:3:25"},"nativeSrc":"13161:18:25","nodeType":"YulFunctionCall","src":"13161:18:25"},"variableNames":[{"name":"tail","nativeSrc":"13153:4:25","nodeType":"YulIdentifier","src":"13153:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13195:9:25","nodeType":"YulIdentifier","src":"13195:9:25"},{"arguments":[{"name":"value0","nativeSrc":"13210:6:25","nodeType":"YulIdentifier","src":"13210:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13226:3:25","nodeType":"YulLiteral","src":"13226:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"13231:1:25","nodeType":"YulLiteral","src":"13231:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13222:3:25","nodeType":"YulIdentifier","src":"13222:3:25"},"nativeSrc":"13222:11:25","nodeType":"YulFunctionCall","src":"13222:11:25"},{"kind":"number","nativeSrc":"13235:1:25","nodeType":"YulLiteral","src":"13235:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13218:3:25","nodeType":"YulIdentifier","src":"13218:3:25"},"nativeSrc":"13218:19:25","nodeType":"YulFunctionCall","src":"13218:19:25"}],"functionName":{"name":"and","nativeSrc":"13206:3:25","nodeType":"YulIdentifier","src":"13206:3:25"},"nativeSrc":"13206:32:25","nodeType":"YulFunctionCall","src":"13206:32:25"}],"functionName":{"name":"mstore","nativeSrc":"13188:6:25","nodeType":"YulIdentifier","src":"13188:6:25"},"nativeSrc":"13188:51:25","nodeType":"YulFunctionCall","src":"13188:51:25"},"nativeSrc":"13188:51:25","nodeType":"YulExpressionStatement","src":"13188:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13259:9:25","nodeType":"YulIdentifier","src":"13259:9:25"},{"kind":"number","nativeSrc":"13270:2:25","nodeType":"YulLiteral","src":"13270:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13255:3:25","nodeType":"YulIdentifier","src":"13255:3:25"},"nativeSrc":"13255:18:25","nodeType":"YulFunctionCall","src":"13255:18:25"},{"name":"value1","nativeSrc":"13275:6:25","nodeType":"YulIdentifier","src":"13275:6:25"}],"functionName":{"name":"mstore","nativeSrc":"13248:6:25","nodeType":"YulIdentifier","src":"13248:6:25"},"nativeSrc":"13248:34:25","nodeType":"YulFunctionCall","src":"13248:34:25"},"nativeSrc":"13248:34:25","nodeType":"YulExpressionStatement","src":"13248:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"13014:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13104:9:25","nodeType":"YulTypedName","src":"13104:9:25","type":""},{"name":"value1","nativeSrc":"13115:6:25","nodeType":"YulTypedName","src":"13115:6:25","type":""},{"name":"value0","nativeSrc":"13123:6:25","nodeType":"YulTypedName","src":"13123:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13134:4:25","nodeType":"YulTypedName","src":"13134:4:25","type":""}],"src":"13014:274:25"},{"body":{"nativeSrc":"13325:95:25","nodeType":"YulBlock","src":"13325:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13342:1:25","nodeType":"YulLiteral","src":"13342:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13349:3:25","nodeType":"YulLiteral","src":"13349:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"13354:10:25","nodeType":"YulLiteral","src":"13354:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13345:3:25","nodeType":"YulIdentifier","src":"13345:3:25"},"nativeSrc":"13345:20:25","nodeType":"YulFunctionCall","src":"13345:20:25"}],"functionName":{"name":"mstore","nativeSrc":"13335:6:25","nodeType":"YulIdentifier","src":"13335:6:25"},"nativeSrc":"13335:31:25","nodeType":"YulFunctionCall","src":"13335:31:25"},"nativeSrc":"13335:31:25","nodeType":"YulExpressionStatement","src":"13335:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13382:1:25","nodeType":"YulLiteral","src":"13382:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"13385:4:25","nodeType":"YulLiteral","src":"13385:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13375:6:25","nodeType":"YulIdentifier","src":"13375:6:25"},"nativeSrc":"13375:15:25","nodeType":"YulFunctionCall","src":"13375:15:25"},"nativeSrc":"13375:15:25","nodeType":"YulExpressionStatement","src":"13375:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13406:1:25","nodeType":"YulLiteral","src":"13406:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13409:4:25","nodeType":"YulLiteral","src":"13409:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13399:6:25","nodeType":"YulIdentifier","src":"13399:6:25"},"nativeSrc":"13399:15:25","nodeType":"YulFunctionCall","src":"13399:15:25"},"nativeSrc":"13399:15:25","nodeType":"YulExpressionStatement","src":"13399:15:25"}]},"name":"panic_error_0x32","nativeSrc":"13293:127:25","nodeType":"YulFunctionDefinition","src":"13293:127:25"},{"body":{"nativeSrc":"13457:95:25","nodeType":"YulBlock","src":"13457:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13474:1:25","nodeType":"YulLiteral","src":"13474:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13481:3:25","nodeType":"YulLiteral","src":"13481:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"13486:10:25","nodeType":"YulLiteral","src":"13486:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13477:3:25","nodeType":"YulIdentifier","src":"13477:3:25"},"nativeSrc":"13477:20:25","nodeType":"YulFunctionCall","src":"13477:20:25"}],"functionName":{"name":"mstore","nativeSrc":"13467:6:25","nodeType":"YulIdentifier","src":"13467:6:25"},"nativeSrc":"13467:31:25","nodeType":"YulFunctionCall","src":"13467:31:25"},"nativeSrc":"13467:31:25","nodeType":"YulExpressionStatement","src":"13467:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13514:1:25","nodeType":"YulLiteral","src":"13514:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"13517:4:25","nodeType":"YulLiteral","src":"13517:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"13507:6:25","nodeType":"YulIdentifier","src":"13507:6:25"},"nativeSrc":"13507:15:25","nodeType":"YulFunctionCall","src":"13507:15:25"},"nativeSrc":"13507:15:25","nodeType":"YulExpressionStatement","src":"13507:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13538:1:25","nodeType":"YulLiteral","src":"13538:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13541:4:25","nodeType":"YulLiteral","src":"13541:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13531:6:25","nodeType":"YulIdentifier","src":"13531:6:25"},"nativeSrc":"13531:15:25","nodeType":"YulFunctionCall","src":"13531:15:25"},"nativeSrc":"13531:15:25","nodeType":"YulExpressionStatement","src":"13531:15:25"}]},"name":"panic_error_0x31","nativeSrc":"13425:127:25","nodeType":"YulFunctionDefinition","src":"13425:127:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1440__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_contract$_CXPTToken_$6929__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_e4f86684a3c014668c751b102df3b2ec81d8e9517e7fa4082d9b079f99db247b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vault: Invalid user wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bed635d41814fc96506f3cd4e70783a5d52c46a963f6636edcbf94c1104a9be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Vault: Synth not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6bc75dbc97cd42438f95422d9bba8c248c7f60d3da9d66e73fe830c2ff043eb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Vault: Amount must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_cc87779cc149742b4b4cb9bd5dce085bae2d1323af2305e873ac30f5826b8cff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Vault: Insufficient sASSET in Va\")\n        mstore(add(headStart, 96), \"ult\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_53f7e62d1811393aa4738186d21cb65b9f7cf2f71a94001e290616193b03a3b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Vault: sASSET amount must be pos\")\n        mstore(add(headStart, 96), \"itive\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70508cd46bcc5f399582dfa28e08e360baa5a2ed748a06e5e962d5200720e8ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Vault: USDC amount must be posit\")\n        mstore(add(headStart, 96), \"ive\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6ab4ac0d14c19251246b94a3c1a5cb3035cb7649317d129358c0793b3f07cfbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Vault: Insufficient USDC in Vaul\")\n        mstore(add(headStart, 96), \"t for exchange\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c77d5a563b6680470bb3bf944ade6bdcb6e242efde2c7524bfb416e13059f6c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Vault: USDC transferFrom for exc\")\n        mstore(add(headStart, 96), \"hange failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed3db335e9fb351cc5d051bc5d7fd3270fa11914a949176a292335808a9cbaeb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Vault: sASSET transferFrom faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7d6ae6e04de27a95a55697afc4104c9a57c9f9ed75cc00578b5cb6b42352eb1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Vault: USDC transferFrom failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7479dc5e57938a430032e96d216888e5f1fdef822747fc2e260d2da3d0d36248__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Vault: Zero address for synth\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e116318237572736871ad69c58d3727eddf7d47b8ba25d88d8d7bf40a22ced23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Vault: Fee recipient cannot be z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_185445a2dcbbbc5aa0bd1de088f6d94ab416775bdc4b3c651d5225f6541d0a3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vault: Insufficient collected fe\")\n        mstore(add(headStart, 96), \"es\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b56fdf35b0944b7abaa7cc0ff3f36aa6f21016d8094fdbdb06fd85b8d0f57f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Vault: Insufficient USDC balance\")\n        mstore(add(headStart, 96), \" in Vault for fee withdrawal\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f08a77ec6099f5cc0b388b1b7f87ebd6a79c089f8810caa9e155e76f4270c1fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Vault: Insufficient USDC in Vaul\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7321":[{"length":32,"start":499},{"length":32,"start":598},{"length":32,"start":2198},{"length":32,"start":2453},{"length":32,"start":2872},{"length":32,"start":3825},{"length":32,"start":4648},{"length":32,"start":4940},{"length":32,"start":5597},{"length":32,"start":5838}],"7324":[{"length":32,"start":557},{"length":32,"start":764},{"length":32,"start":5413}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806375b238fc116100f9578063c50d6dd911610097578063d547741f11610071578063d547741f14610458578063d68ceed81461046b578063ead5d3591461047e578063f36246d11461049157600080fd5b8063c50d6dd914610415578063c70908181461043c578063ca15c8731461044557600080fd5b8063a217fddf116100d3578063a217fddf146103c7578063a3246ad3146103cf578063ace5398a146103ef578063ad3b1b471461040257600080fd5b806375b238fc1461037a5780639010d07c146103a157806391d14854146103b457600080fd5b806336568abe1161016657806344ba2b241161014057806344ba2b241461031e5780634d394279146103315780634e2c151f1461035457806356b22bf21461036757600080fd5b806336568abe146102d15780633ab5ef82146102e45780633fa4d814146102f757600080fd5b806311eac855116101a257806311eac85514610251578063248a9ca3146102785780632a314e05146102a95780632f2ff15d146102be57600080fd5b806301ffc9a7146101c95780630c8a95b2146101f15780630e8f61a71461022b575b600080fd5b6101dc6101d7366004611b64565b6104a6565b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101e8565b7f0000000000000000000000000000000000000000000000000000000000000000610213565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b61029b610286366004611b8e565b60009081526020819052604090206001015490565b6040519081526020016101e8565b6102bc6102b7366004611bc3565b6104d1565b005b6102bc6102cc366004611c00565b610705565b6102bc6102df366004611c00565b610730565b6102bc6102f2366004611c2c565b610768565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102bc61032c366004611c2c565b610a56565b6101dc61033f366004611c6e565b60026020526000908152604090205460ff1681565b6102bc610362366004611bc3565b610caf565b6102bc610375366004611c89565b610e67565b61029b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6102136103af366004611cb3565b610ff0565b6101dc6103c2366004611c00565b61100f565b61029b600081565b6103e26103dd366004611b8e565b611038565b6040516101e89190611cd5565b6102bc6103fd366004611c6e565b611052565b6102bc610410366004611c89565b611120565b61029b7fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a81565b61029b60035481565b61029b610453366004611b8e565b6113f7565b6102bc610466366004611c00565b61140e565b6102bc610479366004611b8e565b611433565b6102bc61048c366004611d2f565b61149b565b61029b600080516020611f3b83398151915281565b60006001600160e01b03198216635a05180f60e01b14806104cb57506104cb82611779565b92915050565b600080516020611f3b8339815191526104e9816117ae565b6001600160a01b0384166105185760405162461bcd60e51b815260040161050f90611d6f565b60405180910390fd5b6001600160a01b03831660009081526002602052604090205460ff166105505760405162461bcd60e51b815260040161050f90611da6565b600082116105705760405162461bcd60e51b815260040161050f90611ddd565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190611e14565b10156106345760405162461bcd60e51b815260206004820152602360248201527f5661756c743a20496e73756666696369656e742073415353455420696e2056616044820152621d5b1d60ea1b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611e2d565b50826001600160a01b0316846001600160a01b0316336001600160a01b03167f1adf7c474f4d4c8c8c445ac7bb8ddfd2ac3bc3d69602e520973e1e130b35d059856040516106f791815260200190565b60405180910390a450505050565b600082815260208190526040902060010154610720816117ae565b61072a83836117bb565b50505050565b6001600160a01b03811633146107595760405163334bd91960e11b815260040160405180910390fd5b61076382826117f0565b505050565b600080516020611f3b833981519152610780816117ae565b6001600160a01b0385166107a65760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03841660009081526002602052604090205460ff166107de5760405162461bcd60e51b815260040161050f90611da6565b600083116107fe5760405162461bcd60e51b815260040161050f90611e4a565b6000821161081e5760405162461bcd60e51b815260040161050f90611e8f565b60405163079cc67960e41b81526001600160a01b038681166004830152602482018590528516906379cc679090604401600060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528492507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa1580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a9190611e14565b101561096f5760405162461bcd60e51b815260206004820152602e60248201527f5661756c743a20496e73756666696369656e74205553444320696e205661756c60448201526d7420666f722065786368616e676560901b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190611e2d565b5060408051848152602081018490526001600160a01b03808716929088169133917f9b25b321600b34289c3cbb5c981301c953b6444e24e29b07642438020357470491015b60405180910390a45050505050565b600080516020611f3b833981519152610a6e816117ae565b6001600160a01b038516610a945760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03841660009081526002602052604090205460ff16610acc5760405162461bcd60e51b815260040161050f90611da6565b60008311610aec5760405162461bcd60e51b815260040161050f90611e8f565b60008211610b0c5760405162461bcd60e51b815260040161050f90611e4a565b6040516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018590527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba59190611e2d565b610c065760405162461bcd60e51b815260206004820152602c60248201527f5661756c743a2055534443207472616e7366657246726f6d20666f722065786360448201526b1a185b99d94819985a5b195960a21b606482015260840161050f565b6040516340c10f1960e01b81526001600160a01b038681166004830152602482018490528516906340c10f1990604401600060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b505060408051868152602081018690526001600160a01b0380891694508916925033917f0f98fef012e390f285dc060967b20ecc02d87aeb79d028669963fa048e07d5bd9101610a47565b600080516020611f3b833981519152610cc7816117ae565b6001600160a01b038416610ced5760405162461bcd60e51b815260040161050f90611d6f565b6001600160a01b03831660009081526002602052604090205460ff16610d255760405162461bcd60e51b815260040161050f90611da6565b60008211610d455760405162461bcd60e51b815260040161050f90611ddd565b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018490528416906323b872dd906064016020604051808303816000875af1158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190611e2d565b610e145760405162461bcd60e51b815260206004820152602160248201527f5661756c743a20734153534554207472616e7366657246726f6d206661696c656044820152601960fa1b606482015260840161050f565b826001600160a01b0316846001600160a01b03167f8f6bb1fe8136c1d257d77e7a1e5be2c656c9971040cbbf7cce283eb69a72989784604051610e5991815260200190565b60405180910390a350505050565b600080516020611f3b833981519152610e7f816117ae565b6001600160a01b038316610ea55760405162461bcd60e51b815260040161050f90611d6f565b60008211610ec55760405162461bcd60e51b815260040161050f90611ddd565b6040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018490527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af1158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e9190611e2d565b610faa5760405162461bcd60e51b815260206004820152601f60248201527f5661756c743a2055534443207472616e7366657246726f6d206661696c656400604482015260640161050f565b6040518281526001600160a01b0384169033907f5a860befdd305e7d99e384272a4b82aab613eab23cc3070774a4a8cc0f168100906020015b60405180910390a3505050565b6000828152600160205260408120611008908361181d565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604090206060906104cb90611829565b7fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a61107c816117ae565b6001600160a01b0382166110d25760405162461bcd60e51b815260206004820152601d60248201527f5661756c743a205a65726f206164647265737320666f722073796e7468000000604482015260640161050f565b6001600160a01b038216600081815260026020526040808220805460ff191660011790555133917fdb3823c581f8b10f079485fcda8dc823145456bf18ccf7606d21afdc5f53a04291a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561114a816117ae565b6001600160a01b0383166111b45760405162461bcd60e51b815260206004820152602b60248201527f5661756c743a2046656520726563697069656e742063616e6e6f74206265207a60448201526a65726f206164647265737360a81b606482015260840161050f565b8160035410156112115760405162461bcd60e51b815260206004820152602260248201527f5661756c743a20496e73756666696369656e7420636f6c6c6563746564206665604482015261657360f01b606482015260840161050f565b6040516370a0823160e01b815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b9190611e14565b101561130f5760405162461bcd60e51b815260206004820152603c60248201527f5661756c743a20496e73756666696369656e7420555344432062616c616e636560448201527f20696e205661756c7420666f7220666565207769746864726177616c00000000606482015260840161050f565b81600360008282546113219190611ee8565b909155505060405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b99190611e2d565b506040518281526001600160a01b0384169033907f5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa890602001610fe3565b60008181526001602052604081206104cb90611836565b600082815260208190526040902060010154611429816117ae565b61072a83836117f0565b600080516020611f3b83398151915261144b816117ae565b816003600082825461145d9190611efb565b909155505060405182815233907f1e24569f7c3f504b5551f16f646a25d65ffa8e302d9b65c1506c24fd10e1ca959060200160405180910390a25050565b600080516020611f3b8339815191526114b3816117ae565b6001600160a01b0384166114d95760405162461bcd60e51b815260040161050f90611d6f565b600083116114f95760405162461bcd60e51b815260040161050f90611ddd565b81156115c6576040516340c10f1960e01b81526001600160a01b038581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561156957600080fd5b505af115801561157d573d6000803e3d6000fd5b50506040518581526001600160a01b03871692503391507f92b755fa8e77bd21bd6dacacaa86ce4f43d5ca8568a52a401dc983cbd51bf67e9060200160405180910390a361072a565b6040516370a0823160e01b815230600482015283907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561162c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116509190611e14565b10156116a85760405162461bcd60e51b815260206004820152602160248201527f5661756c743a20496e73756666696369656e74205553444320696e205661756c6044820152601d60fa1b606482015260840161050f565b60405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b9190611e2d565b506040518381526001600160a01b0385169033907fa97afe0164ab246d52c034daf6c9025ccfc099b55129272a9bb868ec04669ea490602001610e59565b60006001600160e01b03198216637965db0b60e01b14806104cb57506301ffc9a760e01b6001600160e01b03198316146104cb565b6117b88133611840565b50565b6000806117c8848461187d565b905080156110085760008481526001602052604090206117e8908461190f565b509392505050565b6000806117fd8484611924565b905080156110085760008481526001602052604090206117e8908461198f565b600061100883836119a4565b60606000611008836119ce565b60006104cb825490565b61184a828261100f565b6118795760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161050f565b5050565b6000611889838361100f565b611907576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556118bf3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104cb565b5060006104cb565b6000611008836001600160a01b038416611a2a565b6000611930838361100f565b15611907576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104cb565b6000611008836001600160a01b038416611a71565b60008260000182815481106119bb576119bb611f0e565b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611a1e57602002820191906000526020600020905b815481526020019060010190808311611a0a575b50505050509050919050565b6000818152600183016020526040812054611907575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104cb565b60008181526001830160205260408120548015611b5a576000611a95600183611ee8565b8554909150600090611aa990600190611ee8565b9050808214611b0e576000866000018281548110611ac957611ac9611f0e565b9060005260206000200154905080876000018481548110611aec57611aec611f0e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611b1f57611b1f611f24565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104cb565b60009150506104cb565b600060208284031215611b7657600080fd5b81356001600160e01b03198116811461100857600080fd5b600060208284031215611ba057600080fd5b5035919050565b80356001600160a01b0381168114611bbe57600080fd5b919050565b600080600060608486031215611bd857600080fd5b611be184611ba7565b9250611bef60208501611ba7565b929592945050506040919091013590565b60008060408385031215611c1357600080fd5b82359150611c2360208401611ba7565b90509250929050565b60008060008060808587031215611c4257600080fd5b611c4b85611ba7565b9350611c5960208601611ba7565b93969395505050506040820135916060013590565b600060208284031215611c8057600080fd5b61100882611ba7565b60008060408385031215611c9c57600080fd5b611ca583611ba7565b946020939093013593505050565b60008060408385031215611cc657600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015611d165783516001600160a01b0316835260209384019390920191600101611cef565b509095945050505050565b80151581146117b857600080fd5b600080600060608486031215611d4457600080fd5b611d4d84611ba7565b9250602084013591506040840135611d6481611d21565b809150509250925092565b6020808252601a908201527f5661756c743a20496e76616c696420757365722077616c6c6574000000000000604082015260600190565b6020808252601b908201527f5661756c743a2053796e7468206e6f7420726567697374657265640000000000604082015260600190565b6020808252601e908201527f5661756c743a20416d6f756e74206d75737420626520706f7369746976650000604082015260600190565b600060208284031215611e2657600080fd5b5051919050565b600060208284031215611e3f57600080fd5b815161100881611d21565b60208082526025908201527f5661756c743a2073415353455420616d6f756e74206d75737420626520706f73604082015264697469766560d81b606082015260800190565b60208082526023908201527f5661756c743a205553444320616d6f756e74206d75737420626520706f73697460408201526269766560e81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156104cb576104cb611ed2565b808201808211156104cb576104cb611ed2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfe502d3d275257923b2bea6ea25d9631f12369fb532871f13eb85eb09dc0fb4842a2646970667358221220dc7ee51b31a8d5973c22944946f88809f9d3e24f7e24cfe1e67bea4a75d5352064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC50D6DD9 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xD68CEED8 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xEAD5D359 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF36246D1 EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC50D6DD9 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xC7090818 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xA3246AD3 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xACE5398A EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xAD3B1B47 EQ PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x44BA2B24 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x44BA2B24 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x4D394279 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x4E2C151F EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x56B22BF2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3AB5EF82 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x3FA4D814 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11EAC855 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2A314E05 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xC8A95B2 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xE8F61A7 EQ PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x213 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BC PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH2 0x213 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x29B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB3 JUMP JUMPDEST PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x100F JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x29B PUSH32 0xB90E9995C6170FFF8EA03E9AD6919878E483770C237F1A6F330CEAA7112B344A DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x140E JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST PUSH2 0x29B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4CB JUMPI POP PUSH2 0x4CB DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x4E9 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E742073415353455420696E205661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1ADF7C474F4D4C8C8C445AC7BB8DDFD2AC3BC3D69602E520973E1E130B35D059 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x720 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x17BB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x763 DUP3 DUP3 PUSH2 0x17F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x780 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP3 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E74205553444320696E205661756C PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x7420666F722065786368616E6765 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 SWAP1 DUP9 AND SWAP2 CALLER SWAP2 PUSH32 0x9B25B321600B34289C3CBB5C981301C953B6444E24E29B076424380203574704 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA6E DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2055534443207472616E7366657246726F6D20666F7220657863 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1A185B99D94819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP6 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP5 POP DUP10 AND SWAP3 POP CALLER SWAP2 PUSH32 0xF98FEF012E390F285DC060967B20ECC02D87AEB79D028669963FA048E07D5BD SWAP2 ADD PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCC7 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20734153534554207472616E7366657246726F6D206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8F6BB1FE8136C1D257D77E7A1E5BE2C656C9971040CBBF7CCE283EB69A729897 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE59 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE7F DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2055534443207472616E7366657246726F6D206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x5A860BEFDD305E7D99E384272A4B82AAB613EAB23CC3070774A4A8CC0F168100 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1008 SWAP1 DUP4 PUSH2 0x181D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP1 PUSH2 0x4CB SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH32 0xB90E9995C6170FFF8EA03E9AD6919878E483770C237F1A6F330CEAA7112B344A PUSH2 0x107C DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A205A65726F206164647265737320666F722073796E7468000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP2 PUSH32 0xDB3823C581F8B10F079485FCDA8DC823145456BF18CCF7606D21AFDC5F53A042 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x114A DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A2046656520726563697069656E742063616E6E6F74206265207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP2 PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x1211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E7420636F6C6C6563746564206665 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6573 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E7420555344432062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E205661756C7420666F7220666565207769746864726177616C00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1321 SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x5E110F8BC8A20B65DCC87F224BDF1CC039346E267118BAE2739847F07321FFA8 SWAP1 PUSH1 0x20 ADD PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4CB SWAP1 PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1429 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x144B DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x145D SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1E24569F7C3F504B5551F16F646A25D65FFA8E302D9B65C1506C24FD10E1CA95 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14B3 DUP2 PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50F SWAP1 PUSH2 0x1DDD JUMP JUMPDEST DUP2 ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x92B755FA8E77BD21BD6DACACAA86CE4F43D5CA8568A52A401DC983CBD51BF67E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1E14 JUMP JUMPDEST LT ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E73756666696369656E74205553444320696E205661756C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xA97AFE0164AB246D52C034DAF6C9025CCFC099B55129272A9BB868EC04669EA4 SWAP1 PUSH1 0x20 ADD PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4CB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x17B8 DUP2 CALLER PUSH2 0x1840 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17C8 DUP5 DUP5 PUSH2 0x187D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17E8 SWAP1 DUP5 PUSH2 0x190F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17FD DUP5 DUP5 PUSH2 0x1924 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1008 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17E8 SWAP1 DUP5 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 DUP4 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184A DUP3 DUP3 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1879 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x50F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1907 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x18BF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4CB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1930 DUP4 DUP4 PUSH2 0x100F JUMP JUMPDEST ISZERO PUSH2 0x1907 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1008 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19BB JUMPI PUSH2 0x19BB PUSH2 0x1F0E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1A1E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1A0A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1907 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1B5A JUMPI PUSH1 0x0 PUSH2 0x1A95 PUSH1 0x1 DUP4 PUSH2 0x1EE8 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1AA9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1B0E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AC9 JUMPI PUSH2 0x1AC9 PUSH2 0x1F0E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AEC JUMPI PUSH2 0x1AEC PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1008 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BE1 DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BEF PUSH1 0x20 DUP6 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1C23 PUSH1 0x20 DUP5 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C4B DUP6 PUSH2 0x1BA7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C59 PUSH1 0x20 DUP7 ADD PUSH2 0x1BA7 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1008 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA5 DUP4 PUSH2 0x1BA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D16 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1CEF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4D DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1D64 DUP2 PUSH2 0x1D21 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A20496E76616C696420757365722077616C6C6574000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A2053796E7468206E6F7420726567697374657265640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A20416D6F756E74206D75737420626520706F7369746976650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1008 DUP2 PUSH2 0x1D21 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A2073415353455420616D6F756E74206D75737420626520706F73 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6974697665 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5661756C743A205553444320616D6F756E74206D75737420626520706F736974 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x697665 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x1ED2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CB JUMPI PUSH2 0x4CB PUSH2 0x1ED2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID POP 0x2D RETURNDATASIZE 0x27 MSTORE JUMPI SWAP3 EXTCODESIZE 0x2B 0xEA PUSH15 0xA25D9631F12369FB532871F13EB85E 0xB0 SWAP14 0xC0 0xFB BASEFEE TIMESTAMP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH31 0xE51B31A8D5973C22944946F88809F9D3E24F7E24CFE1E67BEA4A75D5352064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"775:10136:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:212:3;;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;729:212:3;;;;;;;;10693:105:24;10781:9;10693:105;;;-1:-1:-1;;;;;661:32:25;;;643:51;;631:2;616:18;10693:105:24;497:203:25;10804:105:24;10892:9;10804:105;;1024:33;;;;;3810:120:0;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1305:25:25;;;1293:2;1278:18;3810:120:0;1159:177:25;5863:653:24;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;:::i;:::-;;:::i;5328:245::-;;;;;;:::i;:::-;;:::i;8144:1406:24:-;;;;;;:::i;:::-;;:::i;1063:36::-;;;;;6710:1318;;;;;;:::i;:::-;;:::i;1106:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5076:689;;;;;;:::i;:::-;;:::i;3430:507::-;;;;;;:::i;:::-;;:::i;957:60::-;;994:23;957:60;;1526:142:3;;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;2187:49::-;;2232:4;2187:49;;2510:136:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9597:270:24:-;;;;;;:::i;:::-;;:::i;10105:552::-;;;;;;:::i;:::-;;:::i;887:64::-;;926:25;887:64;;1200:37;;;;;;1836:131:3;;;;;;:::i;:::-;;:::i;4642:138:0:-;;;;;;:::i;:::-;;:::i;9873:226:24:-;;;;;;:::i;:::-;;:::i;4021:869::-;;;;;;:::i;:::-;;:::i;823:58::-;;-1:-1:-1;;;;;;;;;;;823:58:24;;729:212:3;814:4;-1:-1:-1;;;;;;837:57:3;;-1:-1:-1;;;837:57:3;;:97;;;898:36;922:11;898:23;:36::i;:::-;830:104;729:212;-1:-1:-1;;729:212:3:o;5863:653:24:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;6007:24:24;::::1;5999:63;;;;-1:-1:-1::0;;;5999:63:24::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;6080:32:24;::::1;;::::0;;;:17:::1;:32;::::0;;;;;::::1;;6072:72;;;;-1:-1:-1::0;;;6072:72:24::1;;;;;;;:::i;:::-;6177:1;6162:12;:16;6154:59;;;;-1:-1:-1::0;;;6154:59:24::1;;;;;;;:::i;:::-;6231:51;::::0;-1:-1:-1;;;6231:51:24;;6276:4:::1;6231:51;::::0;::::1;643::25::0;6286:12:24;;-1:-1:-1;;;;;6231:36:24;::::1;::::0;::::1;::::0;616:18:25;;6231:51:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;6223:115;;;::::0;-1:-1:-1;;;6223:115:24;;6855:2:25;6223:115:24::1;::::0;::::1;6837:21:25::0;6894:2;6874:18;;;6867:30;6933:34;6913:18;;;6906:62;-1:-1:-1;;;6984:18:25;;;6977:33;7027:19;;6223:115:24::1;6653:399:25::0;6223:115:24::1;6357:61;::::0;-1:-1:-1;;;6357:61:24;;-1:-1:-1;;;;;7249:32:25;;;6357:61:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;6357:35:24;::::1;::::0;::::1;::::0;7204:18:25;;6357:61:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6481:13;-1:-1:-1::0;;;;;6433:76:24::1;6469:10;-1:-1:-1::0;;;;;6433:76:24::1;6457:10;-1:-1:-1::0;;;;;6433:76:24::1;;6496:12;6433:76;;;;1305:25:25::0;;1293:2;1278:18;;1159:177;6433:76:24::1;;;;;;;;5863:653:::0;;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:12;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;8144:1406:24:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;8612:24:24;::::1;8604:63;;;;-1:-1:-1::0;;;8604:63:24::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8685:33:24;::::1;;::::0;;;:17:::1;:33;::::0;;;;;::::1;;8677:73;;;;-1:-1:-1::0;;;8677:73:24::1;;;;;;;:::i;:::-;8790:1;8768:19;:23;8760:73;;;;-1:-1:-1::0;;;8760:73:24::1;;;;;;;:::i;:::-;8872:1;8851:18;:22;8843:70;;;;-1:-1:-1::0;;;8843:70:24::1;;;;;;;:::i;:::-;9110:69;::::0;-1:-1:-1;;;9110:69:24;;-1:-1:-1;;;;;7249:32:25;;;9110:69:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;9110:36:24;::::1;::::0;::::1;::::0;7204:18:25;;9110:69:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9258:34:24::1;::::0;-1:-1:-1;;;9258:34:24;;9286:4:::1;9258:34;::::0;::::1;643:51:25::0;9296:18:24;;-1:-1:-1;9258:9:24::1;-1:-1:-1::0;;;;;9258:19:24::1;::::0;-1:-1:-1;9258:19:24::1;::::0;616:18:25;;9258:34:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;9250:115;;;::::0;-1:-1:-1;;;9250:115:24;;8598:2:25;9250:115:24::1;::::0;::::1;8580:21:25::0;8637:2;8617:18;;;8610:30;8676:34;8656:18;;;8649:62;-1:-1:-1;;;8727:18:25;;;8720:44;8781:19;;9250:115:24::1;8396:410:25::0;9250:115:24::1;9375:50;::::0;-1:-1:-1;;;9375:50:24;;-1:-1:-1;;;;;7249:32:25;;;9375:50:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;9375:9:24::1;:18;::::0;::::1;::::0;7204::25;;9375:50:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9441:102:24::1;::::0;;8985:25:25;;;9041:2;9026:18;;9019:34;;;-1:-1:-1;;;;;9441:102:24;;::::1;::::0;;;::::1;::::0;9463:10:::1;::::0;9441:102:::1;::::0;8958:18:25;9441:102:24::1;;;;;;;;8144:1406:::0;;;;;:::o;6710:1318::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;7168:24:24;::::1;7160:63;;;;-1:-1:-1::0;;;7160:63:24::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7241:33:24;::::1;;::::0;;;:17:::1;:33;::::0;;;;;::::1;;7233:73;;;;-1:-1:-1::0;;;7233:73:24::1;;;;;;;:::i;:::-;7344:1;7324:17;:21;7316:69;;;;-1:-1:-1::0;;;7316:69:24::1;;;;;;;:::i;:::-;7424:1;7403:18;:22;7395:72;;;;-1:-1:-1::0;;;7395:72:24::1;;;;;;;:::i;:::-;7559:68;::::0;-1:-1:-1;;;7559:68:24;;-1:-1:-1;;;;;9284:32:25;;;7559:68:24::1;::::0;::::1;9266:51:25::0;7602:4:24::1;9333:18:25::0;;;9326:60;9402:18;;;9395:34;;;7559:9:24::1;:22;::::0;::::1;::::0;9239:18:25;;7559:68:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7551:125;;;::::0;-1:-1:-1;;;7551:125:24;;9642:2:25;7551:125:24::1;::::0;::::1;9624:21:25::0;9681:2;9661:18;;;9654:30;9720:34;9700:18;;;9693:62;-1:-1:-1;;;9771:18:25;;;9764:42;9823:19;;7551:125:24::1;9440:408:25::0;7551:125:24::1;7841:64;::::0;-1:-1:-1;;;7841:64:24;;-1:-1:-1;;;;;7249:32:25;;;7841:64:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;7841:32:24;::::1;::::0;::::1;::::0;7204:18:25;;7841:64:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7921:100:24::1;::::0;;8985:25:25;;;9041:2;9026:18;;9019:34;;;-1:-1:-1;;;;;7921:100:24;;::::1;::::0;-1:-1:-1;7921:100:24;::::1;::::0;-1:-1:-1;7943:10:24::1;::::0;7921:100:::1;::::0;8958:18:25;7921:100:24::1;8811:248:25::0;5076:689:24;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;5217:24:24;::::1;5209:63;;;;-1:-1:-1::0;;;5209:63:24::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5290:32:24;::::1;;::::0;;;:17:::1;:32;::::0;;;;;::::1;;5282:72;;;;-1:-1:-1::0;;;5282:72:24::1;;;;;;;:::i;:::-;5387:1;5372:12;:16;5364:59;;;;-1:-1:-1::0;;;5364:59:24::1;;;;;;;:::i;:::-;5563:80;::::0;-1:-1:-1;;;5563:80:24;;-1:-1:-1;;;;;9284:32:25;;;5563:80:24::1;::::0;::::1;9266:51:25::0;5623:4:24::1;9333:18:25::0;;;9326:60;9402:18;;;9395:34;;;5563:39:24;::::1;::::0;::::1;::::0;9239:18:25;;5563:80:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5555:126;;;::::0;-1:-1:-1;;;5555:126:24;;10055:2:25;5555:126:24::1;::::0;::::1;10037:21:25::0;10094:2;10074:18;;;10067:30;10133:34;10113:18;;;10106:62;-1:-1:-1;;;10184:18:25;;;10177:31;10225:19;;5555:126:24::1;9853:397:25::0;5555:126:24::1;5730:13;-1:-1:-1::0;;;;;5696:62:24::1;5718:10;-1:-1:-1::0;;;;;5696:62:24::1;;5745:12;5696:62;;;;1305:25:25::0;;1293:2;1278:18;;1159:177;5696:62:24::1;;;;;;;;5076:689:::0;;;;:::o;3430:507::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3538:24:24;::::1;3530:63;;;;-1:-1:-1::0;;;3530:63:24::1;;;;;;;:::i;:::-;3624:1;3611:10;:14;3603:57;;;;-1:-1:-1::0;;;3603:57:24::1;;;;;;;:::i;:::-;3769:61;::::0;-1:-1:-1;;;3769:61:24;;-1:-1:-1;;;;;9284:32:25;;;3769:61:24::1;::::0;::::1;9266:51:25::0;3812:4:24::1;9333:18:25::0;;;9326:60;9402:18;;;9395:34;;;3769:9:24::1;:22;::::0;::::1;::::0;9239:18:25;;3769:61:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3761:105;;;::::0;-1:-1:-1;;;3761:105:24;;10457:2:25;3761:105:24::1;::::0;::::1;10439:21:25::0;10496:2;10476:18;;;10469:30;10535:33;10515:18;;;10508:61;10586:18;;3761:105:24::1;10255:355:25::0;3761:105:24::1;3881:49;::::0;1305:25:25;;;-1:-1:-1;;;;;3881:49:24;::::1;::::0;3895:10:::1;::::0;3881:49:::1;::::0;1293:2:25;1278:18;3881:49:24::1;;;;;;;;3430:507:::0;;;:::o;1526:142:3:-;1607:7;1633:18;;;:12;:18;;;;;:28;;1655:5;1633:21;:28::i;:::-;1626:35;1526:142;-1:-1:-1;;;1526:142:3:o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;2510::3:-;2612:18;;;;:12;:18;;;;;2577:16;;2612:27;;:25;:27::i;9597:270:24:-;926:25;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;9693:27:24;::::1;9685:69;;;::::0;-1:-1:-1;;;9685:69:24;;10817:2:25;9685:69:24::1;::::0;::::1;10799:21:25::0;10856:2;10836:18;;;10829:30;10895:31;10875:18;;;10868:59;10944:18;;9685:69:24::1;10615:353:25::0;9685:69:24::1;-1:-1:-1::0;;;;;9764:32:24;::::1;;::::0;;;:17:::1;:32;::::0;;;;;:39;;-1:-1:-1;;9764:39:24::1;9799:4;9764:39;::::0;;9818:42;9834:10:::1;::::0;9818:42:::1;::::0;::::1;9597:270:::0;;:::o;10105:552::-;994:23;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;10207:16:24;::::1;10199:72;;;::::0;-1:-1:-1;;;10199:72:24;;11175:2:25;10199:72:24::1;::::0;::::1;11157:21:25::0;11214:2;11194:18;;;11187:30;11253:34;11233:18;;;11226:62;-1:-1:-1;;;11304:18:25;;;11297:41;11355:19;;10199:72:24::1;10973:407:25::0;10199:72:24::1;10315:10;10289:22;;:36;;10281:83;;;::::0;-1:-1:-1;;;10281:83:24;;11587:2:25;10281:83:24::1;::::0;::::1;11569:21:25::0;11626:2;11606:18;;;11599:30;11665:34;11645:18;;;11638:62;-1:-1:-1;;;11716:18:25;;;11709:32;11758:19;;10281:83:24::1;11385:398:25::0;10281:83:24::1;10382:34;::::0;-1:-1:-1;;;10382:34:24;;10410:4:::1;10382:34;::::0;::::1;643:51:25::0;10420:10:24;;10382:9:::1;-1:-1:-1::0;;;;;10382:19:24::1;::::0;::::1;::::0;616:18:25;;10382:34:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;10374:121;;;::::0;-1:-1:-1;;;10374:121:24;;11990:2:25;10374:121:24::1;::::0;::::1;11972:21:25::0;12029:2;12009:18;;;12002:30;12068:34;12048:18;;;12041:62;12139:30;12119:18;;;12112:58;12187:19;;10374:121:24::1;11788:424:25::0;10374:121:24::1;10540:10;10514:22;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10560:34:24::1;::::0;-1:-1:-1;;;10560:34:24;;-1:-1:-1;;;;;7249:32:25;;;10560:34:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;10560:9:24::1;:18;::::0;::::1;::::0;7204::25;;10560:34:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10609:41:24::1;::::0;1305:25:25;;;-1:-1:-1;;;;;10609:41:24;::::1;::::0;10623:10:::1;::::0;10609:41:::1;::::0;1293:2:25;1278:18;10609:41:24::1;1159:177:25::0;1836:131:3;1907:7;1933:18;;;:12;:18;;;;;:27;;:25;:27::i;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;9873:226:24:-:0;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;10025:13:24::1;9999:22;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10053:39:24::1;::::0;1305:25:25;;;10066:10:24::1;::::0;10053:39:::1;::::0;1293:2:25;1278:18;10053:39:24::1;;;;;;;9873:226:::0;;:::o;4021:869::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4143:24:24;::::1;4135:63;;;;-1:-1:-1::0;;;4135:63:24::1;;;;;;;:::i;:::-;4225:1;4216:6;:10;4208:53;;;;-1:-1:-1::0;;;4208:53:24::1;;;;;;;:::i;:::-;4360:14;4356:528;;;4464:34;::::0;-1:-1:-1;;;4464:34:24;;-1:-1:-1;;;;;7249:32:25;;;4464:34:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;4464:9:24::1;:14;::::0;::::1;::::0;7204:18:25;;4464:34:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4571:45:24::1;::::0;1305:25:25;;;-1:-1:-1;;;;;4571:45:24;::::1;::::0;-1:-1:-1;4585:10:24::1;::::0;-1:-1:-1;4571:45:24::1;::::0;1293:2:25;1278:18;4571:45:24::1;;;;;;;4356:528;;;4675:34;::::0;-1:-1:-1;;;4675:34:24;;4703:4:::1;4675:34;::::0;::::1;643:51:25::0;4713:6:24;;4675:9:::1;-1:-1:-1::0;;;;;4675:19:24::1;::::0;::::1;::::0;616:18:25;;4675:34:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;4667:90;;;::::0;-1:-1:-1;;;4667:90:24;;12814:2:25;4667:90:24::1;::::0;::::1;12796:21:25::0;12853:2;12833:18;;;12826:30;12892:34;12872:18;;;12865:62;-1:-1:-1;;;12943:18:25;;;12936:31;12984:19;;4667:90:24::1;12612:397:25::0;4667:90:24::1;4771:38;::::0;-1:-1:-1;;;4771:38:24;;-1:-1:-1;;;;;7249:32:25;;;4771:38:24::1;::::0;::::1;7231:51:25::0;7298:18;;;7291:34;;;4771:9:24::1;:18;::::0;::::1;::::0;7204::25;;4771:38:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4828:45:24::1;::::0;1305:25:25;;;-1:-1:-1;;;;;4828:45:24;::::1;::::0;4842:10:::1;::::0;4828:45:::1;::::0;1293:2:25;1278:18;4828:45:24::1;1159:177:25::0;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:16;;;2724:36:0;763:146:16;3199:103:0;3265:30;3276:4;735:10:12;3265::0;:30::i;:::-;3199:103;:::o;2748:257:3:-;2834:4;2850:12;2865:31;2882:4;2888:7;2865:16;:31::i;:::-;2850:46;;2910:7;2906:69;;;2933:18;;;;:12;:18;;;;;:31;;2956:7;2933:22;:31::i;:::-;;2991:7;2748:257;-1:-1:-1;;;2748:257:3:o;3108:262::-;3195:4;3211:12;3226:32;3244:4;3250:7;3226:17;:32::i;:::-;3211:47;;3272:7;3268:72;;;3295:18;;;;:12;:18;;;;;:34;;3321:7;3295:25;:34::i;10987:156:20:-;11061:7;11111:22;11115:3;11127:5;11111:3;:22::i;11683:273::-;11746:16;11774:22;11799:19;11807:3;11799:7;:19::i;10530:115::-;10593:7;10619:19;10627:3;5202:18;;5120:107;3432:197:0;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;7249:32:25;;3565:47:0;;;7231:51:25;7298:18;;;7291:34;;;7204:18;;3565:47:0;7057:274:25;3515:108:0;3432:197;;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:12;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;9332:150:20;9402:4;9425:50;9430:3;-1:-1:-1;;;;;9450:23:20;;9425:4;:50::i;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:12;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;9650:156:20;9723:4;9746:53;9754:3;-1:-1:-1;;;;;9774:23:20;;9746:7;:53::i;5569:118::-;5636:7;5662:3;:11;;5674:5;5662:18;;;;;;;;:::i;:::-;;;;;;;;;5655:25;;5569:118;;;;:::o;6227:109::-;6283:16;6318:3;:11;;6311:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6227:109;;;:::o;2336:406::-;2399:4;5006:21;;;:14;;;:21;;;;;;2415:321;;-1:-1:-1;2457:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2639:18;;2615:21;;;:14;;;:21;;;;;;:42;;;;2671:11;;2910:1368;2976:4;3105:21;;;:14;;;:21;;;;;;3141:13;;3137:1135;;3508:18;3529:12;3540:1;3529:8;:12;:::i;:::-;3575:18;;3508:33;;-1:-1:-1;3555:17:20;;3575:22;;3596:1;;3575:22;:::i;:::-;3555:42;;3630:9;3616:10;:23;3612:378;;3659:17;3679:3;:11;;3691:9;3679:22;;;;;;;;:::i;:::-;;;;;;;;;3659:42;;3826:9;3800:3;:11;;3812:10;3800:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;3939:25;;;:14;;;:25;;;;;:36;;;3612:378;4068:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4171:3;:14;;:21;4186:5;4171:21;;;;;;;;;;;4164:28;;;4214:4;4207:11;;;;;;;3137:1135;4256:5;4249:12;;;;;14:286:25;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;928:226;987:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:52;;;1056:1;1053;1046:12;1008:52;-1:-1:-1;1101:23:25;;928:226;-1:-1:-1;928:226:25:o;1341:173::-;1409:20;;-1:-1:-1;;;;;1458:31:25;;1448:42;;1438:70;;1504:1;1501;1494:12;1438:70;1341:173;;;:::o;1519:374::-;1596:6;1604;1612;1665:2;1653:9;1644:7;1640:23;1636:32;1633:52;;;1681:1;1678;1671:12;1633:52;1704:29;1723:9;1704:29;:::i;:::-;1694:39;;1752:38;1786:2;1775:9;1771:18;1752:38;:::i;:::-;1519:374;;1742:48;;-1:-1:-1;;;1859:2:25;1844:18;;;;1831:32;;1519:374::o;1898:300::-;1966:6;1974;2027:2;2015:9;2006:7;2002:23;1998:32;1995:52;;;2043:1;2040;2033:12;1995:52;2088:23;;;-1:-1:-1;2154:38:25;2188:2;2173:18;;2154:38;:::i;:::-;2144:48;;1898:300;;;;;:::o;2203:495::-;2289:6;2297;2305;2313;2366:3;2354:9;2345:7;2341:23;2337:33;2334:53;;;2383:1;2380;2373:12;2334:53;2406:29;2425:9;2406:29;:::i;:::-;2396:39;;2454:38;2488:2;2477:9;2473:18;2454:38;:::i;:::-;2203:495;;2444:48;;-1:-1:-1;;;;2561:2:25;2546:18;;2533:32;;2662:2;2647:18;2634:32;;2203:495::o;2929:186::-;2988:6;3041:2;3029:9;3020:7;3016:23;3012:32;3009:52;;;3057:1;3054;3047:12;3009:52;3080:29;3099:9;3080:29;:::i;3120:300::-;3188:6;3196;3249:2;3237:9;3228:7;3224:23;3220:32;3217:52;;;3265:1;3262;3255:12;3217:52;3288:29;3307:9;3288:29;:::i;:::-;3278:39;3386:2;3371:18;;;;3358:32;;-1:-1:-1;;;3120:300:25:o;3425:346::-;3493:6;3501;3554:2;3542:9;3533:7;3529:23;3525:32;3522:52;;;3570:1;3567;3560:12;3522:52;-1:-1:-1;;3615:23:25;;;3735:2;3720:18;;;3707:32;;-1:-1:-1;3425:346:25:o;3776:637::-;3966:2;3978:21;;;4048:13;;3951:18;;;4070:22;;;3918:4;;4149:15;;;4123:2;4108:18;;;3918:4;4192:195;4206:6;4203:1;4200:13;4192:195;;;4271:13;;-1:-1:-1;;;;;4267:39:25;4255:52;;4336:2;4362:15;;;;4327:12;;;;4303:1;4221:9;4192:195;;;-1:-1:-1;4404:3:25;;3776:637;-1:-1:-1;;;;;3776:637:25:o;4831:118::-;4917:5;4910:13;4903:21;4896:5;4893:32;4883:60;;4939:1;4936;4929:12;4954:435;5028:6;5036;5044;5097:2;5085:9;5076:7;5072:23;5068:32;5065:52;;;5113:1;5110;5103:12;5065:52;5136:29;5155:9;5136:29;:::i;:::-;5126:39;-1:-1:-1;5234:2:25;5219:18;;5206:32;;-1:-1:-1;5314:2:25;5299:18;;5286:32;5327:30;5286:32;5327:30;:::i;:::-;5376:7;5366:17;;;4954:435;;;;;:::o;5394:350::-;5596:2;5578:21;;;5635:2;5615:18;;;5608:30;5674:28;5669:2;5654:18;;5647:56;5735:2;5720:18;;5394:350::o;5749:351::-;5951:2;5933:21;;;5990:2;5970:18;;;5963:30;6029:29;6024:2;6009:18;;6002:57;6091:2;6076:18;;5749:351::o;6105:354::-;6307:2;6289:21;;;6346:2;6326:18;;;6319:30;6385:32;6380:2;6365:18;;6358:60;6450:2;6435:18;;6105:354::o;6464:184::-;6534:6;6587:2;6575:9;6566:7;6562:23;6558:32;6555:52;;;6603:1;6600;6593:12;6555:52;-1:-1:-1;6626:16:25;;6464:184;-1:-1:-1;6464:184:25:o;7336:245::-;7403:6;7456:2;7444:9;7435:7;7431:23;7427:32;7424:52;;;7472:1;7469;7462:12;7424:52;7504:9;7498:16;7523:28;7545:5;7523:28;:::i;7586:401::-;7788:2;7770:21;;;7827:2;7807:18;;;7800:30;7866:34;7861:2;7846:18;;7839:62;-1:-1:-1;;;7932:2:25;7917:18;;7910:35;7977:3;7962:19;;7586:401::o;7992:399::-;8194:2;8176:21;;;8233:2;8213:18;;;8206:30;8272:34;8267:2;8252:18;;8245:62;-1:-1:-1;;;8338:2:25;8323:18;;8316:33;8381:3;8366:19;;7992:399::o;12217:127::-;12278:10;12273:3;12269:20;12266:1;12259:31;12309:4;12306:1;12299:15;12333:4;12330:1;12323:15;12349:128;12416:9;;;12437:11;;;12434:37;;;12451:18;;:::i;12482:125::-;12547:9;;;12568:10;;;12565:36;;;12581:18;;:::i;13293:127::-;13354:10;13349:3;13345:20;13342:1;13335:31;13385:4;13382:1;13375:15;13409:4;13406:1;13399:15;13425:127;13486:10;13481:3;13477:20;13474:1;13467:31;13517:4;13514:1;13507:15;13541:4;13538:1;13531:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","CORE_ROLE()":"f36246d1","DEFAULT_ADMIN_ROLE()":"a217fddf","GATEWAY_ROLE()":"c50d6dd9","cxptToken()":"3fa4d814","depositSynthToVault(address,address,uint256)":"4e2c151f","depositUSDC(address,uint256)":"56b22bf2","exchangeSAssetToUSDC(address,address,uint256,uint256)":"3ab5ef82","exchangeUSDCToSAsset(address,address,uint256,uint256)":"44ba2b24","getCXPTTokenAddress()":"0e8f61a7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getRoleMembers(bytes32)":"a3246ad3","getUSDCTokenAddress()":"0c8a95b2","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isRegisteredSynth(address)":"4d394279","recordFees(uint256)":"d68ceed8","registerSynth(address)":"ace5398a","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","totalFeesCollectedUSDC()":"c7090818","usdcToken()":"11eac855","withdraw(address,uint256,bool)":"ead5d359","withdrawFees(address,uint256)":"ad3b1b47","withdrawSynthFromVault(address,address,uint256)":"2a314e05"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cxptTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coreAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gatewayAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"DepositedUSDC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcFeeAmount\",\"type\":\"uint256\"}],\"name\":\"FeesRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sAssetContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sAssetAmountBurned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmountReceived\",\"type\":\"uint256\"}],\"name\":\"SAssetToUSDCExchanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sAssetAmount\",\"type\":\"uint256\"}],\"name\":\"SynthDepositedToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registrar\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"}],\"name\":\"SynthRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sAssetAmount\",\"type\":\"uint256\"}],\"name\":\"SynthWithdrawnFromVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sAssetContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmountSpent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sAssetAmountMinted\",\"type\":\"uint256\"}],\"name\":\"USDCToSAssetExchanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cxptAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnCXPT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"coreAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnUSDC\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CORE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GATEWAY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cxptToken\",\"outputs\":[{\"internalType\":\"contract CXPTToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sAssetAmount\",\"type\":\"uint256\"}],\"name\":\"depositSynthToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sAssetContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sAssetAmountToSpend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmountToCredit\",\"type\":\"uint256\"}],\"name\":\"exchangeSAssetToUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sAssetContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmountToSpend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sAssetAmountToMint\",\"type\":\"uint256\"}],\"name\":\"exchangeUSDCToSAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCXPTTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDCTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegisteredSynth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcFeeAmount\",\"type\":\"uint256\"}],\"name\":\"recordFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"}],\"name\":\"registerSynth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesCollectedUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawAsCxpt\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"synthContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sAssetAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawSynthFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb54d1b001fab4e6ed9fa6d70928ed13356913b0a63dcc56ac5d95c83de66136d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa06c427539f9298e0a8c3be712f876d6907eaeb03f2d8968d70b1cc798aecf\",\"dweb:/ipfs/QmdefyZfpkqWbBSUMtL8wXwoNJYeyAoKDMjTtxXRYbgj1f\"]},\"@openzeppelin/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xca774fbe0568762efdc1a7cba31f09549c7fa96dbe97410f4843fa2f0bc000a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0187ffdbf3d61b6d86cba4fcd9826e53d876987d620533ee84c681bdaf0f3ba3\",\"dweb:/ipfs/QmVJDqdJv6uzHY7ifncfv2QJep8XTzS3bGb4s5Exhuv86m\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"contracts/CXPTToken.sol\":{\"keccak256\":\"0xf7c1cf6f4cd0b1eef4e07975a4837b59056bac28c074135b3b96447db5c5f7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919427838950b573448476b71320ad0d91f3246ccbd41fe333608a77df35c247\",\"dweb:/ipfs/QmUa2z4XdeEzNRWwWytDin9ijMp4pL3WHTpscTHo2JbVzc\"]},\"contracts/SynthERC20.sol\":{\"keccak256\":\"0x4e2a0438891bf54b75fa6c4fd7857b6049086476f26cf35e6d141c4947bcf4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a15eca5afb3c8802f961804584a3f174fbfed44320c9c4a5e8a58bdeb96c539c\",\"dweb:/ipfs/QmQurwf5qgFgfxgak1fN6S5XcDaz8QDrMBAz8BMxd7dcyK\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0x41db37f809850ba658521437d31b0501f3bad6beed39f5d293769ba1ba220e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31aab0ccddd7cab13800546e05e6eb3b71c05065818022b48e047d582eb64f9f\",\"dweb:/ipfs/QmTyTKXgaxu32U3kCiTX92ugjcMsTUSVaRP6XynBoQZjMe\"]}},\"version\":1}"}}}}}