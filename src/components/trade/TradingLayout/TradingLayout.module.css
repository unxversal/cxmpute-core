/* src/components/trade/TradingLayout/TradingLayout.module.css */
.tradingLayoutWrapper {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Full viewport height */
  width: 100%;
  overflow: hidden; /* Prevent wrapper from scrolling, individual panels will scroll */
  background-color: #131722; /* Base dark background for the entire trading page */
  color: #d1d4dc;
  padding: 8px; /* Small padding around the entire layout */
  gap: 8px; /* Gap between topBar and mainContent */
}

.topBar {
  display: flex;
  justify-content: space-between; /* Or flex-start, depending on content */
  align-items: center;
  padding: 6px 8px; /* Compact padding */
  background-color: #1e222d; /* Slightly different from main bg for distinction */
  border-radius: 6px;
  border: 1px solid #2a2f3b;
  flex-shrink: 0; /* Prevent top bar from shrinking */
  min-height: 40px; /* Minimum height for the top bar */
}

.mainContent {
  display: grid;
  /* Define a 3-column layout for larger screens */
  /* Adjust fr units based on desired relative widths */
  /* Left col (OrderBook/Trades), Center col (Chart/OrderEntry), Right col (Account) */
  grid-template-columns: 0.75fr 2fr 1fr; /* Example: OrderBook smaller, Chart largest */
  /* A common alternative: grid-template-columns: 260px 1fr 300px; for fixed sidebars */
  grid-template-rows: 1fr; /* Single row that fills height */
  gap: 8px; /* Gap between columns */
  flex-grow: 1; /* Take remaining vertical space */
  overflow: hidden; /* Prevent main content from causing page scroll */
  height: calc(100% - (var(--top-bar-height, 40px) + 8px)); /* Adjust if topBar height changes */
}

.column {
  display: flex;
  flex-direction: column;
  gap: 8px; /* Gap between panels within a column */
  overflow: hidden; /* Prevent column itself from scrolling */
}

.leftColumn .orderBookPanel {
    flex-basis: 65%; /* Example: Order book takes ~65% of left column height */
    flex-grow: 1; /* Allow to grow if recent trades is smaller or not present */
    min-height: 250px;
}
.leftColumn .recentTradesPanel {
    flex-basis: 35%;
    flex-grow: 1;
    min-height: 150px;
}

.centerColumn .marketInfoPanel {
    flex-shrink: 0; /* MarketInfoBar should not shrink */
}
.centerColumn .chartPanel {
    flex-grow: 3; /* Chart takes most space */
    min-height: 300px; /* Minimum height for the chart */
}
.centerColumn .orderEntryPanel {
    flex-grow: 1; /* Order entry takes remaining space or fixed height */
    min-height: 250px; /* Ensure order entry is usable */
    max-height: 45%; /* Limit order entry height if chart is large */
}

.rightColumn .accountInfoPanel {
    flex-grow: 1; /* Fill the entire right column */
}


.panel {
  /* Individual panels will have their own specific styling (background, border etc.) */
  /* This class is for layout participation if needed, e.g. display: flex on panel itself */
  display: flex; /* Make panels flex containers so their children can use flex-grow */
  flex-direction: column; /* Default children stacking */
  overflow: hidden; /* Prevent panels from overflowing their grid cell */
  /* border-radius: 6px; */ /* Apply radius to panels if they don't have it */
  /* background-color: #171b26; */ /* Default panel background if not set by specific panel */
}

/* --- Responsive Adjustments --- */

/* Example: Medium screens (e.g., tablets) - might merge right column or make center wider */
@media (max-width: 1200px) {
  .mainContent {
    grid-template-columns: minmax(240px, 1fr) 2fr; /* Left and Center, Right column might wrap or hide */
    /* Or grid-template-columns: 1fr 1.5fr; to make them more equal */
  }
  .rightColumn {
    /* Option 1: Hide right column (if not essential or moved to tabs) */
    /* display: none; */ 
    
    /* Option 2: Make it a third row or allow it to wrap if grid is not fixed rows */
    /* For this example, we'll assume it becomes less prominent or is handled by parent component logic */
    min-width: 280px; /* If it remains, ensure it has a min-width */
  }
  .centerColumn .orderEntryPanel {
    max-height: 50%;
  }
}

/* Example: Smaller screens (e.g., large phones, small tablets) - Stack columns */
@media (max-width: 900px) {
  .tradingLayoutWrapper {
      height: auto; /* Allow page to scroll on mobile */
      min-height: 100vh;
      padding: 6px;
      gap: 6px;
  }
  .topBar {
      padding: 6px;
      flex-wrap: wrap; /* Allow top bar items to wrap */
      gap: 6px;
  }
  .mainContent {
    display: flex; /* Switch to flex for easier stacking */
    flex-direction: column;
    height: auto; /* Allow content to determine height */
  }
  .column {
    width: 100%;
    min-height: 200px; /* Give columns some min height when stacked */
  }
  .leftColumn, .centerColumn, .rightColumn {
    order: 0; /* Reset order for stacking if needed, or define specific order */
  }
  /* Adjust panel heights/flex for stacked view */
  .leftColumn .orderBookPanel { flex-basis: auto; min-height: 300px; max-height: 40vh; }
  .leftColumn .recentTradesPanel { flex-basis: auto; min-height: 200px; max-height: 30vh; }
  .centerColumn .chartPanel { flex-basis: auto; min-height: 300px; max-height: 50vh; }
  .centerColumn .orderEntryPanel { flex-basis: auto; min-height: 280px; max-height: none; }
  .rightColumn .accountInfoPanel { flex-basis: auto; min-height: 300px; }
}

/* Hide scrollbars on main content and columns if individual panels handle their scrolling */
.mainContent::-webkit-scrollbar,
.column::-webkit-scrollbar {
  display: none;
}
.mainContent, .column {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}