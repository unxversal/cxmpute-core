/* src/components/dashboard/dashboard.module.css */
.dashboardContainer {
  display: flex;
  flex-direction: column;
  gap: 20px; /* Gap between toggle and content */
  width: 100%;
  max-width: 1200px; /* Max width for the dashboard content area */
  margin: 0 auto; /* Center the dashboard */
  padding: 20px 0; /* Vertical padding for the overall dashboard page */
}

.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px;
  min-height: 300px; /* Ensure it takes some space */
  color: #a0aec0;
}

.toggleSection {
  display: flex;
  justify-content: center; /* Center the toggle component */
  margin-bottom: 10px; /* Space below the toggle */
  width: 100%;
}

.contentSection {
  width: 100%;
  /* The UserDashboardContent and ProviderDashboardContent will manage their own grid layouts */
}

.accessDeniedCard {
  background-color: #1e222d; /* Consistent card background */
  padding: 25px 30px;
  border-radius: 8px;
  border: 1px solid #2a2f3b;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  color: #d1d4dc;
  text-align: center;
}
.accessDeniedCard h3 {
  font-size: 1.2rem;
  color: var(--cxmpute-yellow); /* Or a warning color */
  margin-bottom: 10px;
}
.accessDeniedCard p {
  font-size: 0.9rem;
  color: #a0aec0;
  margin-bottom: 15px;
}

/* Media query for smaller screens if toggle buttons need to stack or justify differently */
@media (max-width: 600px) {
  .toggleSection {
    /* Example: If toggle buttons should stack or wrap on very small screens */
    /* This depends on the DashboardToggle.module.css handling its internal flex-wrap */
  }
  .dashboardContainer {
    padding: 15px 10px; /* Reduce padding on small screens */
  }
}

.pageLoadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start; /* Align to top */
  gap: 20px;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 40px 15px; /* More padding for loading state */
  min-height: 60vh; /* Ensure it takes visible space */
}
/* Style for SkeletonLoader if its default dark theme clashes */
.pageLoadingContainer :global(.skeleton) { /* Target nested skeleton divs */
    background-color: #e0e0e0 !important; 
}
.pageLoadingContainer :global(.skeleton::before) {
    background: linear-gradient(to right, transparent 0%, #f0f0f0 50%, transparent 100%) !important;
}
