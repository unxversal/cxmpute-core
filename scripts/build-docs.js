const fs = require('fs');
const path = require('path');

// Directory containing markdown files
const docsDir = path.join(__dirname, '../public/docs');
const outputFile = path.join(__dirname, '../src/lib/docs-content.ts');

// Function to read and process markdown files
function buildDocsJson() {
  const docsContent = {};
  
  try {
    // Read all files in the docs directory
    const files = fs.readdirSync(docsDir);
    
    // Process each markdown file
    files.forEach(file => {
      if (file.endsWith('.md')) {
        const filePath = path.join(docsDir, file);
        const content = fs.readFileSync(filePath, 'utf8');
        
        // Use filename without extension as key
        const key = file.replace('.md', '');
        docsContent[key] = content;
        
        console.log(`‚úÖ Processed: ${file}`);
      }
    });
    
    // Generate TypeScript content
    const tsContent = `// Auto-generated documentation content
// Do not edit this file directly - run 'npm run build:docs' to regenerate

export const docsContent: Record<string, string> = ${JSON.stringify(docsContent, null, 2)};

export default docsContent;
`;

    // Write the TypeScript file
    fs.writeFileSync(outputFile, tsContent);
    console.log(`\nüéâ Successfully built docs TypeScript with ${Object.keys(docsContent).length} documents`);
    console.log(`üìÑ Output: ${outputFile}`);
    
  } catch (error) {
    console.error('‚ùå Error building docs JSON:', error);
    process.exit(1);
  }
}

// Run the build process
buildDocsJson(); 